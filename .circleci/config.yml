version: 2
jobs:
  system:
    docker:
      - image: circleci/node:10.15-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn build
      - run:
          name: Run Continuous Integration checks
          command: |
            yarn ci-check
            yarn lerna run ci-check

  deploy:
    docker:
      - image: circleci/node:10.15-browsers
    working_directory: /home/circleci/project
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn build
      - run:
          name: Install ibmcloud CLI
          command: curl -fsSL https://clis.ng.bluemix.net/install/linux | sh
      - run:
          name: IBM Cloud Login
          command: |
            ibmcloud login \
              --apikey $CLOUD_API_KEY \
              -a https://api.ng.bluemix.net \
              -o ibm-digital-design

            ibmcloud target -s ibmdotcom-production

            ibmcloud cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
            ibmcloud cf install-plugin blue-green-deploy -f -r CF-Community
      - deploy:
          name: deploy package react
          command: |
            cd $CIRCLE_WORKING_DIRECTORY/packages/react
            yarn build-storybook

            ibmcloud cf blue-green-deploy ibmdotcomlibrary-react \
              -f manifest.yml \
              --delete-old-apps
      - deploy:
          name: deploy package services
          command: |
            cd $CIRCLE_WORKING_DIRECTORY/packages/services
            yarn jsdoc

            ibmcloud cf blue-green-deploy ibmdotcomlibrary-services \
            -f manifest.yml \
            --delete-old-apps
      - deploy:
          name: deploy package utilities
          command: |
            cd $CIRCLE_WORKING_DIRECTORY/packages/utilities
            yarn jsdoc

            ibmcloud cf blue-green-deploy ibmdotcomlibrary-utilities \
            -f manifest.yml \
            --delete-old-apps


  release:
    docker:
      - image: circleci/node:10.15-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn build
      - run:
          name: Publish canary packages
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
            yarn lerna publish --canary minor --dist-tag canary --no-push --no-git-tag-version --yes

  artifacts:
    docker:
      - image: circleci/node:10.15-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.16.0
            # Reference:
            # https://circleci.com/docs/2.0/env-vars/#example-configuration-of-environment-variables
            echo 'export PATH="$HOME/.yarn/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install dependencies
          command: yarn install --offline --frozen-lockfile
      - run:
          name: Build packages
          command: yarn build
      - run:
          name: Push generated artifacts to GitHub
          command: |
            if [ -n "$(git status --porcelain)" ]; then
              echo "Our git status is not clean. Checking in the following files:";
              echo "$(git status --porcelain)";
              git config --global credential.helper 'cache --timeout=120'
              git config --global user.email "digdes@us.ibm.com"
              git config --global user.name "ibmdotcom-bot"
              git add -A
              git commit -m "chore(project): sync generated files [skip ci]"
              # Pipe to /dev/null to prevent any token leaks in CI output
              git push -q \
                https://{$GH_TOKEN}:@github.com/carbon-design-system/ibm-dotcom-library.git \
                master \
                > /dev/null 2>&1
            fi

workflows:
  version: 2
  main:
    jobs:
      - system
      - artifacts:
          requires:
            - system
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - system
            - artifacts
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - system
            - artifacts
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

