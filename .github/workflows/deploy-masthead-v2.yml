name: deploy-masthead-v2 (Deploy storybook environments to Github Pages)

on:
  push:
    branches:
      - feat/masthead-v2

concurrency:
  group: deploy-masthead-v2-${{ github.ref }}
  cancel-in-progress: true

jobs:
  web-components:
    if: github.repository == 'carbon-design-system/carbon-for-ibm-dotcom'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.MERGE_ACTION}}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
      - name: Build project
        run: yarn lerna run --stream build

      - name: Set env vars
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/web-components/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
          PROFILE_HOST: ${{ secrets.PROFILE_HOST }}
      - name: Building @carbon/ibmdotcom-web-components storybook
        run: yarn build-storybook
        working-directory: packages/web-components
      - name: Move storybook to build folder
        run: |
          rm packages/web-components/.env
          mkdir -p builds
          mv packages/web-components/storybook-static builds/web-components

      - name: Set env vars (RTL)
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/web-components/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
          PROFILE_HOST: ${{ secrets.PROFILE_HOST }}
      - name: Building @carbon/ibmdotcom-web-components RTL storybook
        run: yarn build-storybook:rtl
        working-directory: packages/web-components
      - name: Move storybook to build folder
        run: |
          rm packages/web-components/.env
          mv packages/web-components/storybook-static-rtl builds/web-components-rtl

      - name: Set env vars (experimental)
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/web-components/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
          PROFILE_HOST: ${{ secrets.PROFILE_HOST }}
          C4D_FLAGS_ALL: true
      - name: Building @carbon/ibmdotcom-web-components experimental storybook
        run: yarn build-storybook:experimental
        working-directory: packages/web-components
      - name: Move storybook to build folder
        run: |
          rm packages/web-components/.env
          mv packages/web-components/storybook-static-experimental builds/web-components-experimental

      - name: Set env vars (react wrapper)
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/web-components/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
          PROFILE_HOST: ${{ secrets.PROFILE_HOST }}
      - name: Building @carbon/ibmdotcom-web-components react wrapper storybook
        run: yarn build-storybook:react
        working-directory: packages/web-components
      - name: Move storybook to build folder
        run: |
          rm packages/web-components/.env
          mv packages/web-components/storybook-static-react builds/web-components-react

      - name: Deploying @carbon/ibmdotcom-web-components storybook to Github Pages
        run: |
          git config --global user.email ${{ secrets.BOT_EMAIL }}
          git config --global user.name ${{ secrets.BOT_NAME }}

          git fetch origin gh-pages
          git checkout -b gh-pages origin/gh-pages
          git update-ref -d refs/remotes/origin/gh-pages
          git pull origin gh-pages

          rm -rf masthead-v2/web-components
          rm -rf masthead-v2/web-components-react
          rm -rf masthead-v2/web-components-rtl
          rm -rf masthead-v2/web-components-experimental
          mkdir -p masthead-v2
          mv builds/web-components masthead-v2/web-components
          mv builds/web-components-react masthead-v2/web-components-react
          mv builds/web-components-rtl masthead-v2/web-components-rtl
          mv builds/web-components-experimental masthead-v2/web-components-experimental

          git add masthead-v2/web-components
          git add masthead-v2/web-components-react
          git add masthead-v2/web-components-rtl
          git add masthead-v2/web-components-experimental
          git commit -m "chore(deploy): deploy Web Components masthead-v2 to GitHub Pages"
          git push origin gh-pages
      - uses: act10ns/slack@v2
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
  services:
    if: github.repository == 'carbon-design-system/carbon-for-ibm-dotcom'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.MERGE_ACTION}}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
      - name: Build project
        run: yarn lerna run --stream --ignore @carbon/ibmdotcom-react --ignore @carbon/ibmdotcom-web-components --ignore @carbon/ibmdotcom-services-store build
      - name: Set env vars
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/services/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
          PROFILE_HOST: ${{ secrets.PROFILE_HOST }}
      - name: Building @carbon/ibmdotcom-services JSDocs
        run: yarn jsdoc
        working-directory: packages/services
      - name: Deploying @carbon/ibmdotcom-services JSDocs to IBM Cloud
        run: |
          git config --global user.email ${{ secrets.BOT_EMAIL }}
          git config --global user.name ${{ secrets.BOT_NAME }}

          mkdir -p builds
          mv packages/services/docs builds/services

          git fetch origin gh-pages
          git checkout -b gh-pages origin/gh-pages
          git update-ref -d refs/remotes/origin/gh-pages
          git pull origin gh-pages

          rm -rf services
          mv builds/services services

          git add services
          git commit -m "chore(deploy): deploy Services to GitHub Pages"
          git push origin gh-pages
      - uses: act10ns/slack@v2
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
  utilities:
    if: github.repository == 'carbon-design-system/carbon-for-ibm-dotcom'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.MERGE_ACTION}}
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache
      - name: Build project
        run: yarn lerna run --scope @carbon/ibmdotcom-utilities build
      - name: Set env vars
        uses: ./.github/actions/set-dotenv
        with:
          env-file: packages/utilities/.env
        env:
          KALTURA_PARTNER_ID: ${{ secrets.KALTURA_PARTNER_ID }}
          KALTURA_UICONF_ID: ${{ secrets.KALTURA_UICONF_ID }}
      - name: Building @carbon/ibmdotcom-utilities JSDocs
        run: yarn jsdoc
        working-directory: packages/utilities
      - name: Deploying @carbon/ibmdotcom-utilities JSDocs to IBM Cloud
        run: |
          git config --global user.email ${{ secrets.BOT_EMAIL }}
          git config --global user.name ${{ secrets.BOT_NAME }}

          mkdir -p builds
          mv packages/utilities/docs builds/utilities

          git fetch origin gh-pages
          git checkout -b gh-pages origin/gh-pages
          git update-ref -d refs/remotes/origin/gh-pages
          git pull origin gh-pages

          rm -rf utilities
          mv builds/utilities utilities

          git add utilities
          git commit -m "chore(deploy): deploy Utilities to GitHub Pages"
          git push origin gh-pages
      - uses: act10ns/slack@v2
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
