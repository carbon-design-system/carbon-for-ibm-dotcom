/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

@use 'sass:math';

@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/themes' as *;
@use '@carbon/styles/scss/type' as *;
@use '../../globals/utils/flex-grid' as *;
@use '../../globals/vars' as *;
@use '../../globals/utils/ratio-base' as *;
@use '../../internal/content-section';
@use '../card';
@use '../image';
@use '../link-with-icon';

@mixin card-group-themed-items {
  color: $text-primary;
  background: $background;
  .#{$prefix}--card__heading {
    color: $text-primary;
  }
  .#{$prefix}--card__copy,
  .#{$prefix}--card__eyebrow {
    color: $text-secondary;
  }
  .#{$prefix}--card--inverse {
    background-color: $background-inverse;
    height: 100%;

    .#{$prefix}--card__heading {
      color: $icon-inverse;
    }

    &.#{$prefix}--card--link:hover {
      background-color: $background-inverse-hover;
    }
    .#{$prefix}--card__cta,
    .#{$prefix}--card__cta a,
    .#{$prefix}--card__cta a:visited {
      color: $link-inverse;
    }
  }
}

@mixin card-group {
  :host(#{$c4d-prefix}-card-group),
  .#{$prefix}--card-group {
    @include card-group-themed-items;
  }

  :host(#{$c4d-prefix}-card-group-item),
  .#{$prefix}--card-group__card {
    // FIXME: CardLink is being used as Card in React, need to separate this
    .#{$prefix}--card-link .#{$prefix}--card__heading {
      @include type-style('fluid-heading-03', true);
    }

    .#{$prefix}--image {
      &__img {
        height: carbon--mini-units(30);
      }

      @include breakpoint(lg) {
        @include ratio-base(4, 3, true);

        &__img {
          position: absolute;
          height: 100%;
          top: 0;
        }
      }
    }

    &:focus,
    &:focus-within {
      outline: none;
    }
  }

  // FIXME: WC only override
  :host(#{$c4d-prefix}-card-group-item)
    .#{$prefix}--card-link
    .#{$prefix}--card__heading {
    @include type-style('heading-02', true);
  }

  :host(#{$c4d-prefix}-card-group-item),
  :host(#{$c4d-prefix}-card-group-card-link-item) {
    padding-bottom: 1px;
    padding-right: 1px;

    &[border] {
      border: none;
    }

    &[empty] {
      display: none;
      background-color: $background;
      outline: 1px solid $background;

      @include breakpoint(md) {
        display: block;
      }

      .#{$prefix}--card__wrapper {
        height: 100%;
      }

      .#{$prefix}--card,
      .#{$prefix}--card__wrapper,
      &:hover .#{$prefix}--card__wrapper {
        background: transparent;
      }

      &[border],
      &[border]:hover {
        .#{$prefix}--card__wrapper {
          background: $background;
        }
      }
    }

    &[pattern-background] {
      .#{$prefix}--card {
        border-bottom: 1px solid $layer-accent-01;
      }

      .#{$prefix}--card,
      .#{$prefix}--card__wrapper {
        background: $background;
      }
    }
  }

  // React card focus outline
  .#{$prefix}--card-group__card {
    &:focus-within {
      outline: none;
      position: relative;

      &::after {
        content: '';
        position: absolute;
        z-index: 2;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        outline: $spacing-01 solid $focus;
        outline-offset: -#{$spacing-01};
        pointer-events: none;
      }

      .#{$prefix}--card__img {
        position: absolute;
        z-index: auto;
      }

      .#{$prefix}--tile {
        outline: none;
      }
    }
  }

  :host(#{$c4d-prefix}-card-group),
  .#{$prefix}--card-group__row,
  .#{$prefix}--card-group__cards__row {
    --#{$c4d-prefix}--card-group--cards-in-row: 1;

    display: grid;
    grid-template-columns: 1fr;

    @include breakpoint(md) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include breakpoint(lg) {
      grid-template-columns: repeat(
        var(--#{$c4d-prefix}--card-group--cards-in-row),
        1fr
      );
    }
  }

  .#{$prefix}--card-group__cards__row {
    // `@include make-row()` has negative margin adjustment assuming that it's placed in Carbon grid.
    // Such adjustment has adverse effect when card group is placed in non-Carbon-grid,
    // but keeps it for React for backward-compatibility reason.
    margin-left: calc(-1 * #{math.div($grid-gutter, 2)});
    margin-right: calc(-1 * #{math.div($grid-gutter, 2)});

    position: relative;
    &::after {
      content: '';
      display: block;
      width: 100%;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0;
      pointer-events: none;
      box-shadow: inset 0 0 0 1px $background;
    }
  }

  .#{$prefix}--card-group__cards__col {
    padding: 0;
    background: $border-subtle-02;

    border-right: 1px solid $border-subtle-02;
    border-top: 1px solid $border-subtle-02;

    &:last-of-type {
      border-right: 0;
      width: calc(100% - 1px);
    }

    .#{$prefix}--card--inverse {
      height: 100%;
    }
  }

  // Add Grid Mode Narrow (16px gutter) style.
  :host(#{$c4d-prefix}-card-group)[grid-mode='narrow'],
  .#{$prefix}--card-group--narrow {
    @include breakpoint(sm) {
      padding-top: $spacing-03;
      gap: $spacing-03;
    }

    @include breakpoint(md) {
      padding-top: $spacing-05;
      gap: $spacing-05;
    }

    @include breakpoint(lg) {
      grid-template-columns: repeat(
        3,
        calc((100% / 3) - #{carbon--mini-units(2)})
      );
    }

    ::slotted(#{$c4d-prefix}-card-group-item),
    ::slotted(#{$c4d-prefix}-card-group-card-link-item),
    .#{$prefix}--card-group__cards__col {
      border: 0;
      padding: 0;
    }
  }

  // card with video focus outline
  :host(#{$c4d-prefix}-card-group-item)[cta-type='video'] {
    &:focus-within {
      .#{$prefix}--tile {
        outline: none;
        position: relative;

        &::after {
          content: '';
          position: absolute;
          z-index: 2;
          top: 0;
          left: 0;
          bottom: 0;
          right: 0;
          box-shadow: inset 0 0 0 $spacing-01 $focus;
          pointer-events: none;
        }
      }
    }
  }

  .#{$prefix}--card-group--border {
    &::after {
      content: none;
      box-shadow: none;
    }

    .#{$prefix}--card-group__cards__col {
      padding: 0;
      border: 1px solid $border-subtle-02;
      border-bottom: 0;
    }

    .#{$prefix}--card-group__cards__col:last-of-type {
      border-bottom: 1px solid $border-subtle-02;
      padding-right: 0;
    }

    @include breakpoint(md) {
      .#{$prefix}--card-group__cards__col {
        border-bottom: 0;
        border-right: 0;
      }

      .#{$prefix}--card-group__cards__col:nth-child(2n),
      .#{$prefix}--card-group__cards__col:last-of-type {
        border-right: 1px solid $border-subtle-02;
      }

      .#{$prefix}--card-group__cards__col:last-of-type:not(:nth-child(2n)) {
        width: calc(100% + 1px);
      }

      .#{$prefix}--card-group__cards__col:nth-last-of-type(-n + 2) {
        border-bottom: 1px solid $border-subtle-02;
        height: calc(100% + 1px);
      }
    }

    @include breakpoint(lg) {
      .#{$prefix}--card-group__cards__col:nth-child(2n),
      .#{$prefix}--card-group__cards__col:nth-last-of-type(-n + 2) {
        border-bottom: 0;
        border-right: 0;
        height: auto;
      }

      .#{$prefix}--card-group__cards__col:nth-child(3n),
      .#{$prefix}--card-group__cards__col:last-of-type {
        border-right: 1px solid $border-subtle-02;
        width: calc(100% + 1px);
      }

      .#{$prefix}--card-group__cards__col:nth-last-of-type(-n + 3) {
        border-bottom: 1px solid $border-subtle-02;
        height: calc(100% + 1px);
      }

      .#{$prefix}--card-group__cards__col:last-of-type:not(:nth-child(3n)) {
        width: calc(100% + 1px);
      }
    }
  }

  .#{$prefix}--card-group__cards__col .#{$prefix}--card-group__card {
    // React version of card group has `.bx--card-group__cards__col` surrounding `.bx--card-group__card`.
    // Ensures that the former takes the whole height of card regardless of how high the card group row ends up with.
    height: 100%;
  }

  .#{$prefix}--card-group.#{$prefix}--card-group--g10 {
    @include theme($g10, feature-flag-enabled('enable-css-custom-properties'));
    @include card-group-themed-items;
  }

  .#{$prefix}--card-group.#{$prefix}--card-group--g90 {
    @include theme($g90, feature-flag-enabled('enable-css-custom-properties'));
    @include card-group-themed-items;
  }

  .#{$prefix}--card-group.#{$prefix}--card-group--g100 {
    @include theme($g100, feature-flag-enabled('enable-css-custom-properties'));
    @include card-group-themed-items;
  }

  // Print styles
  @media print {
    :host(#{$c4d-prefix}-card-group),
    .#{$prefix}--card-group__row,
    .#{$prefix}--card-group__cards__row {
      display: flex;
      flex-wrap: nowrap;

      ::slotted(#{$c4d-prefix}-card-group-item),
      ::slotted(#{$c4d-prefix}-card-group-card-link-item),
      .#{$prefix}--card {
        /* stylelint-disable declaration-no-important */
        // need important since it gets overriden in WC Card Group without it
        background-color: transparent !important;
        /* stylelint-enable declaration-no-important */
        border: 0 none;
        margin: 0 $spacing-03 $spacing-05;
        width: 23%;
      }
    }

    :host(#{$c4d-prefix}-card-group-item),
    :host(#{$c4d-prefix}-card-group-card-link-item) {
      background-color: transparent;

      &[empty] {
        @include breakpoint(md) {
          /* stylelint-disable declaration-no-important */
          // need important since it gets overriden in WC Card Group without it
          display: none !important;
          /* stylelint-enable declaration-no-important */
        }
      }

      .#{$prefix}--tile {
        background-color: transparent;
        border: 1px solid $border-subtle-01;
      }
    }
  }
}
