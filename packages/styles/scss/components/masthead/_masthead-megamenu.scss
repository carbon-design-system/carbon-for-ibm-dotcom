/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/motion' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/type' as *;
@use '@carbon/styles/scss/utilities' as *;
@use '../../globals/utils/flex-grid' as *;
@use '../../globals/vars' as *;

@mixin masthead-megamenu-limit-height {
  max-height: var(--#{$c4d-prefix}-masthead-max-height);
  overflow: var(--#{$c4d-prefix}-masthead-overflow);
}

@mixin masthead-megamenu {
  $l0-nav-height: $spacing-09;
  $l1-nav-height: rem(98px);

  @keyframes expand {
    0% {
      overflow-y: hidden;
      max-height: 0;
    }

    100% {
      max-height: 100%;
    }
  }

  @keyframes collapse {
    0% {
      max-height: 100vh;
    }

    100% {
      max-height: 0;
    }
  }

  :host(#{$c4d-prefix}-megamenu-top-nav-menu)
    .#{$prefix}--header__menu-title[aria-expanded='true']
    + .#{$prefix}--header__menu,
  .#{$prefix}--header__nav
    .#{$prefix}--masthead__megamenu__l0-nav
    .#{$prefix}--header__menu-title[aria-expanded='true']
    + .#{$prefix}--header__menu,
  .#{$prefix}--header__nav
    .#{$prefix}--masthead__megamenu__l1-nav
    .#{$prefix}--header__menu-title[aria-expanded='true']
    + .#{$prefix}--header__menu {
    background-color: transparent;
    bottom: 0;
    box-shadow: none;
  }

  :host(#{$c4d-prefix}-megamenu-top-nav-menu),
  .#{$prefix}--masthead__megamenu__l0-nav,
  .#{$prefix}--masthead__megamenu__l1-nav {
    .#{$prefix}--header__menu {
      position: fixed;
      display: block;
      visibility: hidden;
      margin-bottom: $spacing-10;
      left: 0;
      width: 100vw;
      transform: translateZ(0.0001px);
      transition: visibility $transition-expansion $standard-easing;
    }

    .#{$prefix}--header__menu-title[aria-expanded='false']
      + .#{$prefix}--header__menu {
      ::slotted(#{$c4d-prefix}-megamenu),
      ::slotted(#{$c4d-prefix}-cloud-megamenu),
      .#{$prefix}--masthead__megamenu {
        animation: $transition-expansion motion(standard, expressive) collapse;
      }
    }

    .#{$prefix}--header__menu-title[aria-expanded='true']
      + .#{$prefix}--header__menu {
      position: fixed;
      left: 0;
      // TODO: come up with solution to fix height for cloud drupal without hardcoding
      height: calc(100vh - #{$spacing-10} - #{$spacing-09});
      transform: translateZ(0);
      visibility: visible;
      margin-bottom: $spacing-10;
      // `100vw` in Shadow DOM causes delayed rendering bug in Safari
      // https://github.com/carbon-design-system/carbon-for-ibm-dotcom/issues/4493
      width: var(--#{$c4d-prefix}-ce--viewport-width, 100vw);
      min-height: 320px;

      ::slotted(#{$c4d-prefix}-megamenu),
      ::slotted(#{$c4d-prefix}-cloud-megamenu),
      .#{$prefix}--masthead__megamenu {
        animation: $transition-expansion motion(standard, expressive) expand;
      }
    }
  }

  :host(#{$c4d-prefix}-megamenu-top-nav-menu),
  .#{$prefix}--masthead__megamenu__l0-nav {
    .#{$prefix}--header__menu-title[aria-expanded='true']
      + .#{$prefix}--header__menu {
      top: $l0-nav-height;
    }
  }

  .#{$prefix}--masthead__megamenu__l1-nav
    .#{$prefix}--header__menu-title[aria-expanded='true']
    + .#{$prefix}--header__menu {
    top: $l1-nav-height;
  }

  :host(#{$c4d-prefix}-megamenu),
  :host(#{$c4d-prefix}-cloud-megamenu),
  .#{$prefix}--masthead__megamenu {
    @include box-shadow;
    --#{$c4d-prefix}-masthead-max-height: calc(
      100vh - var(--cds-spacing-09, 3rem) - var(--cds-layout-05, 4rem)
    );
    --#{$c4d-prefix}-masthead-overflow: overlay;

    display: block;
    overflow-y: overlay;
    overflow-x: hidden;
    background-color: $background;

    &:focus {
      outline: none;
    }

    .#{$prefix}--masthead__megamenu__container {
      @include make-container;

      width: 100vw;
    }

    .#{$prefix}--masthead__megamenu__container--row {
      background-color: $layer-accent-01;

      /**
       * Faceted (tab) and Simple (list) megamenus have different layouts between
       * 'md' and 'lg' breakpoints. This requires us to apply identical styles at
       * different breakpoints, and we must also leverage custom properties to assign
       * values across shadow roots. The concept is that these upper shadow roots have
       * the stateful information needed to dictate how elements in the lower shadow
       * roots should appear, and we can pass that information down via custom props.
       */
      &.#{$prefix}--masthead__megamenu__container--row--tab {
        @include make-row;

        flex-wrap: nowrap;
        gap: 1px;

        ::slotted(#{$c4d-prefix}-megamenu-right-navigation) {
          --#{$c4d-prefix}-right-nav-padding: #{$spacing-05};
        }
      }

      &.#{$prefix}--masthead__megamenu__container--row--list {
        @include breakpoint-down(lg) {
          @include masthead-megamenu-limit-height;
          --#{$c4d-prefix}-view-all-inset: calc(#{$spacing-05} * -1);
          --#{$c4d-prefix}-view-all-container-position: initial;
          --#{$c4d-prefix}-view-all-container-transform: initial;

          // Set containing block for fixed position view all CTA.
          transform: rotate(0deg);
          position: relative;
          z-index: 1;

          margin-inline: calc(#{$spacing-09} * -1);
        }

        @include breakpoint-up(lg) {
          @include make-row;

          flex-wrap: nowrap;
          gap: 1px;
        }

        ::slotted(#{$c4d-prefix}-megamenu-left-navigation),
        ::slotted(#{$c4d-prefix}-megamenu-right-navigation) {
          @include breakpoint-down(lg) {
            --#{$c4d-prefix}-view-all-padding: #{$spacing-05};
            --#{$c4d-prefix}-masthead-max-height: initial;
            --#{$c4d-prefix}-masthead-overflow: initial;

            width: 100%;
            max-width: initial;
            margin-inline: initial;
            padding-inline: $spacing-07;
            border-bottom: rem(1px) solid $layer-accent-01;
            overflow: initial;
            max-height: initial;

            .#{$prefix}--masthead__megamenu-container {
              max-height: initial;
              overflow: initial;
            }
          }
        }

        ::slotted(#{$c4d-prefix}-megamenu-left-navigation) {
          --#{$c4d-prefix}-left-nav-columns: 2;

          @include breakpoint-up(lg) {
            --#{$c4d-prefix}-left-nav-columns: initial;
          }
        }

        ::slotted(#{$c4d-prefix}-megamenu-right-navigation) {
          --#{$c4d-prefix}-right-nav-padding: 0;

          @include breakpoint-down(lg) {
            --#{$c4d-prefix}-view-all-display: none;

            border-bottom: none;
          }

          @include breakpoint-up(lg) {
            --#{$c4d-prefix}-right-nav-padding: #{$spacing-05};
          }
        }

        ::slotted([part*='view-all']) {
          --#{$c4d-prefix}-view-all-padding: #{$spacing-09};

          position: sticky;
          z-index: 1;
          inset-block-end: 0;
          background-color: $background;
          border-top: rem(1px) solid $layer-accent-01;

          @include breakpoint-up(lg) {
            display: none;
          }
        }
      }
    }

    ::slotted([role='tabpanel']) {
      width: 100%;
    }
  }

  :host(#{$c4d-prefix}-megamenu-left-navigation),
  .#{$prefix}--masthead__megamenu__highlight-section,
  :host(#{$c4d-prefix}-megamenu-right-navigation),
  .#{$prefix}--masthead__megamenu__categories-section {
    background-color: $background;
    padding-block-start: $spacing-06;
    display: block;
    position: relative;

    .#{$prefix}--masthead__megamenu-container {
      @include masthead-megamenu-limit-height;

      position: var(--#{$c4d-prefix}-view-all-container-position, relative);
      height: 100%;
      z-index: 1;

      // Set containing block for fixed position view all CTA.
      transform: var(
        --#{$c4d-prefix}-view-all-container-transform,
        rotate(0deg)
      );

      &.#{$prefix}--masthead__megamenu-container--has-view-all-link {
        display: flex;
        flex-direction: column;
        justify-content: space-between;

        .#{$prefix}--masthead__megamenu-container-inner {
          max-height: 100%;
          overflow: overlay;
        }

        .#{$prefix}--masthead__megamenu__view-all {
          display: var(--#{$c4d-prefix}-view-all-display, inherit);
          position: relative;
          background-color: $background;
        }

        .#{$prefix}--masthead__megamenu__view-all__border {
          position: absolute;
          top: 0;
          height: rem(1px);
          background: $layer-accent-01;
        }
      }
    }
  }

  :host(#{$c4d-prefix}-megamenu-left-navigation),
  .#{$prefix}--masthead__megamenu__highlight-section {
    @include make-col(4, 16);

    min-height: 100%;

    // Shift border left without breaking Carbon grid alignment.
    padding-inline-start: $spacing-05;
    margin-inline-start: calc(#{$spacing-05} * -1);

    .#{$prefix}--masthead__megamenu__categories {
      columns: var(--#{$c4d-prefix}-left-nav-columns, 'initial');
      gap: 0;
    }

    .#{$prefix}--masthead__megamenu__view-all__border {
      inset-inline: 0;
    }
  }

  :host(#{$c4d-prefix}-megamenu-right-navigation),
  .#{$prefix}--masthead__megamenu__categories-section {
    display: block;
    width: 100%;

    &.#{$c4d-prefix}--masthead__tabpanel-child {
      height: 100%;
    }

    &[style-scheme='has-sidebar'] {
      .#{$prefix}--masthead__megamenu__heading,
      .#{$prefix}--masthead__megamenu__categories {
        padding-inline-start: var(
          --#{$c4d-prefix}-right-nav-padding,
          $spacing-05
        );
      }
    }

    ::slotted(#{$c4d-prefix}-megamenu-heading) {
      --heading-description-column-count: 2;
      --heading-description-column-count-lg: 4;
    }

    .#{$prefix}--masthead__megamenu--has-view-all-link {
      .#{$prefix}--masthead__megamenu__categories {
        padding-block-end: 0;
      }
    }

    .#{$prefix}--masthead__megamenu-container--has-sidebar {
      ::slotted(#{$c4d-prefix}-megamenu-heading) {
        --heading-description-column-count: 2;
        --heading-description-column-count-lg: 3;
      }

      .#{$prefix}--masthead__megamenu__categories {
        @include breakpoint-up('lg') {
          column-count: 3;
        }
      }
    }

    .#{$prefix}--masthead__megamenu__categories {
      padding-block-end: $spacing-07;
      column-count: 2;
      column-gap: 0;

      @include breakpoint-up('lg') {
        column-count: 4;
      }
    }

    .#{$prefix}--masthead__megamenu__view-all__border {
      inset-inline: 0;
    }

    // Disable columns here so child element can reapply them.
    &[data-child-count='1'] {
      .#{$prefix}--masthead__megamenu__categories {
        column-count: initial;

        @include breakpoint-up('lg') {
          column-count: initial;
        }
      }
    }
  }

  .#{$prefix}--masthead__megamenu__heading,
  :host(#{$c4d-prefix}-megamenu-heading) {
    span {
      display: block;
      max-width: calc((1 / var(--heading-description-column-count, 2)) * 100%);

      @include breakpoint-up('lg') {
        max-width: calc(
          (1 / var(--heading-description-column-count-lg, 4)) * 100%
        );
      }
    }
  }

  .#{$prefix}--masthead__megamenu__copy,
  :host(#{$c4d-prefix}-megamenu-category-group-copy) {
    @include type-style('body-short-01');

    display: block;
    color: $text-secondary;
    margin: rem(6px) $spacing-05 rem(10px);
    max-width: rem(272px);
  }

  :host(#{$c4d-prefix}-megamenu-category-group),
  .#{$prefix}--masthead__megamenu__category-group {
    display: block;

    &.only-child {
      .#{$prefix}--masthead__megamenu__category-group-heading {
        @include make-col(1, 2);

        @include breakpoint-up('lg') {
          @include make-col(1, 3);
        }
      }

      .#{$prefix}--masthead__megamenu__category-group-content {
        column-count: 2;
        column-gap: 0;

        @include breakpoint-up('lg') {
          column-count: 3;
        }
      }

      ::slotted(#{$c4d-prefix}-megamenu-category-link) {
        display: block;
        break-inside: avoid;
      }
    }

    .#{$prefix}--masthead__megamenu__category-group-content-wrapper {
      width: 100%;
      display: inline-block;
      padding-block-end: $spacing-06;
    }

    .#{$prefix}--masthead__megamenu__copy,
    ::slotted(#{$c4d-prefix}-megamenu-category-group-copy) {
      @include type-style('body-short-01');

      color: $text-secondary;
      margin: rem(-6px) $spacing-05 $spacing-06;
    }
  }

  :host(#{$c4d-prefix}-megamenu-link-with-icon) {
    span {
      flex: inherit;
    }

    ::slotted([slot='icon']) {
      transform: none;
      /* stylelint-disable-next-line comment-whitespace-inside */
      /* !rtl:raw:
      transform: scaleX(-1);
      */
    }
  }

  :host(
      #{$c4d-prefix}-megamenu-link-with-icon
    )[style-scheme='category-headline'] {
    width: 100%;

    p,
    a,
    .#{$prefix}--link-with-icon {
      width: 100%;
      padding: rem(6px) $spacing-05;
      margin-block-end: $spacing-06;
    }

    p,
    a,
    .#{$prefix}--link-with-icon,
    ::slotted(span),
    span {
      @include type-style(heading-03, true);

      color: $text-secondary;
      text-decoration: none;
    }

    ::slotted(span),
    span {
      flex: inherit;
    }

    ::slotted(svg),
    svg {
      fill: $text-secondary;
      min-width: $spacing-05;
    }

    &:visited,
    &:hover {
      color: $text-secondary;
    }
  }

  :host(#{$c4d-prefix}-megamenu-category-link) a,
  .#{$prefix}--masthead__megamenu__category-sublink {
    @include type-style('body-short-01');

    color: $text-secondary;
    text-decoration: none;
    padding: rem(6px) $spacing-05;
    display: block;

    &:visited {
      color: $text-secondary;
    }

    &:hover,
    &:active,
    &:hover:visited {
      color: $text-primary;
    }
  }

  .#{$prefix}--masthead__megamenu__category-sublink--highlighted,
  :host(
      #{$c4d-prefix}-megamenu-link-with-icon
    )[style-scheme='category-sublink'] {
    @include type-style('body-compact-01');

    width: 100%;

    a {
      width: 100%;
      padding: rem(7px) $spacing-05;
    }

    span {
      flex: inherit;
    }
  }

  :host(#{$c4d-prefix}-megamenu-link-with-icon)[part*='view-all'],
  .#{$prefix}--masthead__megamenu__view-all-cta {
    width: 100%;
    display: flex;

    &[part*='view-all-left'] {
      [part='link'] {
        padding-inline-start: $spacing-05;
      }
    }

    [part='link'] {
      text-decoration: none;
      width: 100%;
      padding-inline: var(--#{$c4d-prefix}-view-all-padding, #{$spacing-07})
        $spacing-05;
      height: $spacing-09;

      &:hover {
        color: $link-primary-hover;
      }
    }

    ::slotted(span) {
      vertical-align: middle;
      align-self: center;
    }

    span {
      @include type-style('body-compact-01');

      flex: inherit;
    }
  }

  :host(#{$c4d-prefix}-megamenu-category-link) a,
  :host(#{$c4d-prefix}-megamenu-link-with-icon) a,
  .#{$prefix}--masthead__megamenu__category-sublink--highlighted,
  .#{$prefix}--masthead__megamenu__view-all-cta .#{$prefix}--link-with-icon,
  .#{$prefix}--masthead__megamenu__category-sublink {
    &:focus,
    &:active {
      @include focus-outline;

      outline-width: $spacing-01;
      outline-offset: -#{$spacing-01};
    }

    &:active,
    &:hover {
      background-color: $background-hover;
      text-decoration: none;
    }

    svg {
      transform: none;
      /* stylelint-disable-next-line comment-whitespace-inside */
      /* !rtl:raw:
      transform: scaleX(-1);
      */
    }
  }
}
