/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

@import 'carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/mixins';
@import '../../globals/vars';
@import '../../globals/imports';
@import '../../globals/utils/aspect-ratio';
@import '../../globals/utils/ratio-base';
@import '../image/image';
@import '../card/index';

@mixin card-in-card {
  :host(#{$dds-prefix}-card-in-card),
  .#{$prefix}--card-in-card {
    height: auto;

    &:focus-within {
      z-index: 0;
      outline: 2px solid $focus;
      outline-offset: -2px;
    }

    .#{$prefix}--card:focus-within {
      z-index: -1;
    }

    &:hover {
      ::slotted([slot='image']),
      #{$dds-prefix}-card-in-card-image {
        &::before {
          opacity: 0.2;
        }
      }
    }

    .#{$prefix}--card-in-card__container {
      color: $text-01;
      background: $ui-background;
      position: relative;
    }

    .#{$prefix}--card__wrapper {
      background-color: $ui-01;
      height: auto;
      padding: $carbon--spacing-05;

      @include carbon--breakpoint('md') {
        width: 50%;
        position: absolute;
        bottom: 0;
        right: 0;
      }

      @include carbon--breakpoint('lg') {
        width: 33.33%;
      }

      .#{$prefix}--card__eyebrow,
      .#{$prefix}--card__heading,
      ::slotted(#{$dds-prefix}-card-eyebrow),
      ::slotted(#{$dds-prefix}-card-heading) {
        @include carbon--breakpoint('md') {
          width: 90%;
        }
      }

      .#{$prefix}--card__content {
        padding: 0;
      }

      .#{$prefix}--card__eyebrow,
      ::slotted(#{$dds-prefix}-card-eyebrow) {
        margin-bottom: $carbon--spacing-03;
        color: $text-02;
      }
    }
  }

  :host(#{$dds-prefix}-card-in-card-image) {
    @extend .#{$prefix}--image;

    position: relative;
    z-index: 0;

    @include ratio-base(4, 3, true);

    @include carbon--breakpoint('md') {
      @include ratio-base(16, 9, true);
    }

    ::slotted(svg[slot='icon']) {
      @extend .#{$prefix}--image__icon;

      @include carbon--breakpoint('md') {
        right: calc(75% - #{$carbon--spacing-07});
      }

      @include carbon--breakpoint('lg') {
        right: calc(50% - #{$carbon--spacing-04});
      }
    }

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      opacity: 0;
      z-index: 1;
      background-color: $inverse-02;
      transition: opacity $duration--moderate-01
        motion('standard', 'productive');
    }

    .#{$prefix}--image__img {
      position: absolute;
      height: 100%;
      top: 0;
    }
  }

  // Adjust the card width when grid mode is equal to "narrow".
  :host(#{$dds-prefix}-card-in-card)[grid-mode='narrow'],
  .#{$prefix}--card-in-card--narrow {
    @include carbon--breakpoint('lg') {
      width: calc(100% - #{carbon--mini-units(2)});
    }

    .#{$prefix}--card__wrapper {
      @include carbon--breakpoint('md') {
        width: calc(50% - #{$carbon--spacing-04});
      }

      @include carbon--breakpoint('lg') {
        width: calc(33.33% - #{$carbon--spacing-04});
      }
    }
  }

  // Add a $ui-03 border line color when the grid mode is equal "collapsed".
  :host(#{$dds-prefix}-card-in-card)[grid-mode='collapsed'],
  .#{$prefix}--card-in-card--narrow {
    .#{$prefix}--card__wrapper {
      &::after {
        content: '';
        display: block;
        width: 100%;
        height: 1px;
        position: absolute;
        left: 0;
        bottom: -1px;
        pointer-events: none;
        z-index: 1;
        background-color: $ui-03;
      }
    }
  }
}

@include exports('card-in-card') {
  @include card-in-card;
}
