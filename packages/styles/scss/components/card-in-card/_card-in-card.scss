/**
 * Copyright IBM Corp. 2016, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/motion' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/theme' as *;
@use '../../globals/vars' as *;
@use '../../globals/utils/aspect-ratio';
@use '../../globals/utils/ratio-base' as *;
@use '../image';
@use '../card';

@mixin card-in-card {
  :host(#{$dds-prefix}-card-in-card),
  .#{$prefix}--card-in-card {
    height: auto;

    &:focus-within {
      z-index: 0;
      outline: $spacing-01 solid $focus;
      outline-offset: -#{$spacing-01};
    }

    .#{$prefix}--card:focus-within {
      z-index: -1;
    }

    &:hover {
      ::slotted([slot='image']),
      #{$dds-prefix}-card-in-card-image {
        &::before {
          opacity: 0.2;
        }
      }
    }

    .#{$prefix}--card-in-card__container {
      color: $text-primary;
      background: $background;
      position: relative;
    }

    .#{$prefix}--card__wrapper {
      background-color: $layer-01;
      height: auto;
      padding: $spacing-05;

      @include breakpoint(md) {
        width: 50%;
        position: absolute;
        bottom: 0;
        right: 0;
      }

      @include breakpoint(lg) {
        width: 33.33%;
      }

      .#{$prefix}--card__eyebrow,
      .#{$prefix}--card__heading,
      ::slotted(#{$dds-prefix}-card-eyebrow),
      ::slotted(#{$dds-prefix}-card-heading) {
        @include breakpoint(md) {
          width: 90%;
        }
      }

      .#{$prefix}--card__content {
        padding: 0;
      }

      .#{$prefix}--card__eyebrow,
      ::slotted(#{$dds-prefix}-card-eyebrow) {
        margin-bottom: $spacing-03;
        color: $text-secondary;
      }
    }
  }

  :host(#{$dds-prefix}-card-in-card-image) {
    @extend .#{$prefix}--image;

    position: relative;
    z-index: 0;

    @include ratio-base(4, 3, true);

    @include breakpoint(md) {
      @include ratio-base(16, 9, true);
    }

    ::slotted(svg[slot='icon']) {
      @extend :host(#{$dds-prefix}-image::slotted(svg[slot='icon']));

      @include breakpoint(md) {
        right: calc(75% - #{$spacing-07});
      }

      @include breakpoint(lg) {
        right: calc(50% - #{$spacing-04});
      }
    }

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      opacity: 0;
      z-index: 1;
      background-color: $background-inverse;
      transition: opacity $duration-moderate-01 motion('standard', 'productive');
    }

    .#{$prefix}--image__img {
      position: absolute;
      height: 100%;
      top: 0;
    }
  }

  // Adjust the card width when grid mode is equal to "narrow".
  :host(#{$dds-prefix}-card-in-card)[grid-mode='narrow'],
  .#{$prefix}--card-in-card--narrow {
    @include breakpoint(lg) {
      width: calc(100% - #{carbon--mini-units(2)});
    }

    .#{$prefix}--card__wrapper {
      @include breakpoint(md) {
        width: calc(50% - #{$spacing-04});
      }

      @include breakpoint(lg) {
        width: calc(33.33% - #{$spacing-04});
      }
    }
  }

  // Add a $layer-accent-01 border line color when the grid mode is equal "collapsed".
  :host(#{$dds-prefix}-card-in-card)[grid-mode='collapsed'],
  .#{$prefix}--card-in-card--narrow {
    .#{$prefix}--card__wrapper {
      &::after {
        content: '';
        display: block;
        width: 100%;
        height: 1px;
        position: absolute;
        left: 0;
        bottom: -1px;
        pointer-events: none;
        z-index: 1;
        background-color: $layer-accent-01;
      }
    }
  }
}
