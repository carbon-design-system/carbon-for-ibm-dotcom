//
// Copyright IBM Corp. 2019, 2023
//
// This source code is licensed under the Apache-2.0 license found in the
// LICENSE file in the root directory of this source tree.
//

@use '@carbon/styles/scss/config' as *;
@use '@carbon/styles/scss/theme' as *;
@use '@carbon/styles/scss/utilities' as *;
@use '@carbon/styles/scss/breakpoint' as *;
@use '@carbon/styles/scss/spacing' as *;
@use '@carbon/styles/scss/motion' as *;
@use '@carbon/styles/scss/type' as *;
@use '@carbon/styles/scss/components/tabs/index';
@use '@carbon/styles/scss/components/tabs/vars' as *;
@use '@carbon/styles/scss/utilities/button-reset';

:host(#{$prefix}-tabs),
:host(#{$prefix}-tabs-skeleton) {
  @extend .#{$prefix}--tabs;
}

:host(#{$prefix}-tabs) {
  @include focus-outline('reset');

  display: block;

  &[color-scheme='light'] {
    background-color: $layer-01;
  }

  .#{$prefix}--tabs-trigger svg {
    width: auto;
    height: auto;
  }
}

:host(#{$prefix}-tabs:focus) {
  .#{$prefix}--tabs-trigger {
    @include focus-outline('outline');
  }
}

// copying styles from
:host(#{$prefix}-tab) {
  display: flex;
  background: transparent;
  width: 100%;

  .#{$prefix}--tabs__nav-link {
    @include button-reset.reset($width: false);
    @include focus-outline('reset');
    @include type-style('body-compact-01');

    width: 100%;
    overflow: hidden;
    max-width: 10rem;
    padding: $spacing-04 $spacing-05 $spacing-03;
    border-bottom: $tab-underline-color;
    color: $text-secondary;
    text-align: left;
    text-decoration: none;
    text-overflow: ellipsis;
    transition: border $duration-fast-01 motion(standard, productive),
      outline $duration-fast-01 motion(standard, productive);
    white-space: nowrap;

    &:focus,
    &:active {
      @include focus-outline('outline');
    }
  }

  &[selected] {
    .#{$prefix}--tabs__nav-link {
      @include type-style('heading-01');

      border-bottom: 2px solid $border-interactive;
    }
  }

  outline: none;
}

:host(#{$prefix}-tab:hover) {
  @include breakpoint(md) {
    background-color: transparent;
    box-shadow: none;
  }

  background-color: transparent;
  box-shadow: 0 -1px 0 $background-hover;
}

:host(#{$prefix}-tab[type='container']) {
  @include breakpoint(md) {
    background-color: $layer-accent-01;

    + .#{$prefix}--tabs__nav-item {
      margin-left: 0;
      // Draws the border without affecting the inner-content
      box-shadow: -1px 0 0 0 $border-strong-01;
    }

    + .#{$prefix}--tabs__nav-item.#{$prefix}--tabs__nav-item--selected,
    &.#{$prefix}--tabs__nav-item--selected + .#{$prefix}--tabs__nav-item {
      box-shadow: none;
    }
  }

  a.#{$prefix}--tabs__nav-link {
    @include breakpoint(md) {
      height: rem(48px);
      // height - vertical padding
      /* stylelint-disable declaration-property-unit-whitelist */
      line-height: calc(#{rem(48px)} - (#{$spacing-03} * 2));
    }
  }
}

// `[role]` is only for specificity.
// We have `:not()` usage in the corresponding Carbon core style
// which puts specificity of "specific" scenario though the style is for "regular" scenario
:host(#{$prefix}-tab[type='container'][role]),
:host(#{$prefix}-tab[type='container'][role]:hover) {
  a.#{$prefix}--tabs__nav-link {
    @include breakpoint(md) {
      border-bottom: none;
    }
  }
}

// `[role]` is only for specificity.
// We have `:not()` usage in the corresponding Carbon core style
// which puts specificity of "specific" scenario though the style is for "regular" scenario
:host(#{$prefix}-tab[disabled][role]),
:host(#{$prefix}-tab[disabled][role]:hover) {
  background-color: transparent;
  box-shadow: none;
  cursor: not-allowed;
  outline: none;

  @include breakpoint(md) {
    background-color: transparent;
  }

  .#{$prefix}--tabs__nav-link {
    color: $tab-text-disabled;
    pointer-events: none;
    outline: none;

    @include breakpoint(md) {
      border-bottom: $tab-underline-disabled;
    }
  }
}

:host(#{$prefix}-tab[type='container'][disabled][role])
  .#{$prefix}--tabs__nav-link {
  @include breakpoint(md) {
    color: $text-on-color-disabled;
  }
}

:host(#{$prefix}-tab[selected]) {
  transition: color $duration-fast-01 motion(standard, productive);

  &:hover {
    @include breakpoint(md) {
      background-color: transparent;
    }
  }

  .#{$prefix}--tabs__nav-link {
    &,
    // Need to override Carbon core's non-selected focus color
    &:focus,
    &:active {
      color: $text-primary;
    }
  }

  @include breakpoint(md) {
    display: flex;
    background-color: transparent;

    .#{$prefix}--tabs__nav-link {
      @include type-style('heading-01');

      border-bottom: 3px solid $background-brand;

      &:focus,
      &:active {
        border-bottom-width: 2px;
      }
    }
  }
}

:host(#{$prefix}-tab[type='container'][selected]),
:host(#{$prefix}-tab[type='container'][selected]:hover) {
  @include breakpoint(md) {
    background-color: $layer-01;

    .#{$prefix}--tabs__nav-link {
      // height - vertical padding
      line-height: calc(#{rem(48px)} - (#{$spacing-03} * 2));
      // Draws the border without affecting the inner-content
      box-shadow: inset 0 2px 0 0 $interactive;
      border-bottom: none;
    }

    .#{$prefix}--tabs__nav-link:focus,
    .#{$prefix}--tabs__nav-link:active {
      box-shadow: none;
    }
  }
}

:host(#{$prefix}-tab[highlighted]),
:host(#{$prefix}-tab[highlighted]:hover) {
  box-shadow: 0 -1px 0 $background-hover;

  // `highlighted` is not used in wide mode,
  // but we need guard for a scenario where a tab is highlighted and then the UI turned to wide mode
  @include breakpoint(md) {
    background-color: transparent;
    box-shadow: none;
  }
}

:host(#{$prefix}-tab[highlighted][selected]),
:host(#{$prefix}-tab[highlighted][selected]:hover) {
  background-color: $background-selected;

  // `highlighted` is not used in wide mode,
  // but we need guard for a scenario where a tab is highlighted and then the UI turned to wide mode
  @include breakpoint(md) {
    background-color: transparent;
  }
}

// Disabled tab never gets selected, but we guard for manual addition of `selected` attribute
:host(#{$prefix}-tab[disabled][selected]),
:host(#{$prefix}-tab[disabled][selected]:hover),
:host(#{$prefix}-tab[disabled][in-focus][selected]),
:host(#{$prefix}-tab[disabled][in-focus][selected]:hover) {
  display: flex;
  background-color: transparent;
  box-shadow: none;

  @include breakpoint(md) {
    @include focus-outline('reset');

    background-color: transparent;
  }

  .#{$prefix}--tabs__nav-link {
    @include breakpoint(md) {
      @include type-style('body-short-01');

      color: $tab-text-disabled;
      border-bottom: $tab-underline-disabled;

      &:focus,
      &:active {
        border-bottom-width: 3px;
      }
    }
  }
}

:host(#{$prefix}-tabs-skeleton) .#{$prefix}--tabs-trigger {
  @include skeleton;

  width: rem(100px);
}

:host(#{$prefix}-tab-skeleton) {
  @include breakpoint(md) {
    margin-left: rem(2px);
  }

  .#{$prefix}--tabs__nav-link {
    @include skeleton;

    width: rem(75px);
    height: rem(12px);
  }
}

:host(#{$prefix}-tab-skeleton:first-of-type) {
  @include breakpoint(md) {
    margin-left: 0;
  }
}
