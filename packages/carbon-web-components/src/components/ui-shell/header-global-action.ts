/**
 * @license
 *
 * Copyright IBM Corp. 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement } from 'lit';
import { property, customElement } from 'lit/decorators.js';
import { BUTTON_TOOLTIP_POSITION } from '../button/button';
import CDSButton from '../button/button';
import styles from './header.scss';
import { prefix } from '../../globals/settings';

/**
 * Header global action button
 *
 * @element cds-header-global-action
 */
@customElement(`${prefix}-header-global-action`)
class CDSHeaderGlobalAction extends CDSButton {
  /**
   * Specify whether the action is currently active
   */
  @property({ type: Boolean, reflect: true })
  active;

  connectedCallback() {
    this.tooltipPosition = BUTTON_TOOLTIP_POSITION.BOTTOM;
    super.connectedCallback();
  }

  firstUpdated() {
    const button = this.shadowRoot?.querySelector('button');

    if (button) {
      button?.classList.add(`${prefix}--header__action`);

      if (this.active) {
        button?.classList.add(`${prefix}--header__action--active`);
      }
    }
  }

  static shadowRootOptions = {
    ...LitElement.shadowRootOptions,
    delegatesFocus: true,
  };

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default CDSHeaderGlobalAction;
