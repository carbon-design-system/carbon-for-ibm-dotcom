/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { css, customElement, html, TemplateResult } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import sameHeight from '@carbon/ibmdotcom-utilities/es/utilities/sameHeight/sameHeight';
import StableSelectorMixin from '../../globals/mixins/stable-selector';
import DDSContentBlock from '../content-block/content-block';
import styles from './content-block-headlines.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Content Block Headlines
 *
 * @element dds-content-block-headlines
 */
@customElement(`${ddsPrefix}-content-block-headlines`)
class DDSContentBlockHeadlines extends StableSelectorMixin(DDSContentBlock) {
  private itemCopy;

  /**
   * @returns Main content
   */
  // eslint-disable-next-line class-methods-use-this
  protected _renderContent(): TemplateResult | string | void {
    return html`
      <div class="${prefix}--content-block__children">
        <div class="${prefix}--content-block-headlines__container">
          <div class="${prefix}--content-block-headlines__row">
            <div class="${prefix}--content-block-headlines__item-container">
              <slot @slotchange="${this._handleSlotChange}" name="content"></slot>
            </div>
          </div>
        </div>
      </div>
    `;
  }

  /**
   * @returns The copy content.
   */
  // eslint-disable-next-line class-methods-use-this
  protected _renderCopy(): TemplateResult | string | void {
    return html`
      <div class="${prefix}--content-block__copy">
        <slot name="copy"></slot>
      </div>
    `;
  }

  connectedCallback() {
    super.connectedCallback();
    window.addEventListener('resize', this._handleResize);
  }

  disconnectedCallback() {
    super.disconnectedCallback();
    window.removeEventListener('resize', this._handleResize);
  }

  /**
   * Method called on resize, triggers the sameHeight utility
   *
   * @private
   */
  private _handleResize() {
    this.itemCopy = document.querySelectorAll(`${ddsPrefix}-content-item-copy`);
    if (this.itemCopy) window.requestAnimationFrame(() => sameHeight(this.itemCopy, 'md'));
  }

  /**
   * Handler for @slotChange, toggles the split layout class and set the children link-list-item to the same height
   *
   * @protected
   */
  protected _handleSlotChange() {
    // this.itemCopy = (event.target as HTMLSlotElement)
    //   .assignedNodes({ flatten: true })
    //   .filter(elem =>
    //     (elem as HTMLElement).matches !== undefined
    //       ? (elem as HTMLElement).matches((this.constructor as typeof DDSContentBlockHeadlines).itemCopySelector)
    //       : false
    //   );
    // .filter(elem =>
    // (elem as HTMLElement).localName === (this.constructor as typeof DDSContentBlockHeadlines).itemCopySelector);
    // console.log('items', this.itemCopy);
    setTimeout(() => {
      this.itemCopy = document.querySelectorAll(`${ddsPrefix}-content-item-copy`);
      sameHeight(this.itemCopy, 'md');
    });
  }

  static get itemCopySelector() {
    return `${ddsPrefix}-content-item-copy`;
  }

  static get stableSelector() {
    return `${ddsPrefix}-content-block-headlines`;
  }

  // `styles` here is a `CSSResult` generated by custom WebPack loader
  static get styles() {
    return css`${super.styles}${styles}`;
  }
}

export default DDSContentBlockHeadlines;
