/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { customElement } from 'lit-element';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import styles from './filter-panel.scss';
import 'carbon-web-components/es/components/modal/modal';
import BXCheckbox from 'carbon-web-components/es/components/checkbox/checkbox';

const { stablePrefix: ddsPrefix } = ddsSettings;

@customElement(`${ddsPrefix}-checkbox`)
class DDSCheckbox extends BXCheckbox {
  /**
   * Handles `click` event on the `<input>` in the shadow DOM.
   */
  protected _handleChange() {
    const { checked, indeterminate } = this._checkboxNode;
    this.checked = checked;
    this.indeterminate = indeterminate;
    const { eventChange } = this.constructor as typeof BXCheckbox;
    this.dispatchEvent(
      new CustomEvent(eventChange, {
        bubbles: true,
        composed: true,
        detail: {
          value: this.value,
        },
      })
    );
  }

  static get eventChange() {
    return `${ddsPrefix}-checkbox-select`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSCheckbox;
