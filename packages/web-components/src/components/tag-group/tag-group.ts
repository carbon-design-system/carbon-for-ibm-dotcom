/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import settings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import styles from './tag-group.scss';
import StableSelectorMixin from '../../globals/mixins/stable-selector';
import { carbonElement as customElement } from '../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element';

const { prefix, stablePrefix: c4dPrefix } = settings;

/**
 * Tag Group
 *
 * @element c4d-tag-group
 */
@customElement(`${c4dPrefix}-tag-group`)
class C4DTagGroup extends StableSelectorMixin(LitElement) {
  /**
   * Handler for @slotchange, ensure that the only elements being rendered are CDSTag and C4DTagLink
   *
   * @private
   */
  private _handleSlotChange(event: Event) {
    const childItems = (event.target as HTMLSlotElement).assignedNodes();

    const carbonTags = childItems.filter((elem) =>
      (elem as HTMLElement).matches?.(
        (this.constructor as typeof C4DTagGroup).selectorTag
      )
    );

    const carbonReactTags = childItems.filter((elem) =>
      (elem as HTMLElement).classList?.contains?.(
        (this.constructor as typeof C4DTagGroup).selectorReactTag
      )
    );

    // Handle default color setting differently depending on Carbon WC or Carbon React
    carbonTags.forEach((elem) => {
      if (!(elem as HTMLElement).hasAttribute('type')) {
        (elem as HTMLElement).setAttribute('type', 'green');
      }
    });
    carbonReactTags.forEach((elem) => {
      if (
        !(elem as HTMLElement).className
          .split(' ')
          .some((c) => /^cds--tag--/.test(c))
      ) {
        (elem as HTMLElement).classList?.add(`${prefix}--tag--green`);
      }
    });
  }

  render() {
    return html` <slot @slotchange="${this._handleSlotChange}"></slot> `;
  }

  connectedCallback() {
    super.connectedCallback();
    this.setAttribute('role', 'list');
  }

  /**
   * A selector that will return the C4DTagLink child items.
   */
  static get selectorTagLink() {
    return `${c4dPrefix}-tag-link`;
  }

  /**
   * A selector that will return the CDSTag child items.
   */
  static get selectorTag() {
    return `${prefix}-tag`;
  }

  /**
   * A selector that will return the CDSTag child items.
   */
  static get selectorReactTag() {
    return `${prefix}--tag`;
  }

  static get stableSelector() {
    return `${c4dPrefix}--tag-group`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

console.warn(
  'The tag-group component has been deprecated in favor of combing cds-tag components. ' +
    'See cds-tag documentation in @carbon/web-components for more information.'
);

/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */
export default C4DTagGroup;
