/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement } from 'lit';
import { property } from 'lit/decorators.js';
import settings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import StableSelectorMixin from '../../globals/mixins/stable-selector';
import { HR_TYPE, HR_SIZE, HR_CONTRAST, HR_WEIGHT } from './defs';
import styles from './horizontal-rule.scss';
import { carbonElement as customElement } from '../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element';

export { HR_TYPE, HR_SIZE, HR_CONTRAST, HR_WEIGHT };

const { stablePrefix: c4dPrefix } = settings;

/**
 * Horizontal Rule
 *
 * @element c4d-hr
 */
@customElement(`${c4dPrefix}-hr`)
class C4DHorizontalRule extends StableSelectorMixin(LitElement) {
  /**
   * Style of the HR (solid (default) | dashed)
   */
  @property({ attribute: 'type', reflect: true })
  type = HR_TYPE.SOLID;

  /**
   * Length of the HR
   * (fluid (default) | small | medium | large)
   */
  @property({ attribute: 'size', reflect: true })
  size = HR_SIZE.FLUID;

  /**
   * Contrast of the HR
   * 'strong' (default) | subtle)
   */
  @property({ attribute: 'contrast', reflect: true })
  contrast = HR_CONTRAST.STRONG;

  /**
   * Weight of the HR
   * (thin (default) | thick)
   */
  @property({ attribute: 'weight', reflect: true })
  weight = HR_WEIGHT.THIN;

  connectedCallback() {
    if (!this.hasAttribute('role')) {
      this.setAttribute('role', 'separator');
    }
    super.connectedCallback();
  }

  static get stableSelector() {
    return `${c4dPrefix}--hr`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */
export default C4DHorizontalRule;
