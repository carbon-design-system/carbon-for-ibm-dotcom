/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { property, customElement, LitElement } from 'lit-element';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings';
import styles from './horizontal-rule.scss';

const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Type of the HR
 */
export enum TYPE {
  /**
   * solid type of hr
   */
  SOLID = 'solid',

  /**
   * dashed/dotted type of hr
   */
  DASHED = 'dashed',
}

/**
 * Length of the HR
 */
export enum SIZE {
  /**
   * fluid length of hr, takes full width of the grid
   */
  FLUID = 'fluid',

  /**
   * Small length of hr
   */
  SMALL = 'small',

  /**
   * Medium length of hr
   */
  MEDIUM = 'medium',

  /**
   * Large length of hr
   */
  LARGE = 'large',
}

/**
 * Contrast of the HR
 */
export enum CONTRAST {
  /**
   * medium-contrast of hr
   */
  MEDIUM_CONTRAST = 'medium-contrast',

  /**
   * low-contrast of hr
   */
  LOW_CONTRAST = 'low-contrast',

  /**
   * high-contrast of hr
   */
  HIGH_CONTRAST = 'high-contrast',
}

/**
 * Weight of the HR
 */
export enum WEIGHT {
  /**
   * thin weight of hr
   */
  THIN = 'thin',

  /**
   * thick weight of hr
   */
  THICK = 'thick',
}

/**
 * Horizontal Rule
 *
 * @element dds-hr
 */
@customElement(`${ddsPrefix}-hr`)
class DDSHorizontalRule extends LitElement {
  /**
   * Style of the HR (solid (default) | dashed)
   */
  @property({ attribute: 'type', reflect: true })
  type = TYPE.SOLID;

  /**
   * Length of the HR
   * (fluid (default) | small | medium | large)
   */
  @property({ attribute: 'size', reflect: true })
  size = SIZE.FLUID;

  /**
   * Contrast of the HR
   * (medium-contrast (default) | low-contrast | high-contrast)
   */
  @property({ attribute: 'contrast', reflect: true })
  contrast = CONTRAST.MEDIUM_CONTRAST;

  /**
   * Weight of the HR
   * (thin (default) | thick)
   */
  @property({ attribute: 'weight', reflect: true })
  weight = WEIGHT.THIN;

  render() {
    return super.render();
  }

  static get stableSelector() {
    return `${ddsPrefix}--hr`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSHorizontalRule;
