/**
 * @license
 *
 * Copyright IBM Corp. 2019, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { LitElement, html } from 'lit';
import { property } from 'lit/decorators.js';
import { ifDefined } from 'lit/directives/if-defined.js';
import settings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import styles from './tag-link.scss';
import StableSelectorMixin from '../../globals/mixins/stable-selector';
import { carbonElement as customElement } from '../../internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js';

const { prefix, stablePrefix: c4dPrefix } = settings;

/**
 * Tag Link.
 *
 * @element c4d-tag-link
 */
@customElement(`${c4dPrefix}-tag-link`)
class C4DTagLink extends StableSelectorMixin(LitElement) {
  /**
   * Link `href`.
   */
  @property({ reflect: true })
  href!: string;

  /**
   * The language of what `href` points to.
   */
  @property({ reflect: true })
  hreflang!: string;

  /**
   * The a11y role for `<a>`.
   */
  @property({ attribute: 'link-role' })
  linkRole!: string;

  /**
   * URLs to ping.
   */
  @property({ reflect: true })
  ping!: string;

  /**
   * The link type.
   */
  @property({ reflect: true })
  rel!: string;

  /**
   * The link target.
   */
  @property({ reflect: true })
  target!: string;

  /**
   * Handles `click` event on the `<a>`.
   */
  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars
  protected _handleClick(_: MouseEvent) {}

  render() {
    const {
      href,
      hreflang,
      linkRole,
      ping,
      rel,
      target,
      _handleClick: handleClick,
    } = this;
    return html`
      <a
        id="link"
        role="${ifDefined(linkRole)}"
        class="${prefix}--link"
        part="link"
        href="${ifDefined(href)}"
        hreflang="${ifDefined(hreflang)}"
        ping="${ifDefined(ping)}"
        rel="${ifDefined(rel)}"
        target="${ifDefined(target)}"
        @click="${handleClick}">
        <slot></slot>
      </a>
    `;
  }

  static get stableSelector() {
    return `${c4dPrefix}--tag-link`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

/* @__GENERATE_REACT_CUSTOM_ELEMENT_TYPE__ */
export default C4DTagLink;
