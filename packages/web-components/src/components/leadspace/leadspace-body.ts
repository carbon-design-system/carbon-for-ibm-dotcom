/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, LitElement, TemplateResult } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import styles from './leadspace.scss';

const { prefix } = settings;

/**
 * LeadSpace body.
 */
abstract class DDSLeadSpaceBody extends LitElement {
  /**
   * @returns The copy content.
   */
  abstract _renderCopy(): TemplateResult | string | void;

  /**
   * @returns The title content.
   */
  abstract _renderTitle(): TemplateResult | string;

  render() {
    return html`
      <div class="${prefix}--leadspace__container ${this.typeClass()}">
        <div class="${prefix}--leadspace__overlay ${this.gradientClass()}">
          <div class="${prefix}--leadspace--content__container">
            <div class="${prefix}--leadspace__row">
              <h1 class="${prefix}--leadspace__title">${this._renderTitle()}</h1>
            </div>
            <div class="${prefix}--leadspace__content">
              ${this._renderCopy()}
              <slot name="buttons"></slot>
            </div>
          </div>
        </div>
        <slot name="image"></slot>
      </div>
    `;
  }

  /**
   * Returns a class-name based on the gradient parameter type
   *
   * @protected
   */
  protected gradientClass() {
    return this.gradient ? `${prefix}--leadspace--gradient` : '';
  }

  /**
   * Returns a class-name based on the type parameter type
   *
   * @protected
   */
  protected typeClass() {
    switch (this.type) {
      case 'centered':
        return `${prefix}--leadspace--centered`;
      case 'small':
        return `${prefix}--leadspace--productive`;
      default:
        return '';
    }
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSLeadSpaceBody;
