/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, property, customElement } from 'lit-element';
import BXLink from 'carbon-web-components/es/components/link/link.js';
import Launch16 from 'carbon-web-components/es/icons/launch/16.js';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import DDSMegaMenu from './megamenu';
import { MEGAMENU_LAYOUT_SCHEME } from './defs';
import styles from './masthead.scss';

const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * MegaMenu category sublink
 *
 * @element dds-megamenu-category-link
 */
@customElement(`${ddsPrefix}-megamenu-category-link`)
class DDSMegaMenuCategoryLink extends BXLink {
  @property({ reflect: true })
  layout?: MEGAMENU_LAYOUT_SCHEME;

  /**
   * link title.
   */
  @property({ reflect: true })
  title = '';

  /**
   * Maps target value to icons.
   */
  protected _targetMap = new Map([['external', Launch16()]]);

  /**
   * Renders an icon based on target value.
   */
  protected _renderIcon() {
    const { target, _targetMap } = this;
    return _targetMap.has(target) ? _targetMap.get(target) : undefined;
  }

  /**
   * @returns The inner content.
   */
  protected _renderInner() {
    const { title } = this;
    return html`
      <div>
        <span>${title}${this._renderIcon()}</span>
        <slot name="icon" @slotchange="${this._handleSlotChange}"></slot>
      </div>
      <span><slot></slot></span>
    `;
  }

  connectedCallback(): void {
    const megamenu = this.closest(`[data-autoid="${DDSMegaMenu.stableSelector}"`);
    this.layout = megamenu?.getAttribute('layout') as MEGAMENU_LAYOUT_SCHEME;

    super.connectedCallback();
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSMegaMenuCategoryLink;
