/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { property, customElement } from 'lit-element';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings';
import BXSideNav, { SIDE_NAV_USAGE_MODE } from 'carbon-custom-elements/es/components/ui-shell/side-nav';
import { forEach } from '../../globals/internal/collection-helpers';
import StableSelectorMixin from '../../globals/mixins/stable-selector';
import DDSLeftNavOverlay from './left-nav-overlay';
import styles from './masthead.scss';

const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Masthead left nav.
 *
 * @element dds-left-nav
 */
@customElement(`${ddsPrefix}-left-nav`)
class DDSLeftNav extends StableSelectorMixin(BXSideNav) {
  /**
   * Usage mode of the side nav.
   */
  @property({ reflect: true, attribute: 'usage-mode' })
  usageMode = SIDE_NAV_USAGE_MODE.HEADER_NAV;

  updated(changedProperties) {
    super.updated(changedProperties);
    const { usageMode } = this;
    if (changedProperties.has('usageMode') && usageMode !== SIDE_NAV_USAGE_MODE.HEADER_NAV) {
      // eslint-disable-next-line no-console
      console.warn(
        'dds-left-nav supports only `header-nav` for its `usage-mode` attribute or `usageMode` property. The value is ignored:',
        usageMode
      );
    }
    if (changedProperties.has('expanded')) {
      const doc = this.getRootNode() as Document;
      forEach(doc.querySelectorAll((this.constructor as typeof DDSLeftNav).selectorOverlay), item => {
        (item as DDSLeftNavOverlay).active = this.expanded;
      });
    }
  }

  /**
   * A selector that will return the toggle buttons.
   */
  static get selectorButtonToggle() {
    return `${ddsPrefix}-masthead-menu-button`;
  }

  /**
   * A selector that will return the overlays.
   */
  static get selectorOverlay() {
    return `${ddsPrefix}-left-nav-overlay`;
  }

  static get stableSelector() {
    return `${ddsPrefix}--masthead__l0-sidenav`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSLeftNav;
