/**
 * @license
 *
 * Copyright IBM Corp. 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, customElement, LitElement, property } from 'lit-element';
import ArrowRight24 from 'carbon-web-components/es/icons/arrow--right/24.js';
import HostListenerMixin from 'carbon-web-components/es/globals/mixins/host-listener.js';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import styles from './masthead.scss';

const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * MegaMenu Heading.
 *
 * @element dds-megamenu-heading
 */
@customElement(`${ddsPrefix}-megamenu-heading`)
class DDSMegaMenuHeading extends HostListenerMixin(LitElement) {
  /**
   * Megamenu heading href.
   */
  @property({ reflect: true })
  href = '';

  /**
   * Megamenu heading text.
   */
  @property({ reflect: true })
  title = '';

  protected _hasContent = false;

  /**
   * Arrow icon to use when presented as link.
   */
  protected _arrowIcon = ArrowRight24();

  /**
   * Render heading as link.
   */
  protected renderLink() {
    const { _arrowIcon } = this;
    return html`
      <a href="${this.href}" data-attribute1="headerNav" data-attribute2="FlatHdline" data-attribute3="${this.title}">
        ${this.title} ${_arrowIcon}
      </a>
    `;
  }

  /**
   * Render heading as plain text.
   */
  protected renderPlain() {
    return html`
      ${this.title}
    `;
  }

  protected _handleSlotChange(event) {
    this._hasContent = (event.target as HTMLSlotElement).assignedNodes().filter(child => child?.textContent?.trim()).length > 0;
  }

  render() {
    const hasHref = Boolean(this.href);
    return html`
      <h2 ?data-has-href="${hasHref}">
        ${hasHref ? this.renderLink() : this.renderPlain()}
      </h2>
      <span ?data-has-content="${this._hasContent}">
        <slot @slotchange=${this._handleSlotChange}></slot>
      </span>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSMegaMenuHeading;
