/**
 * @license
 *
 * Copyright IBM Corp. 2022, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { html, customElement, LitElement, property } from 'lit-element';
import ArrowRight24 from '../../internal/vendor/@carbon/web-components/icons/arrow--right/24.js';
import HostListenerMixin from '../../internal/vendor/@carbon/web-components/globals/mixins/host-listener.js';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import styles from './masthead.scss';

const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * MegaMenu Heading.
 *
 * @element dds-megamenu-heading
 */
@customElement(`${ddsPrefix}-megamenu-heading`)
class DDSMegaMenuHeading extends HostListenerMixin(LitElement) {
  protected _hasContent = false;

  /**
   * Megamenu heading href.
   */
  @property({ reflect: true })
  href = '';

  /**
   * Megamenu heading text.
   */
  @property({ reflect: true })
  title = '';

  @property({ reflect: true, type: Number, attribute: 'heading-level' })
  headingLevel = 2;

  /**
   * Arrow icon to use when presented as link.
   */
  protected _arrowIcon = ArrowRight24();

  /**
   * Render heading as link.
   */
  protected renderLink() {
    const { _arrowIcon } = this;
    return html`
      <a
        href="${this.href}"
        data-attribute1="headerNav"
        data-attribute2="FlatHdline"
        data-attribute3="${this.title}">
        ${this.title} ${_arrowIcon}
      </a>
    `;
  }

  /**
   * Render heading as plain text.
   */
  protected renderPlain() {
    return html` ${this.title} `;
  }

  /**
   * Render heading markup.
   */
  protected renderHeading() {
    const { headingLevel } = this;
    const hasHref = Boolean(this.href);
    switch (headingLevel) {
      case 3:
        return html`
          <h3 ?data-has-href="${hasHref}">${this.renderHeadingInner()}</h3>
        `;
      case 4:
        return html`
          <h4 ?data-has-href="${hasHref}">${this.renderHeadingInner()}</h4>
        `;
      case 5:
        return html`
          <h5 ?data-has-href="${hasHref}">${this.renderHeadingInner()}</h5>
        `;
      case 6:
        return html`
          <h6 ?data-has-href="${hasHref}">${this.renderHeadingInner()}</h6>
        `;
      default:
        return html`
          <h2 ?data-has-href="${hasHref}">${this.renderHeadingInner()}</h2>
        `;
    }
  }

  /**
   * Render inner heading contents as link or plain text.
   */
  protected renderHeadingInner() {
    return this.href ? this.renderLink() : this.renderPlain();
  }

  protected _handleSlotChange(event) {
    this._hasContent =
      (event.target as HTMLSlotElement)
        .assignedNodes()
        .filter((child) => child?.textContent?.trim()).length > 0;
  }

  render() {
    return html`
      ${this.renderHeading()}
      <span ?data-has-content="${this._hasContent}">
        <slot @slotchange=${this._handleSlotChange}></slot>
      </span>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSMegaMenuHeading;
