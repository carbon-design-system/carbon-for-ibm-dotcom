/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2021
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { classMap } from 'lit-html/directives/class-map';
import { html, internalProperty, property, query, customElement } from 'lit-element';
import HostListener from 'carbon-web-components/es/globals/decorators/host-listener.js';
import HostListenerMixin from 'carbon-web-components/es/globals/mixins/host-listener.js';
import settings from 'carbon-components/es/globals/js/settings';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import BXHeaderMenuButton from 'carbon-web-components/es/components/ui-shell/header-menu-button.js';
import focuswrap from '@carbon/ibmdotcom-utilities/es/utilities/focuswrap/focuswrap.js';
import Handle from '../../globals/internal/handle';
import styles from './masthead.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Toggle button for masthead left nav.
 *
 * @element dds-masthead-menu-button
 */
@customElement(`${ddsPrefix}-masthead-menu-button`)
class DDSMastheadMenuButton extends HostListenerMixin(BXHeaderMenuButton) {
  /**
   * The handle for focus wrapping.
   */
  private _hFocusWrap: Handle | null = null;

  /**
   * Search bar opened flag.
   */
  @internalProperty()
  private _hasSearchActive = false;

  /**
   * Handles toggle event from the search component.
   *
   * @param event The event.
   */
  @HostListener('parentRoot:eventToggleSearch')
  // @ts-ignore: The decorator refers to this method but TS thinks this method is not referred to
  private _handleSearchToggle = (event: Event) => {
    if ((event as CustomEvent).detail.active !== undefined) {
      this._hasSearchActive = (event as CustomEvent).detail.active;
    }
  };

  /**
   * Node to track focus going outside of modal content.
   */
  @query('#start-sentinel')
  private _startSentinelNode!: HTMLAnchorElement;

  /**
   * Node to track focus going outside of modal content.
   */
  @query('#end-sentinel')
  private _endSentinelNode!: HTMLAnchorElement;

  /**
   * The `<button>`.
   */
  @query(`.${prefix}--header__menu-trigger`)
  private _buttonNode!: HTMLButtonElement;

  /**
   * The shadow slot this toggle button should be in.
   */
  @property({ reflect: true })
  slot = 'brand';

  /**
   * `true` to hide the logo at render
   */
  @property({ type: Boolean, reflect: true, attribute: 'hide-menu-button' })
  hideMenuButton = false;

  focus() {
    const { _buttonNode: buttonNode } = this;
    if (buttonNode) {
      buttonNode.focus();
    }
  }

  updated(changedProperties) {
    if (changedProperties.has('active')) {
      const { active, _startSentinelNode: startSentinelNode, _endSentinelNode: endSentinelNode } = this;
      if (active) {
        this._hFocusWrap = focuswrap(this.shadowRoot!, [startSentinelNode, endSentinelNode]);
      } else if (this._hFocusWrap) {
        this._hFocusWrap = this._hFocusWrap.release();
      }
    }

    if (changedProperties.has('hideMenuButton')) {
      this._hasSearchActive = this.hideMenuButton;
    }
  }

  render() {
    const { active, _hasSearchActive: hasSearchActive } = this;
    const classes = classMap({
      [`${ddsPrefix}-ce--header__menu-trigger__container`]: true,
      [`${ddsPrefix}-ce--header__menu-trigger__container--has-search-active`]: hasSearchActive,
    });
    const sentinelTabIndex = !active ? -1 : 0;
    return html`
      <div class="${classes}">
        <a
          id="start-sentinel"
          tabindex="${sentinelTabIndex}"
          class="${prefix}--visually-hidden"
          href="javascript:void 0"
          role="navigation"
        >
        </a>
        ${super.render()}
        <a
          id="end-sentinel"
          tabindex="${sentinelTabIndex}"
          class="${prefix}--visually-hidden"
          href="javascript:void 0"
          role="navigation"
        >
        </a>
      </div>
    `;
  }

  /**
   * The name of the custom event fired after the seach is toggled.
   */
  static get eventToggleSearch() {
    return `${ddsPrefix}-masthead-search-toggled`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSMastheadMenuButton;
