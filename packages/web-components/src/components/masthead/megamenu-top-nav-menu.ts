/**
 * @license
 *
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { customElement } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings';
import ddsSettings from '@carbon/ibmdotcom-utilities/es/utilities/settings/settings.js';
import BXHeaderMenu from 'carbon-web-components/es/components/ui-shell/header-menu.js';
import { forEach } from '../../globals/internal/collection-helpers';
import DDSMegaMenuOverlay from './megamenu-overlay';
import styles from './masthead.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

/**
 * Megamenu top nav menu.
 *
 * @element dds-megamenu-top-nav-menu
 */
@customElement(`${ddsPrefix}-megamenu-top-nav-menu`)
class DDSMegaMenuTopNavMenu extends BXHeaderMenu {
  updated(changedProperties) {
    if (changedProperties.has('expanded')) {
      const doc = this.getRootNode() as Document;
      forEach(doc.querySelectorAll((this.constructor as typeof DDSMegaMenuTopNavMenu).selectorOverlay), item => {
        (item as DDSMegaMenuOverlay).active = this.expanded;
      });

      if (this.expanded) {
        doc?.body?.classList.add(`${prefix}--body__lock-scroll`);
      } else {
        doc?.body?.classList.remove(`${prefix}--body__lock-scroll`);
      }
    }
  }

  /**
   * A selector that will return the overlays.
   */
  static get selectorOverlay() {
    return `${ddsPrefix}-megamenu-overlay`;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSMegaMenuTopNavMenu;
