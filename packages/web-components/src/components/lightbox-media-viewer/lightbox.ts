/**
 * @license
 *
 * Copyright IBM Corp. 2020, 2022
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { classMap } from 'lit-html/directives/class-map';
import { html, customElement, property } from 'lit-element';
import settings from 'carbon-components/es/globals/js/settings.js';
import DDSExpressiveModal from '../expressive-modal/expressive-modal';
import ddsSettings from '../../internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings';
import { EXPRESSIVE_MODAL_SIZE, EXPRESSIVE_MODAL_MODE } from '../expressive-modal/defs';
import styles from './lightbox-media-viewer.scss';

const { prefix } = settings;
const { stablePrefix: ddsPrefix } = ddsSettings;

@customElement(`${ddsPrefix}-lightbox`)
class DDSLightbox extends DDSExpressiveModal {
  /**
   * `true` if the modal should be open.
   */
  @property({ type: Boolean, reflect: true })
  open = false;

  /**
   * The size variant.
   */
  @property({ reflect: false })
  size = EXPRESSIVE_MODAL_SIZE.FULL_WIDTH;

  /**
   * The mode variant.
   */
  @property({ reflect: false })
  mode = EXPRESSIVE_MODAL_MODE.LIGHTBOX;

  private _mediaViewerCount = 0;

  /**
   * Handles `slotchange` event.
   */
  protected _handleSlotChange({ target }: Event) {
    console.log(target);
    console.log(this);
  }

  render() {
    const {
      size,
      _handleClickContainer: handleClickContainer,
      _handleSlotChange: handleSlotChange,
      _handleFocusIn: handleFocusIn,
    } = this;
    const containerClass = this.containerClass
      .split(' ')
      .filter(Boolean)
      .reduce((acc, item) => ({ ...acc, [item]: true }), {});
    const containerClasses = classMap({
      [`${prefix}--modal-container`]: true,
      [`${prefix}--modal-container--fullwidth`]: size === EXPRESSIVE_MODAL_SIZE.FULL_WIDTH,
      ...containerClass,
    });
    return html`
      <button id="start-sentinel" class="${prefix}--visually-hidden" @focusin="${handleFocusIn}">START</button>
      <div
        class="${containerClasses}"
        tabindex="-1"
        role="dialog"
        aria-labelledby="modal-header"
        @click="${handleClickContainer}"
        @slotchange="${handleSlotChange}"
      >
        <div class="bx--modal-content">
          <div class="${ddsPrefix}-ce--modal__body">
            <dds-expressive-modal-close-button></dds-expressive-modal-close-button>
            <slot></slot>
          </div>
        </div>
      </div>
      <button id="end-sentinel" class="${prefix}--visually-hidden" @focusin="${handleFocusIn}">END</button>
    `;
  }

  static styles = styles; // `styles` here is a `CSSResult` generated by custom WebPack loader
}

export default DDSLightbox;
