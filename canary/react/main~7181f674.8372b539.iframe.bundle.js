(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"./docs/breaking-changes.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return g}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=["components"];function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={};function h(e){var n=e.components,t=c()(e,u);return Object(l.b)("wrapper",s()({},f,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Breaking changes",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:"# Breaking changes\n\n## v1.32.0\n\n### Deprecation warning\n\n#### React\n\n- The React `Masthead` is now in feature freeze, where any new features or enhancements will only be done on the Web Component version. We will continue to support\nany bugs or issues for the rest of `Carbon for IBM.com v1`.\n\n## v1.28.0\n\n### Deprecation warning\n\n#### React\n\n- `Layout` has been deprecated to better align with the style mixin and classes used in Web Components. Layout documentation has been updated on how to use the mixin and classes.\n\n## v1.26.0\n\n### Deprecation warning\n\n- Due to low usage, and the availability of more rapid full releases, we are\n  discontinuing bi-weekly beta releases of Carbon for IBM.com.\n\n## v1.25.0\n\n### Design adjustment\n\n- All content block and content group components should now pass the Card\n  CTA `copy` as `heading`. Example:\n\n```javascript\n<ContentBlockSimple\n  cta={{\n    cta: {\n      href: 'https://www.example.com',\n    },\n    style: 'card',\n    type: 'local',\n    heading: 'Lorem ipsum dolor sit ametttt',\n  }}\n  ...\n/>\n```\n\n## v1.24.0\n\n### Deprecation warning\n\n#### Styles\n\n- The `Expressive Theme` has been integrated into Carbon Design Systemâ€™s core\n  library. This means that expressive continues to be available to IBM.com, but\n  now all Carbon adopters can get both productive and expressive experiences\n  from the same library source. This change will be seamless for current\n  adopters of Carbon for IBM.com. In the next few sprints, we will be shifting\n  to use expressive styling and elements from core, then the Expressive Theme\n  within Carbon for IBM.com will no longer be maintained.\n\n## v1.23.0\n\n### Deprecation warning\n\n#### Services\n\n- `AnalyticsAPI.initScrollTracker` has been deprecated as GESTURES v1.x should\n  no longer be used. GESTURES v2.x is owned by IBM DBDM team and is managed\n  within their platform.\n\n## v1.22.0\n\n### Deprecation warning\n\n#### Services\n\n- `VideoPlayerAPI` has been deprecated in favor of `KalturaPlayerAPI`\n\n## v1.20.0\n\n### Deprecation warning\n\n- With the continuing enhancements and changes in the `lead space`, the `react`\n  version is now in feature freeze. For any new features and enhancements of the\n  `lead space`, the wrapper version of the `web-components` lead space should be\n  used.\n\n## v1.11.0\n\n- The `<HorizontalRule />` has a change in prop name, namely the `style` prop is\n  now called `type`.\n\n### Services\n\n- The environment variable `SEARCH_TYPEAHEAD_HOST` has been renamed to\n  `SEARCH_TYPEAHEAD_API`.\n\n## v1.9.0\n\n### Deprecation warning\n\n#### Patterns are now Components!\n\nSimilar to the pivot from `v1.8.0` release for `sub-patterns`, we have now\nconsolidated all `patterns / blocks` and `patterns / sections` into\n`components`, so now all `coded things` are considered as `components`! With\nthis change, the `scss` imports have now been remapped under `/scss/components`,\nhowever we have kept a deprecation import so that nothing breaks (for now) on\nthe application side. A deprecation warning will show for imports pointing to\nthe patterns folder, which we will ultimately remove in a future release.\n\n## v1.8.0\n\n### Deprecation warning\n\n#### Sub-patterns\n\nSub-patterns have been consolidated into `components`. With this change, the\nscss imports now fall under the `components` folder instead of `sub-patterns`. A\ndeprecation warning will show for imports pointing to the `sub-patterns`\nfolder, which we will ultimately remove in a future release.\n\n## v1.7.0\n\n- The `DotcomShell` formerly passed in `Footer` and `Masthead` props as flat\n  props into the `DotcomShell` for functionality. We are now breaking them out\n  into two separate prop objects, `footerProps` and `mastheadProps`. If you are\n  upgrading to `v1.7.0` and are using the `DotcomShell`, you will need to make\n  this modification to your code for it to continue to render properly.\n\n",mdxType:"Description"}))}h.isMDXComponent=!0;var g=function(){throw new Error("Docs-only story")};g.parameters={docsOnly:!0};var y={title:"Overview/Breaking changes",includeStories:["__page"]},v={};y.parameters=y.parameters||{},y.parameters.docs=b(b({},y.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:v,mdxComponentAnnotations:y},Object(l.b)(h,null))}});n.default=y},"./docs/building-for-ibm-dotcom.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return y}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=t("../../docs/building-for-ibm-dotcom.md"),m=["components"];function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var h={};function g(e){var n=e.components,t=c()(e,m);return Object(l.b)("wrapper",s()({},h,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Building for IBM(dot)com",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:u.a,mdxType:"Description"}))}g.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var v={title:"Overview/Building for IBM(dot)com",includeStories:["__page"]},w={};v.parameters=v.parameters||{},v.parameters.docs=f(f({},v.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:w,mdxComponentAnnotations:v},Object(l.b)(g,null))}}),n.default=v},"./docs/contributing-to-react.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return g}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=["components"];function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={};function h(e){var n=e.components,t=c()(e,u);return Object(l.b)("wrapper",s()({},f,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Contributing to the React package",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:"\x3c!-- START doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\x3e\n## Table of Contents\n\n- [Contributing to Carbon for IBM.com React package](#contributing-to-carbon-for-ibmcom-react-package)\n  - [Overview](#overview)\n  - [Packages](#packages)\n  - [React DocGen](#react-docgen)\n  - [Stable Selectors](#stable-selectors)\n  - [Feature Flag](#feature-flag)\n  - [Environment Variables](#environment-variables)\n  - [Storybook](#storybook)\n  - [Unit Test Coverage](#unit-test-coverage)\n  - [Don't Forget To...](#dont-forget-to)\n\n\x3c!-- END doctoc generated TOC please keep comment here to allow auto update --\x3e\n\n# Contributing to Carbon for IBM.com React package\n\n> Guidelines for how to make a code contribution to the React package\n\n## Overview\n\nThank you for your contribution to Carbon for IBM.com! Below are guidelines on\nwhat some of the things we would be looking for as part of your contribution.\n\n## Packages\n\nWe try to have any contributions to the library to live in their corresponding\npackage(s). The main packages to look out for when contributing a React \ncomponent:\n\n- **Styles**: ([@carbon/ibmdotcom-styles](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/styles)) \nAll styles should live in the styles package in the monorepo. This way, the\nstyles can be shared with any other framework package (e.g. web components). \nIn addition, the way that web components utilize styles requires that there \nisn't a heavy amount of nesting happening in the `SCSS` code. \n- **Services**: ([@carbon/ibmdotcom-services](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/services))\nIf your component makes any API requests to a service that does not currently\nexist yet in our Services package, you can add in a new ES6 service class in\nthis package. If you need to test across multiple packages, you can make use of\n[yarn link](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/docs/developing.md#developing-locally).\nBe sure to properly export the class from the main `index.js`.\n- **Utilities**: ([@carbon/ibmdotcom-utilities](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/utilities))\nSimilar to ([Services](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/services)),\nany abstract utilities can be added to the Utilities package as an ES6 class or\nfunction. Be sure to properly export the class or function from the main \n`index.js`.\n\n## React DocGen\n\nIt is important that the component includes full documentation using [React DocGen](https://github.com/reactjs/react-docgen)\nstandards. Be sure to fully define the `propTypes`, and provide any default \nvalues (under `defaultProps`) as well as all possible values for any props that\nare looking for one of many values values (e.g. `PropTypes.oneOf`)\n\n## Stable Selectors\n\nEvery component must include [stable selectors](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/docs/stable-selectors.md) \nas part of the overall markup, identifying any key elements that would be useful\nto have the ability to identify in a DOM search. At minimum, there should be at\nleast a container level stable selector defined, and all should use the `dds--`\nprefix identified from the utilities package. For example:\n\n```javascript\nconst { stablePrefix } = ddsSettings;\n\nconst MyComponent = () => {\n  \n  return (\n    <div\n      data-autoid={`${stablePrefix}--my-components`}\n    >\n    </div>\n  );\n};\n```\n\n## Feature Flag\n\nIf this is a new component or enhancement, we would require that it is \nintroduced into Carbon for IBM.com behind a feature flag. \n\n[You can read full details on how to create and implement a feature flag here](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/docs/feature-flags.md).\n\nAn example of creating a Storybook story that will be ignored if the feature\nflag is disabled:\n\n```javascript\nimport MyComponent from '../MyComponent';\nimport { DDS_MY_COMPONENT } from '../../../internal/FeatureFlags';\nimport React from 'react';\nimport readme from '../README.stories.mdx';\n\nexport default !DDS_MY_COMPONENT\n  ? undefined\n  : {\n      title: 'Components|My component',\n      parameters: {\n        ...readme.parameters,\n        knobs: {\n          MyComponent: ({ groupId }) => ({\n            props: {\n              prop1: text('Prop 1 (prop1):', 'Lorem Ipsum', groupId),\n              prop2: text('Prop 2 (prop2):', 'Lorem Ipsum', groupId),\n            },\n          }),\n        },\n      },\n    };\n```\n\n## Environment Variables\n\nIf introducing any new environment variables (e.g. feature flags), be sure to \nalso update the `.env.example` file at the root of the React package folder. \nThe example should include a good description of what the environment variable \ndoes.\n\n## Storybook\n\nIn storybook, we are looking for the following criteria:\n\n- Blend of configurable knobs to multiple sub-stories that capture full\nfunctionality and features. When it makes sense, break down to multiple stories\nso that our automated visual regression tool ([Percy](https://percy.io)) can \nautomatically capture in its snapshot suite rather than creating multiple \nknobs.\n- Knob labels include the actual prop name in parenthesis\n- README (`README.stories.mdx`) with clear instructions for any Carbon for \nIBM.com user to get started right away. This would include:\n  * Which import(s) to include\n  * How to implement in a sample React application (multiple examples if \n    necessary)\n  * Environment variable description and implementation details (if introducing \n    a new component)\n  * Prop table\n  * Stable Selectors table\n  * Contributing snippet (imported from root docs)\n\n## Unit Test Coverage\n\nOur team looks to include a minimum of 80% unit test coverage. One of the \nfeatures that we have included in Storybook is [Storyshots](https://www.npmjs.com/package/@storybook/addon-storyshots),\nwhich will auto-generate snapshot tests based on existing storybook stories. \nWhile this gives automatic coverage right off the bat, additional unit tests\nmay be required to get over the 80% goal. All component level tests must live\nin the component folder under a sub-folder `__tests__`. The file name structure\nshould be `MyComponent.test.js`. Be sure to include any mock data (if necessary)\nin a `data` subfolder under `__tests__`. \n\nTo view a coverage report (and run the test suite), you can run:\n\n```bash\nyarn test:unit\n``` \n\nThis will generate a `coverage` folder which includes what the current coverage\namount is, and which line(s) are missing any coverage.\n\nTo update the snapshot file, run the following:\n\n```bash\nyarn test:unit:updateSnapshot\n```\n\n## Don't Forget To...\n\n<ul>\n<li>Export any new components from the main `index.js`</li>\n</ul>\n\nRead more about our [submission guidelines](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/docs/submission-guidelines.md).\n",mdxType:"Description"}))}h.isMDXComponent=!0;var g=function(){throw new Error("Docs-only story")};g.parameters={docsOnly:!0};var y={title:"Overview/Contributing to the React package",includeStories:["__page"]},v={};y.parameters=y.parameters||{},y.parameters.docs=b(b({},y.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:v,mdxComponentAnnotations:y},Object(l.b)(h,null))}});n.default=y},"./docs/enable-rtl.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return y}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=t("../../docs/enable-rtl.md"),m=["components"];function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var h={};function g(e){var n=e.components,t=c()(e,m);return Object(l.b)("wrapper",s()({},h,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Enable right-to-left (RTL)",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:u.a,mdxType:"Description"}))}g.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var v={title:"Overview/Enable right-to-left (RTL)",includeStories:["__page"]},w={};v.parameters=v.parameters||{},v.parameters.docs=f(f({},v.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:w,mdxComponentAnnotations:v},Object(l.b)(g,null))}}),n.default=v},"./docs/environment-variables.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return g}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=["components"];function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={};function h(e){var n=e.components,t=c()(e,u);return Object(l.b)("wrapper",s()({},f,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Environment variables",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:"# Environment Variables\n\n\x3c!-- prettier-ignore-start --\x3e\n\x3c!-- START doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\x3e\n## Table of Contents\n\n- [Overview](#overview)\n- [Local Environment Variables](#local-environment-variables)\n\n\x3c!-- END doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- prettier-ignore-end --\x3e\n\n## Overview\n\nEnvironment variables can be set for the React package in order to set various \nbehavior within the application. This includes \n[feature flags](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/docs/feature-flags.md) \nand other settings.\n\n## Local Environment Variables\nEnvironment variables can be set within the local package, which are picked up\nby start-storybook. To use environment variables, create a file called `.env` at\nthe root of the react package folder, then copy and paste the contents of \n`.env.example` into the file.\n\nWithin `.env`, the values can then be set for the local environment:\n\n`.env`\n\n```text\nREACT_STORYBOOK_SOURCEMAPS=true\n\n# Feature Flags\nFEATURE_NAME=true\n```\n",mdxType:"Description"}))}h.isMDXComponent=!0;var g=function(){throw new Error("Docs-only story")};g.parameters={docsOnly:!0};var y={title:"Overview/Environment variables",includeStories:["__page"]},v={};y.parameters=y.parameters||{},y.parameters.docs=b(b({},y.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:v,mdxComponentAnnotations:y},Object(l.b)(h,null))}});n.default=y},"./docs/feature-flags.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return g}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=["components"];function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function b(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var f={};function h(e){var n=e.components,t=c()(e,u);return Object(l.b)("wrapper",s()({},f,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Feature flags",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:"\x3c!-- START doctoc generated TOC please keep comment here to allow auto update --\x3e\n\x3c!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --\x3e\n## Table of Contents\n\n- [Feature Flags](#feature-flags)\n  - [Overview](#overview)\n  - [Creating a Feature Flag](#creating-a-feature-flag)\n  - [Wrapping Storybook Stories with Feature Flags](#wrapping-storybook-stories-with-feature-flags)\n- [Using Feature Flags](#using-feature-flags)\n  - [Turning On/Off Feature Flags Locally](#turning-onoff-feature-flags-locally)\n\n\x3c!-- END doctoc generated TOC please keep comment here to allow auto update --\x3e\n\n# Feature Flags\n\n> Guidelines for how to create and use feature flags in the React package\n\n## Overview\n\nFeature flags should be used when a particular feature is not ready for public\ncomsumption. This can pertain to proof of concepts, works in progress that will\nnot be ready for the next release, etc.\n\n## Creating a Feature Flag\n\nWithin the file `FeatureFlags.js`, add a line with the following structure:\n\n```javascript\nexport const DDS_FEATURE_NAME = process.env.DDS_FEATURE_NAME === 'true' || DDS_FLAGS_ALL || false;\n```\n\nThen, add `DDS_FEATURE_NAME` to `.env.example` in the root of the package:\n\n```text\n# Feature Flags\nDDS_FEATURE_NAME=<boolean flag to turn on or off feature xyz>\n```\n\n## Wrapping Storybook Stories with Feature Flags\n\nWhen rendering the Storybook instance, experimental features should not appear\nunless the flag is enabled. Any storybook stories should be exported with the \nfeature flag:\n\n```javascript\nimport MyFeature from '../MyFeature';\nimport { DDS_MY_FEATURE } from '../../../internal/FeatureFlags';\nimport React from 'react';\n\nexport default !DDS_MY_FEATURE\n  ? undefined\n  : {\n      title: 'Components|My feature',\n      parameters: {\n        ...\n      },\n    };\n\nexport const Default = !DDS_MY_FEATURE\n  ? undefined\n  : ({ parameters }) => {\n      ...\n    };\n```\n\n# Using Feature Flags\n\nOnce a flag is created, it can then be imported for use within a component.\n\nFor example:\n\n```javascript\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DDS_FEATURE_NAME } from '../../internal/FeatureFlags.js';\nimport { featureFlag } from '@carbon/ibmdotcom-utilities';\n\n/**\n * EXPERIMENTAL: Renders Lorem ipsum component\n *\n * @returns {*} The rendered component\n * @private\n * @class\n */\nconst FeatureName = () => featureFlag(DDS_FEATURE_NAME, <div>Lorem Ipsum</div>);\n\nexport default FeatureName;\n```\n\nThe feature can also be selectively injected into another component using the\nfeature flag:\n\n```javascript\nimport React from 'react';\nimport { DDS_FEATURE_NAME } from '../../internal/FeatureFlags.js';\nimport { featureFlag } from '@carbon/ibmdotcom-utilities';\nimport FeatureName from './FeatureName';\n\n/** Footer component */\nclass MyComponent extends React.Component {\n  /**\n   * Renders my component\n   *\n   * @returns {object} JSX object\n   */\n  render() {\n    return (\n      <div>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n        {featureFlag(DDS_FEATURE_NAME, <FeatureName />)}\n      </div>\n    );\n  }\n}\n\nexport default MyComponent;\n```\n\n## Turning On/Off Feature Flags Locally\n\nTo enable a feature locally, follow the instructions on \n[environment variables](https://github.com/carbon-design-system/carbon-for-ibm-dotcom/blob/main/packages/react/docs/environment-variables.md).\n\nReplace the helper text with the value `true`. For example:\n\n`.env`\n\n```text\n# Feature Flags\nDDS_FEATURE_NAME=true\n```\n\nOnce the flag is in place, storybook can be deployed and will honor the flag.\n",mdxType:"Description"}))}h.isMDXComponent=!0;var g=function(){throw new Error("Docs-only story")};g.parameters={docsOnly:!0};var y={title:"Overview/Feature flags",includeStories:["__page"]},v={};y.parameters=y.parameters||{},y.parameters.docs=b(b({},y.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:v,mdxComponentAnnotations:y},Object(l.b)(h,null))}});n.default=y},"./docs/overview.stories.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"__page",(function(){return y}));var o=t("../../node_modules/@babel/runtime/helpers/defineProperty.js"),r=t.n(o),a=t("../../node_modules/@babel/runtime/helpers/extends.js"),s=t.n(a),i=t("../../node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),c=t.n(i),l=(t("../../node_modules/react/index.js"),t("../../node_modules/@mdx-js/react/dist/esm.js")),d=t("../../node_modules/@storybook/addon-docs/dist/esm/index.js"),p=t("../../node_modules/@storybook/addon-docs/blocks.js"),u=t("./README.md"),m=["components"];function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function f(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){r()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var h={};function g(e){var n=e.components,t=c()(e,m);return Object(l.b)("wrapper",s()({},h,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)(p.b,{title:"Overview/Getting started",mdxType:"Meta"}),Object(l.b)(p.a,{markdown:u.a,mdxType:"Description"}))}g.isMDXComponent=!0;var y=function(){throw new Error("Docs-only story")};y.parameters={docsOnly:!0};var v={title:"Overview/Getting started",includeStories:["__page"]},w={};v.parameters=v.parameters||{},v.parameters.docs=f(f({},v.parameters.docs||{}),{},{page:function(){return Object(l.b)(d.a,{mdxStoryNameToKey:w,mdxComponentAnnotations:v},Object(l.b)(g,null))}}),n.default=v}}]);