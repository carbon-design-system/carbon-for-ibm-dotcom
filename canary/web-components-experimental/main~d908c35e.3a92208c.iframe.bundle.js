/*! For license information please see main~d908c35e.3a92208c.iframe.bundle.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{"./src/components/structured-list/__stories__/structured-list.stories.ts":function(t,e,r){"use strict";r.r(e),r.d(e,"Default",(function(){return $})),r.d(e,"WithRowHeaders",(function(){return z})),r.d(e,"WithSubheaders",(function(){return B})),r.d(e,"WithComplexContent",(function(){return W}));r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.object.freeze.js"),r("../../node_modules/core-js/modules/es.object.keys.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.array.filter.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),r("../../node_modules/core-js/modules/es.object.define-properties.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.number.constructor.js");var s=r("../../node_modules/lit-element/lit-element.js"),d=(r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/react/index.js"),r("./node_modules/@mdx-js/react/dist/esm.js")),l=r("./node_modules/@storybook/addon-docs/dist/esm/index.js"),u=r("./node_modules/@storybook/addon-docs/blocks.js"),o=r("../../docs/contributing-license.md"),i=(r("./docs/markdown-contents.md"),r("./src/globals/internal/storybook-cdn.ts"));function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}var n=["components"];function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,s)}return r}function b(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){h(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function h(t,e,r){return(e=function(t){var e=function(t,e){if("object"!==c(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==c(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===c(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function p(){return p=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s])}return t},p.apply(this,arguments)}function m(t,e){if(null==t)return{};var r,s,d=function(t,e){if(null==t)return{};var r,s,d={},l=Object.keys(t);for(s=0;s<l.length;s++)r=l[s],e.indexOf(r)>=0||(d[r]=t[r]);return d}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(s=0;s<l.length;s++)r=l[s],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(d[r]=t[r])}return d}var x={};function f(t){var e=t.components,r=m(t,n);return Object(d.b)("wrapper",p({},x,r,{components:e,mdxType:"MDXLayout"}),Object(d.b)("h1",{id:"structured-list"},"Structured List"),Object(d.b)("blockquote",null,Object(d.b)("p",{parentName:"blockquote"},"ðŸ’¡ Check our\n",Object(d.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/structured-list",target:"_blank",rel:"nofollow noopener noreferrer"},"CodeSandbox"),"\nexample implementation.")),Object(d.b)("p",null,Object(d.b)("a",{parentName:"p",href:"https://githubbox.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components/examples/codesandbox/components/structured-list",target:"_blank",rel:"nofollow noopener noreferrer"},Object(d.b)("img",{parentName:"a",src:"https://codesandbox.io/static/img/play-codesandbox.svg",alt:"Edit @carbon/ibmdotcom-web-components"}))),Object(d.b)("h2",{id:"getting-started"},"Getting started"),Object(d.b)("p",null,"Here's a quick example to get you started."),Object(d.b)("h3",{id:"js-via-import"},"JS (via import)"),Object(d.b)("pre",null,Object(d.b)("code",{parentName:"pre",className:"language-javascript"},"import '@carbon/ibmdotcom-web-components/es/components/structured-list/index.js';\n")),Object(d.b)(u.a,{markdown:"".concat(Object(i.c)({components:["structured-list"]})),mdxType:"Description"}),Object(d.b)(u.a,{markdown:"".concat(Object(i.a)()),mdxType:"Description"}),Object(d.b)("h3",{id:"html"},"HTML"),Object(d.b)("pre",null,Object(d.b)("code",{parentName:"pre",className:"language-html"},"<dds-structured-list>\n  <dds-structured-list-head>\n    <dds-structured-list-header-row>\n      <dds-structured-list-header-cell\n        >Column A</dds-structured-list-header-cell\n      >\n      <dds-structured-list-header-cell\n        >Column B</dds-structured-list-header-cell\n      >\n      <dds-structured-list-header-cell\n        >Column C</dds-structured-list-header-cell\n      >\n    </dds-structured-list-header-row>\n  </dds-structured-list-head>\n  <dds-structured-list-body>\n    <dds-structured-list-row>\n      <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n      <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n      <dds-structured-list-cell>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui magna,\n        finibus id tortor sed, aliquet bibendum augue. Aenean posuere sem vel\n        euismod dignissim.\n      </dds-structured-list-cell>\n    </dds-structured-list-row>\n    <dds-structured-list-row>\n      <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n      <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n      <dds-structured-list-cell>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui magna,\n        finibus id tortor sed, aliquet bibendum augue. Aenean posuere sem vel\n        euismod dignissim.\n      </dds-structured-list-cell>\n    </dds-structured-list-row>\n    <dds-structured-list-row>\n      <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n      <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n      <dds-structured-list-cell>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui magna,\n        finibus id tortor sed, aliquet bibendum augue. Aenean posuere sem vel\n        euismod dignissim.\n      </dds-structured-list-cell>\n    </dds-structured-list-row>\n  </dds-structured-list-body>\n</dds-structured-list>\n")),Object(d.b)("h2",{id:"props"},"Props"),Object(d.b)(u.c,{of:"dds-structured-list",mdxType:"Props"}),Object(d.b)("h2",{id:"stable-selectors"},"Stable selectors"),Object(d.b)("p",null,"See\n",Object(d.b)("a",{parentName:"p",href:"https://github.com/carbon-design-system/carbon-for-ibm-dotcom/tree/main/packages/web-components#stable-selectors-for-analytics-and-integratione2e-testing-in-web-components",target:"_blank",rel:"nofollow noopener noreferrer"},"our README"),"\nto see how Web Components selector and ",Object(d.b)("inlineCode",{parentName:"p"},"data-autoid")," should be used."),Object(d.b)("table",null,Object(d.b)("thead",{parentName:"table"},Object(d.b)("tr",{parentName:"thead"},Object(d.b)("th",{parentName:"tr",align:null},"Web Components selector"),Object(d.b)("th",{parentName:"tr",align:null},"Compatibility selector"),Object(d.b)("th",{parentName:"tr",align:null},"Description"))),Object(d.b)("tbody",{parentName:"table"},Object(d.b)("tr",{parentName:"tbody"},Object(d.b)("td",{parentName:"tr",align:null},Object(d.b)("inlineCode",{parentName:"td"},"<dds-structured-list>")),Object(d.b)("td",{parentName:"tr",align:null},Object(d.b)("inlineCode",{parentName:"td"},'data-autoid="dds--structured-list"')),Object(d.b)("td",{parentName:"tr",align:null},"Component")))),Object(d.b)(u.a,{markdown:o.a,mdxType:"Description"}))}f.isMDXComponent=!0;var g={includeStories:[]},w={};g.parameters=g.parameters||{},g.parameters.docs=b(b({},g.parameters.docs||{}),{},{page:function(){return Object(d.b)(l.a,{mdxStoryNameToKey:w,mdxComponentAnnotations:g},Object(d.b)(f,null))}});var y,v,j,k,S,_=g,O=(r("./src/components/structured-list/structured-list.ts"),r("./src/components/structured-list/structured-list-head.ts"),r("./src/components/structured-list/structured-list-header-row.ts"),r("./src/components/structured-list/structured-list-header-cell.ts"),r("./src/components/structured-list/structured-list-body.ts"),r("./src/components/structured-list/structured-list-group.ts"),r("./src/components/structured-list/structured-list-row.ts"),r("./src/components/structured-list/structured-list-cell.ts"),r("./src/internal/vendor/@carbon/web-components/components/tooltip/index.js"),r("./src/internal/vendor/@carbon/web-components/components/tag/index.js"),r("./.storybook/knob-text-nullable.ts"));function E(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}var A,P,L,C,N;function D(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,s)}return r}function q(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?D(Object(r),!0).forEach((function(e){T(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):D(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function T(t,e,r){return(e=function(t){var e=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==R(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===R(e)?e:String(e)}(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}var $=function(t){var e,r=null!==(e=null==t?void 0:t.StructuredList)&&void 0!==e?e:{},d=r.colSpan1,l=r.colSpan2,u=r.colSpan3,o=r.colSpan4;return Object(s.c)(A||(A=y||(y=E(['\n    <style>\n      html,\n      body {\n        overflow-x: hidden;\n      }\n    </style>\n    <dds-structured-list\n      col-span-1="','"\n      col-span-2="','"\n      col-span-3="','"\n      col-span-4="','">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Column A</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column B</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column C</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column D</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  ']))),null!=d?d:"",null!=l?l:"",null!=u?u:"",null!=o?o:"")},z=function(t){var e,r=null!==(e=null==t?void 0:t.StructuredList)&&void 0!==e?e:{},d=r.colSpan1,l=r.colSpan2,u=r.colSpan3,o=r.colSpan4;return Object(s.c)(P||(P=v||(v=E(['\n    <dds-structured-list\n      col-span-1="','"\n      col-span-2="','"\n      col-span-3="','"\n      col-span-4="','">\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 1</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 2</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 3</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  ']))),null!=d?d:"",null!=l?l:"",null!=u?u:"",null!=o?o:"")};z.story={name:"With row headers"};var B=function(t){var e,r=null!==(e=null==t?void 0:t.StructuredList)&&void 0!==e?e:{},d=r.colSpan1,l=r.colSpan2,u=r.colSpan3,o=r.colSpan4;return Object(s.c)(L||(L=j||(j=E(['\n    <dds-structured-list\n      col-span-1="','"\n      col-span-2="','"\n      col-span-3="','"\n      col-span-4="','">\n      <dds-structured-list-body>\n        <dds-structured-list-group title="Group 1">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group\n          title="Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group title="Group 3">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  ']))),null!=d?d:"",null!=l?l:"",null!=u?u:"",null!=o?o:"")};B.story={name:"With subheaders"};var W=function(t){var e,r=null!==(e=null==t?void 0:t.StructuredList)&&void 0!==e?e:{},d=r.colSpan1,l=r.colSpan2,u=r.colSpan3,o=r.colSpan4;return Object(s.c)(C||(C=k||(k=E(['\n    <dds-structured-list\n      col-span-1="','"\n      col-span-2="','"\n      col-span-3="','"\n      col-span-4="','">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Product Name</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell tooltip="Tooltip text">\n            Cell with tooltip\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell icon="checkmark">\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell\n            tags="Merchandising Offer, Secondary Tag, Other">\n            Cell with tags\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  ']))),null!=d?d:"",null!=l?l:"",null!=u?u:"",null!=o?o:"")};W.story={name:"With complex content"};var I,F,M;e.default={title:"Components/Structured list",parameters:q(q((I={storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "\\n    \\n    // @ts-nocheck\\n    // @ts-ignore\\n    var __STORY__ = \\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport readme from \'./README.stories.mdx\';\\\\nimport \'../index\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\n\\\\nexport const Default = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <style>\\\\n      html,\\\\n      body {\\\\n        overflow-x: hidden;\\\\n      }\\\\n    </style>\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-head>\\\\n        <dds-structured-list-header-row>\\\\n          <dds-structured-list-header-cell\\\\n            >Column A</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column B</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column C</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column D</dds-structured-list-header-cell\\\\n          >\\\\n        </dds-structured-list-header-row>\\\\n      </dds-structured-list-head>\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nexport const WithRowHeaders = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 1</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 2</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 3</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithRowHeaders.story = {\\\\n  name: \'With row headers\',\\\\n};\\\\n\\\\nexport const WithSubheaders = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-group title=\\\\\\"Group 1\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n        <dds-structured-list-group\\\\n          title=\\\\\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n        <dds-structured-list-group title=\\\\\\"Group 3\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithSubheaders.story = {\\\\n  name: \'With subheaders\',\\\\n};\\\\n\\\\nexport const WithComplexContent = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-head>\\\\n        <dds-structured-list-header-row>\\\\n          <dds-structured-list-header-cell\\\\n            >Product Name</dds-structured-list-header-cell\\\\n          >\\\\n        </dds-structured-list-header-row>\\\\n      </dds-structured-list-head>\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell tooltip=\\\\\\"Tooltip text\\\\\\">\\\\n            Cell with tooltip\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell icon=\\\\\\"checkmark\\\\\\">\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell\\\\n            tags=\\\\\\"Merchandising Offer, Secondary Tag, Other\\\\\\">\\\\n            Cell with tags\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithComplexContent.story = {\\\\n  name: \'With complex content\',\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Structured list\',\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      StructuredList: () => ({\\\\n        colSpan1: textNullable(\'col-span-1\', \'\'),\\\\n        colSpan2: textNullable(\'col-span-2\', \'\'),\\\\n        colSpan3: textNullable(\'col-span-3\', \'\'),\\\\n        colSpan4: textNullable(\'col-span-4\', \'\'),\\\\n      }),\\\\n    },\\\\n  },\\\\n  decorators: [\\\\n    (story) => html`\\\\n      <div class=\\\\\\"bx--grid\\\\\\">\\\\n        <div class=\\\\\\"bx--row\\\\\\">\\\\n          <div class=\\\\\\"bx--col-lg-16\\\\\\">${story()}</div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n};\\\\n\\";\\n    // @ts-ignore\\n    var __LOCATIONS_MAP__ = {\\"Default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":15},\\"endLoc\\":{\\"col\\":1,\\"line\\":91},\\"startBody\\":{\\"col\\":23,\\"line\\":15},\\"endBody\\":{\\"col\\":1,\\"line\\":91}},\\"WithRowHeaders\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":93},\\"endLoc\\":{\\"col\\":1,\\"line\\":138},\\"startBody\\":{\\"col\\":30,\\"line\\":93},\\"endBody\\":{\\"col\\":1,\\"line\\":138}},\\"WithSubheaders\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":144},\\"endLoc\\":{\\"col\\":1,\\"line\\":262},\\"startBody\\":{\\"col\\":30,\\"line\\":144},\\"endBody\\":{\\"col\\":1,\\"line\\":262}},\\"WithComplexContent\\":{\\"startLoc\\":{\\"col\\":34,\\"line\\":268},\\"endLoc\\":{\\"col\\":1,\\"line\\":309},\\"startBody\\":{\\"col\\":34,\\"line\\":268},\\"endBody\\":{\\"col\\":1,\\"line\\":309}}};\\n    \\n/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../index\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <style>\\n      html,\\n      body {\\n        overflow-x: hidden;\\n      }\\n    </style>\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Column A</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column B</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column C</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column D</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};;\\n\\nexport const WithRowHeaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 1</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 2</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 3</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};;\\n\\nWithRowHeaders.story = {\\n  name: \'With row headers\',\\n};\\n\\nexport const WithSubheaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-group title=\\"Group 1\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group\\n          title=\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group title=\\"Group 3\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};;\\n\\nWithSubheaders.story = {\\n  name: \'With subheaders\',\\n};\\n\\nexport const WithComplexContent = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Product Name</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell tooltip=\\"Tooltip text\\">\\n            Cell with tooltip\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell icon=\\"checkmark\\">\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell\\n            tags=\\"Merchandising Offer, Secondary Tag, Other\\">\\n            Cell with tags\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithComplexContent.story = {\\n  name: \'With complex content\',\\n};\\n\\nexport default {\\n  title: \'Components/Structured list\',\\n  parameters: {\\"storySource\\":{\\"source\\":\\"/**\\\\n * @license\\\\n *\\\\n * Copyright IBM Corp. 2020, 2023\\\\n *\\\\n * This source code is licensed under the Apache-2.0 license found in the\\\\n * LICENSE file in the root directory of this source tree.\\\\n */\\\\n\\\\nimport { html } from \'lit-element\';\\\\nimport readme from \'./README.stories.mdx\';\\\\nimport \'../index\';\\\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\\\n\\\\nexport const Default = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <style>\\\\n      html,\\\\n      body {\\\\n        overflow-x: hidden;\\\\n      }\\\\n    </style>\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-head>\\\\n        <dds-structured-list-header-row>\\\\n          <dds-structured-list-header-cell\\\\n            >Column A</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column B</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column C</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-header-cell\\\\n            >Column D</dds-structured-list-header-cell\\\\n          >\\\\n        </dds-structured-list-header-row>\\\\n      </dds-structured-list-head>\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nexport const WithRowHeaders = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 1</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 2</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n            >Row 3</dds-structured-list-header-cell\\\\n          >\\\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithRowHeaders.story = {\\\\n  name: \'With row headers\',\\\\n};\\\\n\\\\nexport const WithSubheaders = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-group title=\\\\\\"Group 1\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n        <dds-structured-list-group\\\\n          title=\\\\\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n        <dds-structured-list-group title=\\\\\\"Group 3\\\\\\">\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 1</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 2</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n          <dds-structured-list-row>\\\\n            <dds-structured-list-header-cell scope=\\\\\\"row\\\\\\"\\\\n              >Row 3</dds-structured-list-header-cell\\\\n            >\\\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\\\n            <dds-structured-list-cell>\\\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\\\n              posuere sem vel euismod dignissim.\\\\n            </dds-structured-list-cell>\\\\n          </dds-structured-list-row>\\\\n        </dds-structured-list-group>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithSubheaders.story = {\\\\n  name: \'With subheaders\',\\\\n};\\\\n\\\\nexport const WithComplexContent = (args) => {\\\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\\\n  return html`\\\\n    <dds-structured-list\\\\n      col-span-1=\\\\\\"${colSpan1 ?? \'\'}\\\\\\"\\\\n      col-span-2=\\\\\\"${colSpan2 ?? \'\'}\\\\\\"\\\\n      col-span-3=\\\\\\"${colSpan3 ?? \'\'}\\\\\\"\\\\n      col-span-4=\\\\\\"${colSpan4 ?? \'\'}\\\\\\">\\\\n      <dds-structured-list-head>\\\\n        <dds-structured-list-header-row>\\\\n          <dds-structured-list-header-cell\\\\n            >Product Name</dds-structured-list-header-cell\\\\n          >\\\\n        </dds-structured-list-header-row>\\\\n      </dds-structured-list-head>\\\\n      <dds-structured-list-body>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell tooltip=\\\\\\"Tooltip text\\\\\\">\\\\n            Cell with tooltip\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell icon=\\\\\\"checkmark\\\\\\">\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell\\\\n            tags=\\\\\\"Merchandising Offer, Secondary Tag, Other\\\\\\">\\\\n            Cell with tags\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n        <dds-structured-list-row>\\\\n          <dds-structured-list-cell>\\\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\\\n            sem vel euismod dignissim.\\\\n          </dds-structured-list-cell>\\\\n        </dds-structured-list-row>\\\\n      </dds-structured-list-body>\\\\n    </dds-structured-list>\\\\n  `;\\\\n};\\\\n\\\\nWithComplexContent.story = {\\\\n  name: \'With complex content\',\\\\n};\\\\n\\\\nexport default {\\\\n  title: \'Components/Structured list\',\\\\n  parameters: {\\\\n    ...readme.parameters,\\\\n    knobs: {\\\\n      StructuredList: () => ({\\\\n        colSpan1: textNullable(\'col-span-1\', \'\'),\\\\n        colSpan2: textNullable(\'col-span-2\', \'\'),\\\\n        colSpan3: textNullable(\'col-span-3\', \'\'),\\\\n        colSpan4: textNullable(\'col-span-4\', \'\'),\\\\n      }),\\\\n    },\\\\n  },\\\\n  decorators: [\\\\n    (story) => html`\\\\n      <div class=\\\\\\"bx--grid\\\\\\">\\\\n        <div class=\\\\\\"bx--row\\\\\\">\\\\n          <div class=\\\\\\"bx--col-lg-16\\\\\\">${story()}</div>\\\\n        </div>\\\\n      </div>\\\\n    `,\\\\n  ],\\\\n};\\\\n\\",\\"locationsMap\\":{\\"default\\":{\\"startLoc\\":{\\"col\\":23,\\"line\\":15},\\"endLoc\\":{\\"col\\":1,\\"line\\":91},\\"startBody\\":{\\"col\\":23,\\"line\\":15},\\"endBody\\":{\\"col\\":1,\\"line\\":91}},\\"with-row-headers\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":93},\\"endLoc\\":{\\"col\\":1,\\"line\\":138},\\"startBody\\":{\\"col\\":30,\\"line\\":93},\\"endBody\\":{\\"col\\":1,\\"line\\":138}},\\"with-subheaders\\":{\\"startLoc\\":{\\"col\\":30,\\"line\\":144},\\"endLoc\\":{\\"col\\":1,\\"line\\":262},\\"startBody\\":{\\"col\\":30,\\"line\\":144},\\"endBody\\":{\\"col\\":1,\\"line\\":262}},\\"with-complex-content\\":{\\"startLoc\\":{\\"col\\":34,\\"line\\":268},\\"endLoc\\":{\\"col\\":1,\\"line\\":309},\\"startBody\\":{\\"col\\":34,\\"line\\":268},\\"endBody\\":{\\"col\\":1,\\"line\\":309}}}},\\n    ...readme.parameters,\\n    knobs: {\\n      StructuredList: () => ({\\n        colSpan1: textNullable(\'col-span-1\', \'\'),\\n        colSpan2: textNullable(\'col-span-2\', \'\'),\\n        colSpan3: textNullable(\'col-span-3\', \'\'),\\n        colSpan4: textNullable(\'col-span-4\', \'\'),\\n      }),\\n    },\\n  },\\n  decorators: [\\n    (story) => html`\\n      <div class=\\"bx--grid\\">\\n        <div class=\\"bx--row\\">\\n          <div class=\\"bx--col-lg-16\\">${story()}</div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":23},"endLoc":{"col":1,"line":99},"startBody":{"col":23,"line":23},"endBody":{"col":1,"line":99}},"WithRowHeaders":{"startLoc":{"col":30,"line":101},"endLoc":{"col":1,"line":146},"startBody":{"col":30,"line":101},"endBody":{"col":1,"line":146}},"WithSubheaders":{"startLoc":{"col":30,"line":152},"endLoc":{"col":1,"line":270},"startBody":{"col":30,"line":152},"endBody":{"col":1,"line":270}},"WithComplexContent":{"startLoc":{"col":34,"line":276},"endLoc":{"col":1,"line":317},"startBody":{"col":34,"line":276},"endBody":{"col":1,"line":317}}};\n    \n\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../index\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <style>\\n      html,\\n      body {\\n        overflow-x: hidden;\\n      }\\n    </style>\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Column A</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column B</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column C</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column D</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nexport const WithRowHeaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 1</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 2</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 3</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithRowHeaders.story = {\\n  name: \'With row headers\',\\n};\\n\\nexport const WithSubheaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-group title=\\"Group 1\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group\\n          title=\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group title=\\"Group 3\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithSubheaders.story = {\\n  name: \'With subheaders\',\\n};\\n\\nexport const WithComplexContent = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Product Name</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell tooltip=\\"Tooltip text\\">\\n            Cell with tooltip\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell icon=\\"checkmark\\">\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell\\n            tags=\\"Merchandising Offer, Secondary Tag, Other\\">\\n            Cell with tags\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithComplexContent.story = {\\n  name: \'With complex content\',\\n};\\n\\nexport default {\\n  title: \'Components/Structured list\',\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      StructuredList: () => ({\\n        colSpan1: textNullable(\'col-span-1\', \'\'),\\n        colSpan2: textNullable(\'col-span-2\', \'\'),\\n        colSpan3: textNullable(\'col-span-3\', \'\'),\\n        colSpan4: textNullable(\'col-span-4\', \'\'),\\n      }),\\n    },\\n  },\\n  decorators: [\\n    (story) => html`\\n      <div class=\\"bx--grid\\">\\n        <div class=\\"bx--row\\">\\n          <div class=\\"bx--col-lg-16\\">${story()}</div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n};\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"Default":{"startLoc":{"col":23,"line":15},"endLoc":{"col":1,"line":91},"startBody":{"col":23,"line":15},"endBody":{"col":1,"line":91}},"WithRowHeaders":{"startLoc":{"col":30,"line":93},"endLoc":{"col":1,"line":138},"startBody":{"col":30,"line":93},"endBody":{"col":1,"line":138}},"WithSubheaders":{"startLoc":{"col":30,"line":144},"endLoc":{"col":1,"line":262},"startBody":{"col":30,"line":144},"endBody":{"col":1,"line":262}},"WithComplexContent":{"startLoc":{"col":34,"line":268},"endLoc":{"col":1,"line":309},"startBody":{"col":34,"line":268},"endBody":{"col":1,"line":309}}};\n    \n/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport readme from \'./README.stories.mdx\';\nimport \'../index\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\n\nexport const Default = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <style>\n      html,\n      body {\n        overflow-x: hidden;\n      }\n    </style>\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Column A</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column B</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column C</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column D</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};;;\n\nexport const WithRowHeaders = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 1</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 2</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 3</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};;;\n\nWithRowHeaders.story = {\n  name: \'With row headers\',\n};\n\nexport const WithSubheaders = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-group title="Group 1">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group\n          title="Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group title="Group 3">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};;;\n\nWithSubheaders.story = {\n  name: \'With subheaders\',\n};\n\nexport const WithComplexContent = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Product Name</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell tooltip="Tooltip text">\n            Cell with tooltip\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell icon="checkmark">\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell\n            tags="Merchandising Offer, Secondary Tag, Other">\n            Cell with tags\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};\n\nWithComplexContent.story = {\n  name: \'With complex content\',\n};\n\nexport default {\n  title: \'Components/Structured list\',\n  parameters: {"storySource":{"source":"/**\\n * @license\\n *\\n * Copyright IBM Corp. 2020, 2023\\n *\\n * This source code is licensed under the Apache-2.0 license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nimport { html } from \'lit-element\';\\nimport readme from \'./README.stories.mdx\';\\nimport \'../index\';\\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\\n\\nexport const Default = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <style>\\n      html,\\n      body {\\n        overflow-x: hidden;\\n      }\\n    </style>\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Column A</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column B</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column C</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column D</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nexport const WithRowHeaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 1</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 2</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 3</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithRowHeaders.story = {\\n  name: \'With row headers\',\\n};\\n\\nexport const WithSubheaders = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-group title=\\"Group 1\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group\\n          title=\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group title=\\"Group 3\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithSubheaders.story = {\\n  name: \'With subheaders\',\\n};\\n\\nexport const WithComplexContent = (args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Product Name</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell tooltip=\\"Tooltip text\\">\\n            Cell with tooltip\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell icon=\\"checkmark\\">\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell\\n            tags=\\"Merchandising Offer, Secondary Tag, Other\\">\\n            Cell with tags\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n};\\n\\nWithComplexContent.story = {\\n  name: \'With complex content\',\\n};\\n\\nexport default {\\n  title: \'Components/Structured list\',\\n  parameters: {\\n    ...readme.parameters,\\n    knobs: {\\n      StructuredList: () => ({\\n        colSpan1: textNullable(\'col-span-1\', \'\'),\\n        colSpan2: textNullable(\'col-span-2\', \'\'),\\n        colSpan3: textNullable(\'col-span-3\', \'\'),\\n        colSpan4: textNullable(\'col-span-4\', \'\'),\\n      }),\\n    },\\n  },\\n  decorators: [\\n    (story) => html`\\n      <div class=\\"bx--grid\\">\\n        <div class=\\"bx--row\\">\\n          <div class=\\"bx--col-lg-16\\">${story()}</div>\\n        </div>\\n      </div>\\n    `,\\n  ],\\n};\\n","locationsMap":{"default":{"startLoc":{"col":23,"line":15},"endLoc":{"col":1,"line":91},"startBody":{"col":23,"line":15},"endBody":{"col":1,"line":91}},"with-row-headers":{"startLoc":{"col":30,"line":93},"endLoc":{"col":1,"line":138},"startBody":{"col":30,"line":93},"endBody":{"col":1,"line":138}},"with-subheaders":{"startLoc":{"col":30,"line":144},"endLoc":{"col":1,"line":262},"startBody":{"col":30,"line":144},"endBody":{"col":1,"line":262}},"with-complex-content":{"startLoc":{"col":34,"line":268},"endLoc":{"col":1,"line":309},"startBody":{"col":34,"line":268},"endBody":{"col":1,"line":309}}}},\n    ...readme.parameters,\n    knobs: {\n      StructuredList: () => ({\n        colSpan1: textNullable(\'col-span-1\', \'\'),\n        colSpan2: textNullable(\'col-span-2\', \'\'),\n        colSpan3: textNullable(\'col-span-3\', \'\'),\n        colSpan4: textNullable(\'col-span-4\', \'\'),\n      }),\n    },\n  },\n  decorators: [\n    (story) => html`\n      <div class="bx--grid">\n        <div class="bx--row">\n          <div class="bx--col-lg-16">${story()}</div>\n        </div>\n      </div>\n    `,\n  ],\n};\n\n\n\nDefault.parameters = { storySource: { source: "(args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <style>\\n      html,\\n      body {\\n        overflow-x: hidden;\\n      }\\n    </style>\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Column A</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column B</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column C</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-header-cell\\n            >Column D</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n}" }, ...Default.parameters };\nWithRowHeaders.parameters = { storySource: { source: "(args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 1</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 2</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-header-cell scope=\\"row\\"\\n            >Row 3</dds-structured-list-header-cell\\n          >\\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n}" }, ...WithRowHeaders.parameters };\nWithSubheaders.parameters = { storySource: { source: "(args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-body>\\n        <dds-structured-list-group title=\\"Group 1\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group\\n          title=\\"Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n        <dds-structured-list-group title=\\"Group 3\\">\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 1</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 2</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n          <dds-structured-list-row>\\n            <dds-structured-list-header-cell scope=\\"row\\"\\n              >Row 3</dds-structured-list-header-cell\\n            >\\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\\n            <dds-structured-list-cell>\\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\\n              posuere sem vel euismod dignissim.\\n            </dds-structured-list-cell>\\n          </dds-structured-list-row>\\n        </dds-structured-list-group>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n}" }, ...WithSubheaders.parameters };\nWithComplexContent.parameters = { storySource: { source: "(args) => {\\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\\n  return html`\\n    <dds-structured-list\\n      col-span-1=\\"${colSpan1 ?? \'\'}\\"\\n      col-span-2=\\"${colSpan2 ?? \'\'}\\"\\n      col-span-3=\\"${colSpan3 ?? \'\'}\\"\\n      col-span-4=\\"${colSpan4 ?? \'\'}\\">\\n      <dds-structured-list-head>\\n        <dds-structured-list-header-row>\\n          <dds-structured-list-header-cell\\n            >Product Name</dds-structured-list-header-cell\\n          >\\n        </dds-structured-list-header-row>\\n      </dds-structured-list-head>\\n      <dds-structured-list-body>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell tooltip=\\"Tooltip text\\">\\n            Cell with tooltip\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell icon=\\"checkmark\\">\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell\\n            tags=\\"Merchandising Offer, Secondary Tag, Other\\">\\n            Cell with tags\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n        <dds-structured-list-row>\\n          <dds-structured-list-cell>\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\\n            sem vel euismod dignissim.\\n          </dds-structured-list-cell>\\n        </dds-structured-list-row>\\n      </dds-structured-list-body>\\n    </dds-structured-list>\\n  `;\\n}" }, ...WithComplexContent.parameters };',locationsMap:{default:{startLoc:{col:23,line:31},endLoc:{col:1,line:107},startBody:{col:23,line:31},endBody:{col:1,line:107}},"with-row-headers":{startLoc:{col:30,line:109},endLoc:{col:1,line:154},startBody:{col:30,line:109},endBody:{col:1,line:154}},"with-subheaders":{startLoc:{col:30,line:160},endLoc:{col:1,line:278},startBody:{col:30,line:160},endBody:{col:1,line:278}},"with-complex-content":{startLoc:{col:34,line:284},endLoc:{col:1,line:325},startBody:{col:34,line:284},endBody:{col:1,line:325}}}}},F="storySource",M={source:'/**\n * @license\n *\n * Copyright IBM Corp. 2020, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { html } from \'lit-element\';\nimport readme from \'./README.stories.mdx\';\nimport \'../index\';\nimport textNullable from \'../../../../.storybook/knob-text-nullable\';\n\nexport const Default = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <style>\n      html,\n      body {\n        overflow-x: hidden;\n      }\n    </style>\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Column A</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column B</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column C</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column D</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};\n\nexport const WithRowHeaders = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 1</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 2</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 3</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};\n\nWithRowHeaders.story = {\n  name: \'With row headers\',\n};\n\nexport const WithSubheaders = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-group title="Group 1">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group\n          title="Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group title="Group 3">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};\n\nWithSubheaders.story = {\n  name: \'With subheaders\',\n};\n\nexport const WithComplexContent = (args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Product Name</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell tooltip="Tooltip text">\n            Cell with tooltip\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell icon="checkmark">\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell\n            tags="Merchandising Offer, Secondary Tag, Other">\n            Cell with tags\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n};\n\nWithComplexContent.story = {\n  name: \'With complex content\',\n};\n\nexport default {\n  title: \'Components/Structured list\',\n  parameters: {\n    ...readme.parameters,\n    knobs: {\n      StructuredList: () => ({\n        colSpan1: textNullable(\'col-span-1\', \'\'),\n        colSpan2: textNullable(\'col-span-2\', \'\'),\n        colSpan3: textNullable(\'col-span-3\', \'\'),\n        colSpan4: textNullable(\'col-span-4\', \'\'),\n      }),\n    },\n  },\n  decorators: [\n    (story) => html`\n      <div class="bx--grid">\n        <div class="bx--row">\n          <div class="bx--col-lg-16">${story()}</div>\n        </div>\n      </div>\n    `,\n  ],\n};\n',locationsMap:{default:{startLoc:{col:23,line:15},endLoc:{col:1,line:91},startBody:{col:23,line:15},endBody:{col:1,line:91}},"with-row-headers":{startLoc:{col:30,line:93},endLoc:{col:1,line:138},startBody:{col:30,line:93},endBody:{col:1,line:138}},"with-subheaders":{startLoc:{col:30,line:144},endLoc:{col:1,line:262},startBody:{col:30,line:144},endBody:{col:1,line:262}},"with-complex-content":{startLoc:{col:34,line:268},endLoc:{col:1,line:309},startBody:{col:34,line:268},endBody:{col:1,line:309}}}},(F=function(t){var e=function(t,e){if("object"!==R(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==R(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===R(e)?e:String(e)}(F))in I?Object.defineProperty(I,F,{value:M,enumerable:!0,configurable:!0,writable:!0}):I[F]=M,I),_.parameters),{},{knobs:{StructuredList:function(){return{colSpan1:Object(O.a)("col-span-1",""),colSpan2:Object(O.a)("col-span-2",""),colSpan3:Object(O.a)("col-span-3",""),colSpan4:Object(O.a)("col-span-4","")}}}}),decorators:[function(t){return Object(s.c)(N||(N=S||(S=E(['\n      <div class="bx--grid">\n        <div class="bx--row">\n          <div class="bx--col-lg-16">',"</div>\n        </div>\n      </div>\n    "]))),t())}]};$.parameters=q({storySource:{source:"(args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <style>\n      html,\n      body {\n        overflow-x: hidden;\n      }\n    </style>\n    <dds-structured-list\n      col-span-1=\"${colSpan1 ?? ''}\"\n      col-span-2=\"${colSpan2 ?? ''}\"\n      col-span-3=\"${colSpan3 ?? ''}\"\n      col-span-4=\"${colSpan4 ?? ''}\">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Column A</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column B</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column C</dds-structured-list-header-cell\n          >\n          <dds-structured-list-header-cell\n            >Column D</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n}"}},$.parameters),z.parameters=q({storySource:{source:'(args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 1</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 2</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-header-cell scope="row"\n            >Row 3</dds-structured-list-header-cell\n          >\n          <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed, aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n}'}},z.parameters),B.parameters=q({storySource:{source:'(args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-body>\n        <dds-structured-list-group title="Group 1">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group\n          title="Group 2 Lorem ipsum dolor sit amet consectetur, adipiscing elit vestibulum tempus dis, varius dignissim et aliquam.">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n        <dds-structured-list-group title="Group 3">\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 1</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 1</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 2</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 2</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n          <dds-structured-list-row>\n            <dds-structured-list-header-cell scope="row"\n              >Row 3</dds-structured-list-header-cell\n            >\n            <dds-structured-list-cell>Row 3</dds-structured-list-cell>\n            <dds-structured-list-cell>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n              magna, finibus id tortor sed, aliquet bibendum augue. Aenean\n              posuere sem vel euismod dignissim.\n            </dds-structured-list-cell>\n          </dds-structured-list-row>\n        </dds-structured-list-group>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n}'}},B.parameters),W.parameters=q({storySource:{source:'(args) => {\n  const { colSpan1, colSpan2, colSpan3, colSpan4 } = args?.StructuredList ?? {};\n  return html`\n    <dds-structured-list\n      col-span-1="${colSpan1 ?? \'\'}"\n      col-span-2="${colSpan2 ?? \'\'}"\n      col-span-3="${colSpan3 ?? \'\'}"\n      col-span-4="${colSpan4 ?? \'\'}">\n      <dds-structured-list-head>\n        <dds-structured-list-header-row>\n          <dds-structured-list-header-cell\n            >Product Name</dds-structured-list-header-cell\n          >\n        </dds-structured-list-header-row>\n      </dds-structured-list-head>\n      <dds-structured-list-body>\n        <dds-structured-list-row>\n          <dds-structured-list-cell tooltip="Tooltip text">\n            Cell with tooltip\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell icon="checkmark">\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell\n            tags="Merchandising Offer, Secondary Tag, Other">\n            Cell with tags\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n        <dds-structured-list-row>\n          <dds-structured-list-cell>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc dui\n            magna, finibus id tortor sed,aliquet bibendum augue. Aenean posuere\n            sem vel euismod dignissim.\n          </dds-structured-list-cell>\n        </dds-structured-list-row>\n      </dds-structured-list-body>\n    </dds-structured-list>\n  `;\n}'}},W.parameters)},"./src/components/structured-list/structured-list-body.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js");var s=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-body.js"),d=(r("../../node_modules/lit-element/lit-element.js"),r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js")),l=r("./src/components/structured-list/structured-list.scss"),u=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function o(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===b(l)?l:String(l)),s)}var d,l}function i(t,e){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},i(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=a(t);if(e){var d=a(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return n(t)}(this,r)}}function n(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(){h=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!x(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return y(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=w(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:g(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=g(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function p(t){var e,r=w(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function m(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function x(t){return t.decorators&&t.decorators.length}function f(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function g(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function w(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===b(e)?e:String(e)}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},v.apply(this,arguments)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var k=d.a.stablePrefix,S=function(t,e,r,s){var d=h();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(f(l.descriptor)||f(d.descriptor)){if(x(l)||x(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(x(l)){if(x(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}m(l,d)}else e.push(l)}return e}(u.d.map(p)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(u.a)("".concat(k,"-structured-list-body"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&i(t,e)}(u,e);var r,s,d,l=c(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(n(e)),e}return r=u,s&&o(r.prototype,s),d&&o(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"method",key:"connectedCallback",value:function(){v(j(r.prototype),"connectedCallback",this).call(this)}},{kind:"field",static:!0,key:"styles",value:function(){return l.a}}]}}),s.a);e.a=S},"./src/components/structured-list/structured-list-cell.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js"),r("../../node_modules/core-js/modules/es.object.freeze.js"),r("../../node_modules/core-js/modules/es.object.define-properties.js"),r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.string.split.js"),r("../../node_modules/core-js/modules/es.regexp.exec.js"),r("../../node_modules/core-js/modules/es.string.trim.js"),r("../../node_modules/core-js/modules/es.array.includes.js"),r("../../node_modules/core-js/modules/es.string.includes.js"),r("../../node_modules/core-js/modules/es.object.keys.js");var s,d,l,u,o,i,c=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-cell.js"),n=r("../../node_modules/lit-element/lit-element.js"),a=r("./src/internal/vendor/@carbon/web-components/icons/information/16.js"),b=r("./src/internal/vendor/@carbon/web-components/icons/checkmark/20.js"),h=r("./src/internal/vendor/@carbon/web-components/icons/error/20.js"),p=r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js"),m=r("./src/components/structured-list/structured-list.scss"),x=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js"),f=r("../../node_modules/carbon-components/es/globals/js/settings.js");function g(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function w(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==S(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===S(l)?l:String(l)),s)}var d,l}function y(t,e){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},y(t,e)}function v(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=k(t);if(e){var d=k(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===S(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return j(t)}(this,r)}}function j(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function k(t){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},k(t)}function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}var _,O,E,R,A,P;function L(){L=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!D(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return z(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?z(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=$(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:T(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=T(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function C(t){var e,r=$(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function N(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function D(t){return t.decorators&&t.decorators.length}function q(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function T(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function $(t){var e=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==S(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===S(e)?e:String(e)}function z(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=W(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},B.apply(this,arguments)}function W(t){return W=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},W(t)}var I=f.a.prefix,F=p.a.stablePrefix,M=function(t,e,r,s){var d=L();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(q(l.descriptor)||q(d.descriptor)){if(D(l)||D(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(D(l)){if(D(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}N(l,d)}else e.push(l)}return e}(u.d.map(C)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(x.a)("".concat(F,"-structured-list-cell"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&y(t,e)}(u,e);var r,s,d,l=v(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(j(e)),e}return r=u,s&&w(r.prototype,s),d&&w(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"field",key:"parentGroup",value:function(){return this.closest("".concat(F,"-structured-list-group"))}},{kind:"field",decorators:[Object(n.e)({attribute:"aria-label",reflect:!0})],key:"groupLabel",value:void 0},{kind:"field",decorators:[Object(n.e)({attribute:"tooltip",reflect:!0})],key:"tooltipText",value:void 0},{kind:"field",decorators:[Object(n.e)({attribute:"icon",reflect:!0})],key:"icon",value:void 0},{kind:"field",key:"_iconsAllowed",value:function(){return{checkmark:b.a,error:h.a}}},{kind:"field",decorators:[Object(n.e)({attribute:"tags",reflect:!0})],key:"tags",value:void 0},{kind:"method",key:"connectedCallback",value:function(){var t;B(W(r.prototype),"connectedCallback",this).call(this),this.groupLabel=null===(t=this.parentGroup)||void 0===t?void 0:t.groupTitle}},{kind:"method",key:"_renderIcon",value:function(){var t=this.icon,e=this._iconsAllowed;return Object(n.c)(_||(_=s||(s=g(["",'\n      <span class="','--structured-list-cell-icon-text">\n        <slot></slot>\n      </span>']))),e[t.toLowerCase()].call(),I)}},{kind:"method",key:"_renderTags",value:function(){var t=this.tags;return Object(n.c)(O||(O=d||(d=g(["\n      ","\n    "]))),t.split(",").map((function(t){return Object(n.c)(E||(E=l||(l=g([' <bx-tag size="sm" type="green">',"</bx-tag> "]))),t.trim())})))}},{kind:"method",key:"_renderTooltip",value:function(){var t=this.tooltipText;return Object(n.c)(R||(R=u||(u=g(['\n      <bx-tooltip-icon\n        alignment="start"\n        body-text="','"\n        direction="right">\n        ',"\n      </bx-tooltip-icon>\n    "]))),t,Object(a.a)())}},{kind:"method",key:"render",value:function(){var t=this.tooltipText,e=this.icon,s=this._iconsAllowed,d=this.tags;return e&&Object.keys(s).includes(e.toLowerCase())?Object(n.c)(A||(A=o||(o=g([" "," "]))),this._renderIcon()):Object(n.c)(P||(P=i||(i=g(["\n      "," ","\n      ","\n    "]))),B(W(r.prototype),"render",this).call(this),d?this._renderTags():"",t?this._renderTooltip():"")}},{kind:"field",static:!0,key:"styles",value:function(){return m.a}}]}}),c.a);e.a=M},"./src/components/structured-list/structured-list-group.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js"),r("../../node_modules/core-js/modules/es.object.freeze.js"),r("../../node_modules/core-js/modules/es.object.define-properties.js"),r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js");var s,d,l=r("../../node_modules/lit-element/lit-element.js"),u=r("../utilities/es/utilities/settings/settings.js"),o=r("./src/globals/mixins/stable-selector.ts"),i=r("./src/components/structured-list/structured-list.scss"),c=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function n(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function a(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==x(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===x(l)?l:String(l)),s)}var d,l}function b(t,e){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},b(t,e)}function h(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=m(t);if(e){var d=m(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===x(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return p(t)}(this,r)}}function p(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}var f,g;function w(){w=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!j(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return O(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?O(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=_(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:S(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=S(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function y(t){var e,r=_(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function v(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function j(t){return t.decorators&&t.decorators.length}function k(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function S(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function _(t){var e=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==x(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===x(e)?e:String(e)}function O(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=R(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},E.apply(this,arguments)}function R(t){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},R(t)}var A=u.a.stablePrefix,P=function(t,e,r,s){var d=w();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(k(l.descriptor)||k(d.descriptor)){if(j(l)||j(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(j(l)){if(j(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}v(l,d)}else e.push(l)}return e}(u.d.map(y)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(c.a)("".concat(A,"-structured-list-group"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&b(t,e)}(u,e);var r,s,d,l=h(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(p(e)),e}return r=u,s&&a(r.prototype,s),d&&a(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"field",key:"_parentTable",value:function(){return this.closest("".concat(A,"-structured-list"))}},{kind:"field",decorators:[Object(l.e)({attribute:"title"})],key:"groupTitle",value:void 0},{kind:"method",key:"connectedCallback",value:function(){E(R(r.prototype),"connectedCallback",this).call(this)}},{kind:"method",key:"_renderTitle",value:function(){return Object(l.c)(f||(f=s||(s=n(['\n      <tr>\n        <th colspan="999">',"</th>\n      </tr>\n    "]))),this.groupTitle)}},{kind:"method",key:"render",value:function(){return Object(l.c)(g||(g=d||(d=n(["\n      ","\n      <slot></slot>\n    "]))),this.groupTitle?this._renderTitle():"")}},{kind:"field",static:!0,key:"styles",value:function(){return i.a}}]}}),Object(o.a)(l.a));e.a=P},"./src/components/structured-list/structured-list-head.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js");var s=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-head.js"),d=(r("../../node_modules/lit-element/lit-element.js"),r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js")),l=r("./src/components/structured-list/structured-list.scss"),u=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function o(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===b(l)?l:String(l)),s)}var d,l}function i(t,e){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},i(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=a(t);if(e){var d=a(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return n(t)}(this,r)}}function n(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(){h=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!x(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return y(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=w(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:g(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=g(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function p(t){var e,r=w(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function m(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function x(t){return t.decorators&&t.decorators.length}function f(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function g(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function w(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===b(e)?e:String(e)}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},v.apply(this,arguments)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var k=d.a.stablePrefix,S=function(t,e,r,s){var d=h();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(f(l.descriptor)||f(d.descriptor)){if(x(l)||x(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(x(l)){if(x(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}m(l,d)}else e.push(l)}return e}(u.d.map(p)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(u.a)("".concat(k,"-structured-list-head"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&i(t,e)}(u,e);var r,s,d,l=c(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(n(e)),e}return r=u,s&&o(r.prototype,s),d&&o(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"method",key:"connectedCallback",value:function(){v(j(r.prototype),"connectedCallback",this).call(this)}},{kind:"field",static:!0,key:"styles",value:function(){return l.a}}]}}),s.a);e.a=S},"./src/components/structured-list/structured-list-header-cell.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js");var s=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-header-cell.js"),d=(r("../../node_modules/lit-element/lit-element.js"),r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js")),l=r("./src/components/structured-list/structured-list.scss"),u=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function o(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===b(l)?l:String(l)),s)}var d,l}function i(t,e){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},i(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=a(t);if(e){var d=a(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return n(t)}(this,r)}}function n(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(){h=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!x(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return y(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=w(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:g(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=g(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function p(t){var e,r=w(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function m(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function x(t){return t.decorators&&t.decorators.length}function f(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function g(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function w(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===b(e)?e:String(e)}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},v.apply(this,arguments)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var k=d.a.stablePrefix,S=function(t,e,r,s){var d=h();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(f(l.descriptor)||f(d.descriptor)){if(x(l)||x(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(x(l)){if(x(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}m(l,d)}else e.push(l)}return e}(u.d.map(p)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(u.a)("".concat(k,"-structured-list-header-cell"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&i(t,e)}(u,e);var r,s,d,l=c(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(n(e)),e}return r=u,s&&o(r.prototype,s),d&&o(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"method",key:"connectedCallback",value:function(){v(j(r.prototype),"connectedCallback",this).call(this)}},{kind:"field",static:!0,key:"styles",value:function(){return l.a}}]}}),s.a);e.a=S},"./src/components/structured-list/structured-list-header-row.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js");var s=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-header-row.js"),d=(r("../../node_modules/lit-element/lit-element.js"),r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js")),l=r("./src/components/structured-list/structured-list.scss"),u=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function o(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===b(l)?l:String(l)),s)}var d,l}function i(t,e){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},i(t,e)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=a(t);if(e){var d=a(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===b(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return n(t)}(this,r)}}function n(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function a(t){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},a(t)}function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function h(){h=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!x(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return y(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?y(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=w(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:g(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=g(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function p(t){var e,r=w(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function m(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function x(t){return t.decorators&&t.decorators.length}function f(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function g(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function w(t){var e=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==b(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===b(e)?e:String(e)}function y(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},v.apply(this,arguments)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var k=d.a.stablePrefix,S=function(t,e,r,s){var d=h();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(f(l.descriptor)||f(d.descriptor)){if(x(l)||x(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(x(l)){if(x(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}m(l,d)}else e.push(l)}return e}(u.d.map(p)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(u.a)("".concat(k,"-structured-list-header-row"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&i(t,e)}(u,e);var r,s,d,l=c(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(n(e)),e}return r=u,s&&o(r.prototype,s),d&&o(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"method",key:"connectedCallback",value:function(){v(j(r.prototype),"connectedCallback",this).call(this)}},{kind:"field",static:!0,key:"styles",value:function(){return l.a}}]}}),s.a);e.a=S},"./src/components/structured-list/structured-list-row.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js"),r("../../node_modules/core-js/modules/es.object.freeze.js"),r("../../node_modules/core-js/modules/es.object.define-properties.js"),r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js");var s,d=r("./src/internal/vendor/@carbon/web-components/components/structured-list/structured-list-row.js"),l=(r("../../node_modules/lit-element/lit-element.js"),r("../../node_modules/lit-html/lit-html.js")),u=r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js"),o=r("./src/components/structured-list/structured-list.scss"),i=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function c(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==p(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===p(l)?l:String(l)),s)}var d,l}function n(t,e){return n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},n(t,e)}function a(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=h(t);if(e){var d=h(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===p(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return b(t)}(this,r)}}function b(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function h(t){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},h(t)}function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}var m;function x(){x=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!w(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return k(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?k(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=j(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:v(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=v(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function f(t){var e,r=j(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function g(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function w(t){return t.decorators&&t.decorators.length}function y(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function v(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function j(t){var e=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==p(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===p(e)?e:String(e)}function k(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},S.apply(this,arguments)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var O=u.a.stablePrefix,E=function(t,e,r,s){var d=x();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(y(l.descriptor)||y(d.descriptor)){if(w(l)||w(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(w(l)){if(w(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}g(l,d)}else e.push(l)}return e}(u.d.map(f)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(i.a)("".concat(O,"-structured-list-row"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&n(t,e)}(u,e);var r,s,d,l=a(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(b(e)),e}return r=u,s&&c(r.prototype,s),d&&c(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"method",key:"connectedCallback",value:function(){S(_(r.prototype),"connectedCallback",this).call(this)}},{kind:"method",key:"updated",value:function(t){}},{kind:"method",key:"render",value:function(){return Object(l.f)(m||(m=s||(t=[" <slot></slot> "],e||(e=t.slice(0)),s=Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}})))));var t,e}},{kind:"field",static:!0,key:"styles",value:function(){return o.a}}]}}),d.a);e.a=E},"./src/components/structured-list/structured-list.scss":function(t,e,r){"use strict";var s=r("../../node_modules/lit-element/lit-element.js");e.a=Object(s.b)(["html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type='text']::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:''}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:var(--cds-productive-heading-06-font-size, 2.625rem);font-weight:var(--cds-productive-heading-06-font-weight, 300);line-height:var(--cds-productive-heading-06-line-height, 1.199);letter-spacing:var(--cds-productive-heading-06-letter-spacing, 0)}h2{font-size:var(--cds-productive-heading-05-font-size, 2rem);font-weight:var(--cds-productive-heading-05-font-weight, 400);line-height:var(--cds-productive-heading-05-line-height, 1.25);letter-spacing:var(--cds-productive-heading-05-letter-spacing, 0)}h3{font-size:var(--cds-productive-heading-04-font-size, 1.75rem);font-weight:var(--cds-productive-heading-04-font-weight, 400);line-height:var(--cds-productive-heading-04-line-height, 1.28572);letter-spacing:var(--cds-productive-heading-04-letter-spacing, 0)}h4{font-size:var(--cds-productive-heading-03-font-size, 1.25rem);font-weight:var(--cds-productive-heading-03-font-weight, 400);line-height:var(--cds-productive-heading-03-line-height, 1.4);letter-spacing:var(--cds-productive-heading-03-letter-spacing, 0)}h5{font-size:var(--cds-productive-heading-02-font-size, 1rem);font-weight:var(--cds-productive-heading-02-font-weight, 600);line-height:var(--cds-productive-heading-02-line-height, 1.375);letter-spacing:var(--cds-productive-heading-02-letter-spacing, 0)}h6{font-size:var(--cds-productive-heading-01-font-size, .875rem);font-weight:var(--cds-productive-heading-01-font-weight, 600);line-height:var(--cds-productive-heading-01-line-height, 1.28572);letter-spacing:var(--cds-productive-heading-01-letter-spacing, .16px)}p{font-size:var(--cds-body-long-02-font-size, 1rem);font-weight:var(--cds-body-long-02-font-weight, 400);line-height:var(--cds-body-long-02-line-height, 1.5);letter-spacing:var(--cds-body-long-02-letter-spacing, 0)}a{color:#0f62fe}em{font-style:italic}@-webkit-keyframes skeleton{0%{opacity:0.3;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}20%{opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}28%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}51%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}58%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}82%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}83%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}96%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}100%{opacity:0.3;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}}@keyframes skeleton{0%{opacity:0.3;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}20%{opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}28%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}51%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}58%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:right;transform-origin:right}82%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:right;transform-origin:right}83%{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:left;transform-origin:left}96%{-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}100%{opacity:0.3;-webkit-transform:scaleX(0);transform:scaleX(0);-webkit-transform-origin:left;transform-origin:left}}.bx--text-truncate--end{display:inline-block;overflow:hidden;width:100%;text-overflow:ellipsis;white-space:nowrap}.bx--text-truncate--front{display:inline-block;overflow:hidden;width:100%;direction:rtl;text-overflow:ellipsis;white-space:nowrap}.bx--grid{margin-right:auto;margin-left:auto;max-width:99rem;padding-right:1rem;padding-left:1rem}@media (min-width: 42rem){.bx--grid{padding-right:2rem;padding-left:2rem}}@media (min-width: 99rem){.bx--grid{padding-right:2.5rem;padding-left:2.5rem}}@media (min-width: 99rem){.bx--grid--full-width{max-width:100%}}.bx--row{display:flex;flex-wrap:wrap;margin-right:-1rem;margin-left:-1rem}.bx--row-padding [class*='bx--col'],.bx--col-padding{padding-top:1rem;padding-bottom:1rem}.bx--grid--condensed [class*='bx--col']{padding-top:.03125rem;padding-bottom:.03125rem}.bx--col{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col,.bx--grid--condensed .bx--col{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col,.bx--grid--narrow .bx--col{padding-right:1rem;padding-left:0}.bx--col-sm-0{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm-0,.bx--grid--condensed .bx--col-sm-0{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm-0,.bx--grid--narrow .bx--col-sm-0{padding-right:1rem;padding-left:0}.bx--col-sm-1{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm-1,.bx--grid--condensed .bx--col-sm-1{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm-1,.bx--grid--narrow .bx--col-sm-1{padding-right:1rem;padding-left:0}.bx--col-sm-2{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm-2,.bx--grid--condensed .bx--col-sm-2{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm-2,.bx--grid--narrow .bx--col-sm-2{padding-right:1rem;padding-left:0}.bx--col-sm-3{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm-3,.bx--grid--condensed .bx--col-sm-3{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm-3,.bx--grid--narrow .bx--col-sm-3{padding-right:1rem;padding-left:0}.bx--col-sm-4{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm-4,.bx--grid--condensed .bx--col-sm-4{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm-4,.bx--grid--narrow .bx--col-sm-4{padding-right:1rem;padding-left:0}.bx--col-sm,.bx--col-sm--auto{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-sm,.bx--grid--condensed .bx--col-sm,.bx--row--condensed .bx--col-sm--auto,.bx--grid--condensed .bx--col-sm--auto{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-sm,.bx--grid--narrow .bx--col-sm,.bx--row--narrow .bx--col-sm--auto,.bx--grid--narrow .bx--col-sm--auto{padding-right:1rem;padding-left:0}.bx--col,.bx--col-sm{max-width:100%;flex-basis:0;flex-grow:1}.bx--col--auto,.bx--col-sm--auto{width:auto;max-width:100%;flex:1 0 0%}.bx--col-sm-0{display:none}.bx--col-sm-1{display:block;max-width:25%;flex:0 0 25%}.bx--col-sm-2{display:block;max-width:50%;flex:0 0 50%}.bx--col-sm-3{display:block;max-width:75%;flex:0 0 75%}.bx--col-sm-4{display:block;max-width:100%;flex:0 0 100%}.bx--offset-sm-0{margin-left:0}.bx--offset-sm-1{margin-left:25%}.bx--offset-sm-2{margin-left:50%}.bx--offset-sm-3{margin-left:75%}.bx--col-md-0{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-0,.bx--grid--condensed .bx--col-md-0{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-0,.bx--grid--narrow .bx--col-md-0{padding-right:1rem;padding-left:0}.bx--col-md-1{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-1,.bx--grid--condensed .bx--col-md-1{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-1,.bx--grid--narrow .bx--col-md-1{padding-right:1rem;padding-left:0}.bx--col-md-2{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-2,.bx--grid--condensed .bx--col-md-2{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-2,.bx--grid--narrow .bx--col-md-2{padding-right:1rem;padding-left:0}.bx--col-md-3{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-3,.bx--grid--condensed .bx--col-md-3{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-3,.bx--grid--narrow .bx--col-md-3{padding-right:1rem;padding-left:0}.bx--col-md-4{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-4,.bx--grid--condensed .bx--col-md-4{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-4,.bx--grid--narrow .bx--col-md-4{padding-right:1rem;padding-left:0}.bx--col-md-5{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-5,.bx--grid--condensed .bx--col-md-5{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-5,.bx--grid--narrow .bx--col-md-5{padding-right:1rem;padding-left:0}.bx--col-md-6{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-6,.bx--grid--condensed .bx--col-md-6{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-6,.bx--grid--narrow .bx--col-md-6{padding-right:1rem;padding-left:0}.bx--col-md-7{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-7,.bx--grid--condensed .bx--col-md-7{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-7,.bx--grid--narrow .bx--col-md-7{padding-right:1rem;padding-left:0}.bx--col-md-8{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md-8,.bx--grid--condensed .bx--col-md-8{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md-8,.bx--grid--narrow .bx--col-md-8{padding-right:1rem;padding-left:0}.bx--col-md,.bx--col-md--auto{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-md,.bx--grid--condensed .bx--col-md,.bx--row--condensed .bx--col-md--auto,.bx--grid--condensed .bx--col-md--auto{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-md,.bx--grid--narrow .bx--col-md,.bx--row--narrow .bx--col-md--auto,.bx--grid--narrow .bx--col-md--auto{padding-right:1rem;padding-left:0}@media (min-width: 42rem){.bx--col,.bx--col-md{max-width:100%;flex-basis:0;flex-grow:1}.bx--col--auto,.bx--col-md--auto{width:auto;max-width:100%;flex:1 0 0%}.bx--col-md-0{display:none}.bx--col-md-1{display:block;max-width:12.5%;flex:0 0 12.5%}.bx--col-md-2{display:block;max-width:25%;flex:0 0 25%}.bx--col-md-3{display:block;max-width:37.5%;flex:0 0 37.5%}.bx--col-md-4{display:block;max-width:50%;flex:0 0 50%}.bx--col-md-5{display:block;max-width:62.5%;flex:0 0 62.5%}.bx--col-md-6{display:block;max-width:75%;flex:0 0 75%}.bx--col-md-7{display:block;max-width:87.5%;flex:0 0 87.5%}.bx--col-md-8{display:block;max-width:100%;flex:0 0 100%}.bx--offset-md-0{margin-left:0}.bx--offset-md-1{margin-left:12.5%}.bx--offset-md-2{margin-left:25%}.bx--offset-md-3{margin-left:37.5%}.bx--offset-md-4{margin-left:50%}.bx--offset-md-5{margin-left:62.5%}.bx--offset-md-6{margin-left:75%}.bx--offset-md-7{margin-left:87.5%}}.bx--col-lg-0{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-0,.bx--grid--condensed .bx--col-lg-0{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-0,.bx--grid--narrow .bx--col-lg-0{padding-right:1rem;padding-left:0}.bx--col-lg-1{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-1,.bx--grid--condensed .bx--col-lg-1{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-1,.bx--grid--narrow .bx--col-lg-1{padding-right:1rem;padding-left:0}.bx--col-lg-2{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-2,.bx--grid--condensed .bx--col-lg-2{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-2,.bx--grid--narrow .bx--col-lg-2{padding-right:1rem;padding-left:0}.bx--col-lg-3{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-3,.bx--grid--condensed .bx--col-lg-3{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-3,.bx--grid--narrow .bx--col-lg-3{padding-right:1rem;padding-left:0}.bx--col-lg-4{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-4,.bx--grid--condensed .bx--col-lg-4{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-4,.bx--grid--narrow .bx--col-lg-4{padding-right:1rem;padding-left:0}.bx--col-lg-5{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-5,.bx--grid--condensed .bx--col-lg-5{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-5,.bx--grid--narrow .bx--col-lg-5{padding-right:1rem;padding-left:0}.bx--col-lg-6{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-6,.bx--grid--condensed .bx--col-lg-6{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-6,.bx--grid--narrow .bx--col-lg-6{padding-right:1rem;padding-left:0}.bx--col-lg-7{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-7,.bx--grid--condensed .bx--col-lg-7{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-7,.bx--grid--narrow .bx--col-lg-7{padding-right:1rem;padding-left:0}.bx--col-lg-8{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-8,.bx--grid--condensed .bx--col-lg-8{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-8,.bx--grid--narrow .bx--col-lg-8{padding-right:1rem;padding-left:0}.bx--col-lg-9{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-9,.bx--grid--condensed .bx--col-lg-9{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-9,.bx--grid--narrow .bx--col-lg-9{padding-right:1rem;padding-left:0}.bx--col-lg-10{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-10,.bx--grid--condensed .bx--col-lg-10{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-10,.bx--grid--narrow .bx--col-lg-10{padding-right:1rem;padding-left:0}.bx--col-lg-11{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-11,.bx--grid--condensed .bx--col-lg-11{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-11,.bx--grid--narrow .bx--col-lg-11{padding-right:1rem;padding-left:0}.bx--col-lg-12{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-12,.bx--grid--condensed .bx--col-lg-12{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-12,.bx--grid--narrow .bx--col-lg-12{padding-right:1rem;padding-left:0}.bx--col-lg-13{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-13,.bx--grid--condensed .bx--col-lg-13{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-13,.bx--grid--narrow .bx--col-lg-13{padding-right:1rem;padding-left:0}.bx--col-lg-14{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-14,.bx--grid--condensed .bx--col-lg-14{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-14,.bx--grid--narrow .bx--col-lg-14{padding-right:1rem;padding-left:0}.bx--col-lg-15{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-15,.bx--grid--condensed .bx--col-lg-15{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-15,.bx--grid--narrow .bx--col-lg-15{padding-right:1rem;padding-left:0}.bx--col-lg-16{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg-16,.bx--grid--condensed .bx--col-lg-16{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg-16,.bx--grid--narrow .bx--col-lg-16{padding-right:1rem;padding-left:0}.bx--col-lg,.bx--col-lg--auto{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-lg,.bx--grid--condensed .bx--col-lg,.bx--row--condensed .bx--col-lg--auto,.bx--grid--condensed .bx--col-lg--auto{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-lg,.bx--grid--narrow .bx--col-lg,.bx--row--narrow .bx--col-lg--auto,.bx--grid--narrow .bx--col-lg--auto{padding-right:1rem;padding-left:0}@media (min-width: 66rem){.bx--col,.bx--col-lg{max-width:100%;flex-basis:0;flex-grow:1}.bx--col--auto,.bx--col-lg--auto{width:auto;max-width:100%;flex:1 0 0%}.bx--col-lg-0{display:none}.bx--col-lg-1{display:block;max-width:6.25%;flex:0 0 6.25%}.bx--col-lg-2{display:block;max-width:12.5%;flex:0 0 12.5%}.bx--col-lg-3{display:block;max-width:18.75%;flex:0 0 18.75%}.bx--col-lg-4{display:block;max-width:25%;flex:0 0 25%}.bx--col-lg-5{display:block;max-width:31.25%;flex:0 0 31.25%}.bx--col-lg-6{display:block;max-width:37.5%;flex:0 0 37.5%}.bx--col-lg-7{display:block;max-width:43.75%;flex:0 0 43.75%}.bx--col-lg-8{display:block;max-width:50%;flex:0 0 50%}.bx--col-lg-9{display:block;max-width:56.25%;flex:0 0 56.25%}.bx--col-lg-10{display:block;max-width:62.5%;flex:0 0 62.5%}.bx--col-lg-11{display:block;max-width:68.75%;flex:0 0 68.75%}.bx--col-lg-12{display:block;max-width:75%;flex:0 0 75%}.bx--col-lg-13{display:block;max-width:81.25%;flex:0 0 81.25%}.bx--col-lg-14{display:block;max-width:87.5%;flex:0 0 87.5%}.bx--col-lg-15{display:block;max-width:93.75%;flex:0 0 93.75%}.bx--col-lg-16{display:block;max-width:100%;flex:0 0 100%}.bx--offset-lg-0{margin-left:0}.bx--offset-lg-1{margin-left:6.25%}.bx--offset-lg-2{margin-left:12.5%}.bx--offset-lg-3{margin-left:18.75%}.bx--offset-lg-4{margin-left:25%}.bx--offset-lg-5{margin-left:31.25%}.bx--offset-lg-6{margin-left:37.5%}.bx--offset-lg-7{margin-left:43.75%}.bx--offset-lg-8{margin-left:50%}.bx--offset-lg-9{margin-left:56.25%}.bx--offset-lg-10{margin-left:62.5%}.bx--offset-lg-11{margin-left:68.75%}.bx--offset-lg-12{margin-left:75%}.bx--offset-lg-13{margin-left:81.25%}.bx--offset-lg-14{margin-left:87.5%}.bx--offset-lg-15{margin-left:93.75%}}.bx--col-xlg-0{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-0,.bx--grid--condensed .bx--col-xlg-0{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-0,.bx--grid--narrow .bx--col-xlg-0{padding-right:1rem;padding-left:0}.bx--col-xlg-1{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-1,.bx--grid--condensed .bx--col-xlg-1{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-1,.bx--grid--narrow .bx--col-xlg-1{padding-right:1rem;padding-left:0}.bx--col-xlg-2{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-2,.bx--grid--condensed .bx--col-xlg-2{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-2,.bx--grid--narrow .bx--col-xlg-2{padding-right:1rem;padding-left:0}.bx--col-xlg-3{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-3,.bx--grid--condensed .bx--col-xlg-3{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-3,.bx--grid--narrow .bx--col-xlg-3{padding-right:1rem;padding-left:0}.bx--col-xlg-4{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-4,.bx--grid--condensed .bx--col-xlg-4{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-4,.bx--grid--narrow .bx--col-xlg-4{padding-right:1rem;padding-left:0}.bx--col-xlg-5{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-5,.bx--grid--condensed .bx--col-xlg-5{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-5,.bx--grid--narrow .bx--col-xlg-5{padding-right:1rem;padding-left:0}.bx--col-xlg-6{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-6,.bx--grid--condensed .bx--col-xlg-6{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-6,.bx--grid--narrow .bx--col-xlg-6{padding-right:1rem;padding-left:0}.bx--col-xlg-7{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-7,.bx--grid--condensed .bx--col-xlg-7{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-7,.bx--grid--narrow .bx--col-xlg-7{padding-right:1rem;padding-left:0}.bx--col-xlg-8{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-8,.bx--grid--condensed .bx--col-xlg-8{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-8,.bx--grid--narrow .bx--col-xlg-8{padding-right:1rem;padding-left:0}.bx--col-xlg-9{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-9,.bx--grid--condensed .bx--col-xlg-9{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-9,.bx--grid--narrow .bx--col-xlg-9{padding-right:1rem;padding-left:0}.bx--col-xlg-10{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-10,.bx--grid--condensed .bx--col-xlg-10{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-10,.bx--grid--narrow .bx--col-xlg-10{padding-right:1rem;padding-left:0}.bx--col-xlg-11{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-11,.bx--grid--condensed .bx--col-xlg-11{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-11,.bx--grid--narrow .bx--col-xlg-11{padding-right:1rem;padding-left:0}.bx--col-xlg-12{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-12,.bx--grid--condensed .bx--col-xlg-12{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-12,.bx--grid--narrow .bx--col-xlg-12{padding-right:1rem;padding-left:0}.bx--col-xlg-13{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-13,.bx--grid--condensed .bx--col-xlg-13{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-13,.bx--grid--narrow .bx--col-xlg-13{padding-right:1rem;padding-left:0}.bx--col-xlg-14{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-14,.bx--grid--condensed .bx--col-xlg-14{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-14,.bx--grid--narrow .bx--col-xlg-14{padding-right:1rem;padding-left:0}.bx--col-xlg-15{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-15,.bx--grid--condensed .bx--col-xlg-15{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-15,.bx--grid--narrow .bx--col-xlg-15{padding-right:1rem;padding-left:0}.bx--col-xlg-16{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg-16,.bx--grid--condensed .bx--col-xlg-16{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg-16,.bx--grid--narrow .bx--col-xlg-16{padding-right:1rem;padding-left:0}.bx--col-xlg,.bx--col-xlg--auto{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-xlg,.bx--grid--condensed .bx--col-xlg,.bx--row--condensed .bx--col-xlg--auto,.bx--grid--condensed .bx--col-xlg--auto{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-xlg,.bx--grid--narrow .bx--col-xlg,.bx--row--narrow .bx--col-xlg--auto,.bx--grid--narrow .bx--col-xlg--auto{padding-right:1rem;padding-left:0}@media (min-width: 82rem){.bx--col,.bx--col-xlg{max-width:100%;flex-basis:0;flex-grow:1}.bx--col--auto,.bx--col-xlg--auto{width:auto;max-width:100%;flex:1 0 0%}.bx--col-xlg-0{display:none}.bx--col-xlg-1{display:block;max-width:6.25%;flex:0 0 6.25%}.bx--col-xlg-2{display:block;max-width:12.5%;flex:0 0 12.5%}.bx--col-xlg-3{display:block;max-width:18.75%;flex:0 0 18.75%}.bx--col-xlg-4{display:block;max-width:25%;flex:0 0 25%}.bx--col-xlg-5{display:block;max-width:31.25%;flex:0 0 31.25%}.bx--col-xlg-6{display:block;max-width:37.5%;flex:0 0 37.5%}.bx--col-xlg-7{display:block;max-width:43.75%;flex:0 0 43.75%}.bx--col-xlg-8{display:block;max-width:50%;flex:0 0 50%}.bx--col-xlg-9{display:block;max-width:56.25%;flex:0 0 56.25%}.bx--col-xlg-10{display:block;max-width:62.5%;flex:0 0 62.5%}.bx--col-xlg-11{display:block;max-width:68.75%;flex:0 0 68.75%}.bx--col-xlg-12{display:block;max-width:75%;flex:0 0 75%}.bx--col-xlg-13{display:block;max-width:81.25%;flex:0 0 81.25%}.bx--col-xlg-14{display:block;max-width:87.5%;flex:0 0 87.5%}.bx--col-xlg-15{display:block;max-width:93.75%;flex:0 0 93.75%}.bx--col-xlg-16{display:block;max-width:100%;flex:0 0 100%}.bx--offset-xlg-0{margin-left:0}.bx--offset-xlg-1{margin-left:6.25%}.bx--offset-xlg-2{margin-left:12.5%}.bx--offset-xlg-3{margin-left:18.75%}.bx--offset-xlg-4{margin-left:25%}.bx--offset-xlg-5{margin-left:31.25%}.bx--offset-xlg-6{margin-left:37.5%}.bx--offset-xlg-7{margin-left:43.75%}.bx--offset-xlg-8{margin-left:50%}.bx--offset-xlg-9{margin-left:56.25%}.bx--offset-xlg-10{margin-left:62.5%}.bx--offset-xlg-11{margin-left:68.75%}.bx--offset-xlg-12{margin-left:75%}.bx--offset-xlg-13{margin-left:81.25%}.bx--offset-xlg-14{margin-left:87.5%}.bx--offset-xlg-15{margin-left:93.75%}}.bx--col-max-0{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-0,.bx--grid--condensed .bx--col-max-0{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-0,.bx--grid--narrow .bx--col-max-0{padding-right:1rem;padding-left:0}.bx--col-max-1{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-1,.bx--grid--condensed .bx--col-max-1{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-1,.bx--grid--narrow .bx--col-max-1{padding-right:1rem;padding-left:0}.bx--col-max-2{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-2,.bx--grid--condensed .bx--col-max-2{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-2,.bx--grid--narrow .bx--col-max-2{padding-right:1rem;padding-left:0}.bx--col-max-3{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-3,.bx--grid--condensed .bx--col-max-3{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-3,.bx--grid--narrow .bx--col-max-3{padding-right:1rem;padding-left:0}.bx--col-max-4{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-4,.bx--grid--condensed .bx--col-max-4{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-4,.bx--grid--narrow .bx--col-max-4{padding-right:1rem;padding-left:0}.bx--col-max-5{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-5,.bx--grid--condensed .bx--col-max-5{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-5,.bx--grid--narrow .bx--col-max-5{padding-right:1rem;padding-left:0}.bx--col-max-6{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-6,.bx--grid--condensed .bx--col-max-6{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-6,.bx--grid--narrow .bx--col-max-6{padding-right:1rem;padding-left:0}.bx--col-max-7{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-7,.bx--grid--condensed .bx--col-max-7{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-7,.bx--grid--narrow .bx--col-max-7{padding-right:1rem;padding-left:0}.bx--col-max-8{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-8,.bx--grid--condensed .bx--col-max-8{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-8,.bx--grid--narrow .bx--col-max-8{padding-right:1rem;padding-left:0}.bx--col-max-9{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-9,.bx--grid--condensed .bx--col-max-9{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-9,.bx--grid--narrow .bx--col-max-9{padding-right:1rem;padding-left:0}.bx--col-max-10{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-10,.bx--grid--condensed .bx--col-max-10{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-10,.bx--grid--narrow .bx--col-max-10{padding-right:1rem;padding-left:0}.bx--col-max-11{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-11,.bx--grid--condensed .bx--col-max-11{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-11,.bx--grid--narrow .bx--col-max-11{padding-right:1rem;padding-left:0}.bx--col-max-12{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-12,.bx--grid--condensed .bx--col-max-12{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-12,.bx--grid--narrow .bx--col-max-12{padding-right:1rem;padding-left:0}.bx--col-max-13{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-13,.bx--grid--condensed .bx--col-max-13{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-13,.bx--grid--narrow .bx--col-max-13{padding-right:1rem;padding-left:0}.bx--col-max-14{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-14,.bx--grid--condensed .bx--col-max-14{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-14,.bx--grid--narrow .bx--col-max-14{padding-right:1rem;padding-left:0}.bx--col-max-15{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-15,.bx--grid--condensed .bx--col-max-15{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-15,.bx--grid--narrow .bx--col-max-15{padding-right:1rem;padding-left:0}.bx--col-max-16{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max-16,.bx--grid--condensed .bx--col-max-16{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max-16,.bx--grid--narrow .bx--col-max-16{padding-right:1rem;padding-left:0}.bx--col-max,.bx--col-max--auto{width:100%;padding-right:1rem;padding-left:1rem}.bx--row--condensed .bx--col-max,.bx--grid--condensed .bx--col-max,.bx--row--condensed .bx--col-max--auto,.bx--grid--condensed .bx--col-max--auto{padding-right:.03125rem;padding-left:.03125rem}.bx--row--narrow .bx--col-max,.bx--grid--narrow .bx--col-max,.bx--row--narrow .bx--col-max--auto,.bx--grid--narrow .bx--col-max--auto{padding-right:1rem;padding-left:0}@media (min-width: 99rem){.bx--col,.bx--col-max{max-width:100%;flex-basis:0;flex-grow:1}.bx--col--auto,.bx--col-max--auto{width:auto;max-width:100%;flex:1 0 0%}.bx--col-max-0{display:none}.bx--col-max-1{display:block;max-width:6.25%;flex:0 0 6.25%}.bx--col-max-2{display:block;max-width:12.5%;flex:0 0 12.5%}.bx--col-max-3{display:block;max-width:18.75%;flex:0 0 18.75%}.bx--col-max-4{display:block;max-width:25%;flex:0 0 25%}.bx--col-max-5{display:block;max-width:31.25%;flex:0 0 31.25%}.bx--col-max-6{display:block;max-width:37.5%;flex:0 0 37.5%}.bx--col-max-7{display:block;max-width:43.75%;flex:0 0 43.75%}.bx--col-max-8{display:block;max-width:50%;flex:0 0 50%}.bx--col-max-9{display:block;max-width:56.25%;flex:0 0 56.25%}.bx--col-max-10{display:block;max-width:62.5%;flex:0 0 62.5%}.bx--col-max-11{display:block;max-width:68.75%;flex:0 0 68.75%}.bx--col-max-12{display:block;max-width:75%;flex:0 0 75%}.bx--col-max-13{display:block;max-width:81.25%;flex:0 0 81.25%}.bx--col-max-14{display:block;max-width:87.5%;flex:0 0 87.5%}.bx--col-max-15{display:block;max-width:93.75%;flex:0 0 93.75%}.bx--col-max-16{display:block;max-width:100%;flex:0 0 100%}.bx--offset-max-0{margin-left:0}.bx--offset-max-1{margin-left:6.25%}.bx--offset-max-2{margin-left:12.5%}.bx--offset-max-3{margin-left:18.75%}.bx--offset-max-4{margin-left:25%}.bx--offset-max-5{margin-left:31.25%}.bx--offset-max-6{margin-left:37.5%}.bx--offset-max-7{margin-left:43.75%}.bx--offset-max-8{margin-left:50%}.bx--offset-max-9{margin-left:56.25%}.bx--offset-max-10{margin-left:62.5%}.bx--offset-max-11{margin-left:68.75%}.bx--offset-max-12{margin-left:75%}.bx--offset-max-13{margin-left:81.25%}.bx--offset-max-14{margin-left:87.5%}.bx--offset-max-15{margin-left:93.75%}}.bx--no-gutter,.bx--row.bx--no-gutter [class*='bx--col']{padding-right:0;padding-left:0}.bx--no-gutter--start,.bx--row.bx--no-gutter--start [class*='bx--col']{padding-left:0}.bx--no-gutter--end,.bx--row.bx--no-gutter--end [class*='bx--col']{padding-right:0}.bx--no-gutter--left,.bx--row.bx--no-gutter--left [class*='bx--col']{padding-left:0}.bx--no-gutter--right,.bx--row.bx--no-gutter--right [class*='bx--col']{padding-right:0}.bx--hang--start{padding-left:1rem}.bx--hang--end{padding-right:1rem}.bx--hang--left{padding-left:1rem}.bx--hang--right{padding-right:1rem}.bx--aspect-ratio{position:relative}.bx--aspect-ratio::before{width:1px;height:0;margin-left:-1px;content:'';float:left}.bx--aspect-ratio::after{display:table;clear:both;content:''}.bx--aspect-ratio--16x9::before{padding-top:56.25%}.bx--aspect-ratio--9x16::before{padding-top:177.77778%}.bx--aspect-ratio--2x1::before{padding-top:50%}.bx--aspect-ratio--1x2::before{padding-top:200%}.bx--aspect-ratio--4x3::before{padding-top:75%}.bx--aspect-ratio--3x4::before{padding-top:133.33333%}.bx--aspect-ratio--3x2::before{padding-top:66.66667%}.bx--aspect-ratio--2x3::before{padding-top:150%}.bx--aspect-ratio--1x1::before{padding-top:100%}.bx--aspect-ratio--object{position:absolute;top:0;left:0;width:100%;height:100%}.bx--structured-list--selection .bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection ::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list--selection th,.bx--structured-list--selection :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list--selection th,.bx--structured-list--selection .bx--structured-list-cell,.bx--structured-list--selection :host(dds-structured-list-cell),.bx--structured-list--selection .bx--structured-list-th,.bx--structured-list--selection :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list--selection ::slotted(bx-structured-list-header-cell),.bx--structured-list--selection :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list--selection ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list--selection .bx--structured-list-header-cell,.bx--structured-list--selection :host(dds-structured-list-header-cell){padding-right:1rem;padding-left:1rem}.bx--structured-list--selection .bx--structured-list-td:first-child,.bx--structured-list--selection :host(bx-structured-list-row) :first-child::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :first-child::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group th:first-child,.bx--structured-list-group .bx--structured-list--selection th:first-child,.bx--structured-list--selection :host(dds-structured-list-group) th:first-child,:host(dds-structured-list-group) .bx--structured-list--selection th:first-child,.bx--structured-list--selection .bx--structured-list-cell:first-child,.bx--structured-list--selection :host(dds-structured-list-cell:first-child),.bx--structured-list--selection .bx--structured-list-th:first-child,.bx--structured-list--selection :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list--selection :first-child::slotted(bx-structured-list-header-cell),.bx--structured-list--selection :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list--selection :first-child::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list--selection .bx--structured-list-header-cell:first-child,.bx--structured-list--selection :host(dds-structured-list-header-cell:first-child){padding-right:1rem;padding-left:1rem}.bx--structured-list-input{display:none}.bx--structured-list{box-sizing:border-box;padding:0;border:0;margin:0;font-family:inherit;font-size:100%;vertical-align:baseline;display:table;width:100%;margin-bottom:5rem;background-color:transparent;border-collapse:collapse;border-spacing:0;overflow-x:auto}.bx--structured-list *,.bx--structured-list *::before,.bx--structured-list *::after{box-sizing:inherit}.bx--structured-list.bx--structured-list--condensed .bx--structured-list-td,.bx--structured-list.bx--structured-list--condensed :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--condensed ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--condensed .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list.bx--structured-list--condensed th,.bx--structured-list.bx--structured-list--condensed :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--condensed th,.bx--structured-list.bx--structured-list--condensed .bx--structured-list-cell,.bx--structured-list.bx--structured-list--condensed :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--condensed .bx--structured-list-th,.bx--structured-list.bx--structured-list--condensed :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--condensed ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--condensed :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--condensed ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--condensed .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--condensed :host(dds-structured-list-header-cell){padding:.5rem}.bx--structured-list .bx--structured-list-row .bx--structured-list-td:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-td:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) .bx--structured-list-td:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-td:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) .bx--structured-list-td:first-of-type,.bx--structured-list .bx--structured-list-group tr .bx--structured-list-td:first-of-type,.bx--structured-list-group .bx--structured-list tr .bx--structured-list-td:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr .bx--structured-list-td:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr .bx--structured-list-td:first-of-type,.bx--structured-list .bx--structured-list-row :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list .bx--structured-list-row :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list .bx--structured-list-group tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group .bx--structured-list tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list :host(dds-structured-list-group) tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) .bx--structured-list tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list .bx--structured-list-row .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list .bx--structured-list-row th:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) th:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) th:first-of-type,.bx--structured-list .bx--structured-list-group tr th:first-of-type,.bx--structured-list-group .bx--structured-list tr th:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list :host(dds-structured-list-group) tr th:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(dds-structured-list-group) .bx--structured-list tr th:first-of-type,.bx--structured-list .bx--structured-list-row :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list .bx--structured-list-row th:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) th:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) th:first-of-type,.bx--structured-list .bx--structured-list-group tr :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list .bx--structured-list-group tr th:first-of-type,.bx--structured-list-group .bx--structured-list tr :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list-group .bx--structured-list tr th:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr th:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr th:first-of-type,.bx--structured-list .bx--structured-list-row .bx--structured-list-cell:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-cell:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) .bx--structured-list-cell:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-cell:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) .bx--structured-list-cell:first-of-type,.bx--structured-list .bx--structured-list-group tr .bx--structured-list-cell:first-of-type,.bx--structured-list-group .bx--structured-list tr .bx--structured-list-cell:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr .bx--structured-list-cell:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr .bx--structured-list-cell:first-of-type,.bx--structured-list .bx--structured-list-row :host(dds-structured-list-cell:first-of-type),.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell:first-of-type),:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell:first-of-type),.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-cell:first-of-type),:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(dds-structured-list-cell:first-of-type),.bx--structured-list .bx--structured-list-group tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list-group .bx--structured-list tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list :host(dds-structured-list-group) tr :host(dds-structured-list-cell:first-of-type),:host(dds-structured-list-group) .bx--structured-list tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list .bx--structured-list-row .bx--structured-list-th:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-th:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) .bx--structured-list-th:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-th:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) .bx--structured-list-th:first-of-type,.bx--structured-list .bx--structured-list-group tr .bx--structured-list-th:first-of-type,.bx--structured-list-group .bx--structured-list tr .bx--structured-list-th:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr .bx--structured-list-th:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr .bx--structured-list-th:first-of-type,.bx--structured-list .bx--structured-list-row :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list .bx--structured-list-row :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list .bx--structured-list-group tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list-group .bx--structured-list tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-header-cell),:host(dds-structured-list-group) .bx--structured-list tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list .bx--structured-list-row :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list .bx--structured-list-row :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list .bx--structured-list-group tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list-group .bx--structured-list tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(dds-structured-list-group) .bx--structured-list tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list .bx--structured-list-row .bx--structured-list-header-cell:first-of-type,.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell:first-of-type,:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell:first-of-type,.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-header-cell:first-of-type,:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) .bx--structured-list-header-cell:first-of-type,.bx--structured-list .bx--structured-list-group tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list-group .bx--structured-list tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list :host(dds-structured-list-group) tr .bx--structured-list-header-cell:first-of-type,:host(dds-structured-list-group) .bx--structured-list tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list .bx--structured-list-row :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell:first-of-type),:host(bx-structured-list-head) .bx--structured-list ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell:first-of-type),:host(bx-structured-list-body) .bx--structured-list ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list .bx--structured-list-group tr :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list-group .bx--structured-list tr :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list :host(dds-structured-list-group) tr :host(dds-structured-list-header-cell:first-of-type),:host(dds-structured-list-group) .bx--structured-list tr :host(dds-structured-list-header-cell:first-of-type){padding-left:1rem}.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-td,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-td,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-td,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-td,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-td,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr ::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr ::slotted(bx-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-row) ::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush .bx--structured-list-row th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-group th,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-group th,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr th,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-group th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-group th,.bx--structured-list-group :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-group) th,:host(dds-structured-list-group) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr th,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-cell,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-cell,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-cell,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-cell,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-cell,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-cell,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-cell,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-cell,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-cell,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(dds-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-th,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-th,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-th,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-th,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-th,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr ::slotted(bx-structured-list-header-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr ::slotted(bx-structured-list-header-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr ::slotted(bx-structured-list-header-cell-skeleton),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-header-cell,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-header-cell,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-header-cell,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-header-cell,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-header-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(dds-structured-list-header-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-td:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-td:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-td:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-td:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-td:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush .bx--structured-list-row th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-group th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-group th:first-of-type,.bx--structured-list-group :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) th:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) th:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-group) th:first-of-type,:host(dds-structured-list-group) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-cell:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-cell:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-cell:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-cell:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-cell:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-cell:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell:first-of-type),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-cell:first-of-type),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-cell:first-of-type),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(dds-structured-list-cell:first-of-type),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-cell:first-of-type),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-th:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-th:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-th:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-th:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-th:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-th:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-header-cell),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-row :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(bx-structured-list-header-row) :first-of-type::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) :host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :first-of-type::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--flush .bx--structured-list-row .bx--structured-list-header-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell:first-of-type,:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) .bx--structured-list-header-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) .bx--structured-list-header-cell:first-of-type,:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) .bx--structured-list-header-cell:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr .bx--structured-list-header-cell:first-of-type,:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr .bx--structured-list-header-cell:first-of-type,.bx--structured-list.bx--structured-list--flush .bx--structured-list-row :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-head) ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell:first-of-type),:host(bx-structured-list-head) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-header-row) :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(bx-structured-list-body) ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell:first-of-type),:host(bx-structured-list-body) .bx--structured-list.bx--structured-list--flush ::slotted(bx-structured-list-row) :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list.bx--structured-list--flush .bx--structured-list-group tr :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list-group .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-header-cell:first-of-type),.bx--structured-list.bx--structured-list--flush :host(dds-structured-list-group) tr :host(dds-structured-list-header-cell:first-of-type),:host(dds-structured-list-group) .bx--structured-list.bx--structured-list--flush tr :host(dds-structured-list-header-cell:first-of-type){padding-right:1rem;padding-left:0}.bx--structured-list-row,:host(bx-structured-list-head) ::slotted(bx-structured-list-header-row),:host(bx-structured-list-body) ::slotted(bx-structured-list-row),.bx--structured-list-group tr,:host(dds-structured-list-group) tr{display:table-row;border-bottom:1px solid var(--cds-ui-03, #e0e0e0);transition:background-color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)}.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected),.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected)::slotted(bx-structured-list-header-row),:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected)::slotted(bx-structured-list-header-row),.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected)::slotted(bx-structured-list-row),:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected)::slotted(bx-structured-list-row),.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected),.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected),.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected),:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row):not(.bx--structured-list-row--selected){border-bottom:1px solid var(--cds-hover-row, #e5e5e5);background-color:var(--cds-hover-row, #e5e5e5);cursor:pointer}.bx--structured-list-row.bx--structured-list-row--selected,:host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row),:host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row),.bx--structured-list-group tr.bx--structured-list-row--selected,:host(dds-structured-list-group) tr.bx--structured-list-row--selected{background-color:var(--cds-selected-ui, #e0e0e0)}.bx--structured-list-row.bx--structured-list-row--header-row,:host(bx-structured-list-head) ::slotted(bx-structured-list-header-row),:host(bx-structured-list-body) .bx--structured-list-row--header-row::slotted(bx-structured-list-row),.bx--structured-list-group tr.bx--structured-list-row--header-row,.bx--structured-list-group :host(bx-structured-list-head) tr::slotted(bx-structured-list-header-row),:host(bx-structured-list-head) .bx--structured-list-group tr::slotted(bx-structured-list-header-row),:host(dds-structured-list-group) tr.bx--structured-list-row--header-row,:host(dds-structured-list-group) :host(bx-structured-list-head) tr::slotted(bx-structured-list-header-row),:host(bx-structured-list-head) :host(dds-structured-list-group) tr::slotted(bx-structured-list-header-row){border-bottom:1px solid var(--cds-selected-ui, #e0e0e0);cursor:inherit}.bx--structured-list-row:focus:not(.bx--structured-list-row--header-row),:host(bx-structured-list-head) :focus:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row),:host(bx-structured-list-body) :focus:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row),.bx--structured-list-group tr:focus:not(.bx--structured-list-row--header-row),:host(dds-structured-list-group) tr:focus:not(.bx--structured-list-row--header-row){outline:2px solid var(--cds-focus, #0f62fe);outline-offset:-2px}@media screen and (prefers-contrast){.bx--structured-list-row:focus:not(.bx--structured-list-row--header-row),:host(bx-structured-list-head) :focus:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row),:host(bx-structured-list-body) :focus:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row),.bx--structured-list-group tr:focus:not(.bx--structured-list-row--header-row),:host(dds-structured-list-group) tr:focus:not(.bx--structured-list-row--header-row){outline-style:dotted}}.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-td,:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-td,:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-td,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-row) .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-head) :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list--selection :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-body) :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list--selection :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(dds-structured-list-group) :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(bx-structured-list-head) .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-head) .bx--structured-list--selection .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list--selection :host(bx-structured-list-body) .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(bx-structured-list-body) .bx--structured-list--selection .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group :host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(bx-structured-list-head) :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-head) .bx--structured-list--selection :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list--selection :host(bx-structured-list-body) :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(bx-structured-list-body) .bx--structured-list--selection :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list--selection .bx--structured-list-group :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-cell,:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-cell,:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-cell,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>:host(dds-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>:host(dds-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>:host(dds-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list-row.bx--structured-list-row--selected>.bx--structured-list-td,:host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>.bx--structured-list-td,:host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>.bx--structured-list-td,.bx--structured-list-group tr.bx--structured-list-row--selected>.bx--structured-list-td,:host(dds-structured-list-group) tr.bx--structured-list-row--selected>.bx--structured-list-td,:host(bx-structured-list-row) .bx--structured-list-row.bx--structured-list-row--selected>::slotted(bx-structured-list-cell),:host(bx-structured-list-head) :host(bx-structured-list-row) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-body) :host(bx-structured-list-row) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),.bx--structured-list-group :host(bx-structured-list-row) tr.bx--structured-list-row--selected>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group tr.bx--structured-list-row--selected>::slotted(bx-structured-list-cell),:host(dds-structured-list-group) :host(bx-structured-list-row) tr.bx--structured-list-row--selected>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) tr.bx--structured-list-row--selected>::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list-row.bx--structured-list-row--selected>th,:host(bx-structured-list-head) .bx--structured-list-group .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>th,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-body) .bx--structured-list-group .bx--structured-list-row--selected::slotted(bx-structured-list-row)>th,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>th,.bx--structured-list-group tr.bx--structured-list-row--selected>th,:host(dds-structured-list-group) .bx--structured-list-row.bx--structured-list-row--selected>th,:host(bx-structured-list-head) :host(dds-structured-list-group) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-body) :host(dds-structured-list-group) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) tr.bx--structured-list-row--selected>th,.bx--structured-list-row.bx--structured-list-row--selected>.bx--structured-list-cell,:host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>.bx--structured-list-cell,:host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>.bx--structured-list-cell,.bx--structured-list-group tr.bx--structured-list-row--selected>.bx--structured-list-cell,:host(dds-structured-list-group) tr.bx--structured-list-row--selected>.bx--structured-list-cell,.bx--structured-list-row.bx--structured-list-row--selected>:host(dds-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list-row--selected::slotted(bx-structured-list-header-row)>:host(dds-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list-row--selected::slotted(bx-structured-list-row)>:host(dds-structured-list-cell),.bx--structured-list-group tr.bx--structured-list-row--selected>:host(dds-structured-list-cell),:host(dds-structured-list-group) tr.bx--structured-list-row--selected>:host(dds-structured-list-cell){color:var(--cds-text-01, #161616)}.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-td,:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-td,:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-td,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-td,.bx--structured-list--selection :host(bx-structured-list-row) .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-head) :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list--selection :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-body) :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list--selection :host(bx-structured-list-row) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection :host(dds-structured-list-group) :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-row) tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),:host(bx-structured-list-row) :host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>::slotted(bx-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(bx-structured-list-head) .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-head) .bx--structured-list--selection .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list-group :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list--selection :host(bx-structured-list-body) .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(bx-structured-list-body) .bx--structured-list--selection .bx--structured-list-group :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list-group :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group :host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(bx-structured-list-head) :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(bx-structured-list-head) .bx--structured-list--selection :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>th,.bx--structured-list--selection :host(bx-structured-list-body) :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(bx-structured-list-body) .bx--structured-list--selection :host(dds-structured-list-group) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,:host(dds-structured-list-group) :host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>th,.bx--structured-list--selection .bx--structured-list-group :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list-group .bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>th,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>th,.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-cell,:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-cell,:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>.bx--structured-list-cell,.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>.bx--structured-list-cell,.bx--structured-list--selection .bx--structured-list-row:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-head) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>:host(dds-structured-list-cell),:host(bx-structured-list-head) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(bx-structured-list-body) :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>:host(dds-structured-list-cell),:host(bx-structured-list-body) .bx--structured-list--selection :hover:not(.bx--structured-list-row--header-row)::slotted(bx-structured-list-row)>:host(dds-structured-list-cell),.bx--structured-list--selection .bx--structured-list-group tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list-group .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),.bx--structured-list--selection :host(dds-structured-list-group) tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell),:host(dds-structured-list-group) .bx--structured-list--selection tr:hover:not(.bx--structured-list-row--header-row)>:host(dds-structured-list-cell){border-top:1px solid var(--cds-ui-01, #f4f4f4)}.bx--structured-list-thead,.bx--structured-list ::slotted(bx-structured-list-head){display:table-header-group;vertical-align:middle}.bx--structured-list-th,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list-header-cell,:host(dds-structured-list-header-cell){box-sizing:border-box;padding:0;border:0;margin:0;font-family:inherit;font-size:100%;vertical-align:baseline;padding:1rem .5rem .5rem .5rem;font-size:var(--cds-productive-heading-01-font-size, .875rem);font-weight:var(--cds-productive-heading-01-font-weight, 600);line-height:var(--cds-productive-heading-01-line-height, 1.28572);letter-spacing:var(--cds-productive-heading-01-letter-spacing, .16px);display:table-cell;height:2.5rem;color:var(--cds-text-01, #161616);font-weight:600;text-align:left;text-transform:none;vertical-align:top}.bx--structured-list-th *,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell) *,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton) *,.bx--structured-list-header-cell *,:host(dds-structured-list-header-cell) *,.bx--structured-list-th *::before,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell) *::before,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton) *::before,.bx--structured-list-header-cell *::before,:host(dds-structured-list-header-cell) *::before,.bx--structured-list-th *::after,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell) *::after,:host(bx-structured-list-header-row) ::slotted(bx-structured-list-header-cell-skeleton) *::after,.bx--structured-list-header-cell *::after,:host(dds-structured-list-header-cell) *::after{box-sizing:inherit}.bx--structured-list-tbody,.bx--structured-list ::slotted(bx-structured-list-body){display:table-row-group;vertical-align:middle}.bx--structured-list-td,:host(bx-structured-list-row) ::slotted(bx-structured-list-cell),.bx--structured-list-group th,:host(dds-structured-list-group) th,.bx--structured-list-cell,:host(dds-structured-list-cell){box-sizing:border-box;padding:0;border:0;margin:0;font-family:inherit;font-size:100%;vertical-align:baseline;font-size:var(--cds-body-long-01-font-size, .875rem);font-weight:var(--cds-body-long-01-font-weight, 400);line-height:var(--cds-body-long-01-line-height, 1.42857);letter-spacing:var(--cds-body-long-01-letter-spacing, .16px);padding:1rem .5rem 1.5rem .5rem;position:relative;display:table-cell;max-width:36rem;color:var(--cds-text-02, #525252);transition:color 110ms cubic-bezier(0.2, 0, 0.38, 0.9)}.bx--structured-list-td *,:host(bx-structured-list-row) ::slotted(bx-structured-list-cell) *,.bx--structured-list-group th *,:host(dds-structured-list-group) th *,.bx--structured-list-cell *,:host(dds-structured-list-cell) *,.bx--structured-list-td *::before,:host(bx-structured-list-row) ::slotted(bx-structured-list-cell) *::before,.bx--structured-list-group th *::before,:host(dds-structured-list-group) th *::before,.bx--structured-list-cell *::before,:host(dds-structured-list-cell) *::before,.bx--structured-list-td *::after,:host(bx-structured-list-row) ::slotted(bx-structured-list-cell) *::after,.bx--structured-list-group th *::after,:host(dds-structured-list-group) th *::after,.bx--structured-list-cell *::after,:host(dds-structured-list-cell) *::after{box-sizing:inherit}.bx--structured-list-content--nowrap,.bx--structured-list ::slotted(bx-structured-list-header-cell[nowrap]),:host(bx-structured-list-row) ::slotted(bx-structured-list-cell[nowrap]){white-space:nowrap}.bx--structured-list-svg{display:inline-block;fill:transparent;transition:all 110ms cubic-bezier(0.2, 0, 0.38, 0.9);vertical-align:middle}.bx--structured-list-input:checked+.bx--structured-list-row .bx--structured-list-svg,:host(bx-structured-list-head) .bx--structured-list-input:checked+::slotted(bx-structured-list-header-row) .bx--structured-list-svg,:host(bx-structured-list-body) .bx--structured-list-input:checked+::slotted(bx-structured-list-row) .bx--structured-list-svg,.bx--structured-list-group .bx--structured-list-input:checked+tr .bx--structured-list-svg,:host(dds-structured-list-group) .bx--structured-list-input:checked+tr .bx--structured-list-svg,.bx--structured-list-input:checked+.bx--structured-list-td .bx--structured-list-svg,:host(bx-structured-list-row) .bx--structured-list-input:checked+::slotted(bx-structured-list-cell) .bx--structured-list-svg,.bx--structured-list-group .bx--structured-list-input:checked+th .bx--structured-list-svg,:host(dds-structured-list-group) .bx--structured-list-input:checked+th .bx--structured-list-svg,.bx--structured-list-input:checked+.bx--structured-list-cell .bx--structured-list-svg,.bx--structured-list-input:checked+:host(dds-structured-list-cell) .bx--structured-list-svg{fill:var(--cds-icon-01, #161616)}.bx--structured-list.bx--skeleton .bx--structured-list-th:first-child,.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :first-child::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :first-child::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--skeleton .bx--structured-list-header-cell:first-child,.bx--structured-list.bx--skeleton :host(dds-structured-list-header-cell:first-child){width:8%}.bx--structured-list.bx--skeleton .bx--structured-list-th:nth-child(3n+2),.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :nth-child(3n+2)::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :nth-child(3n+2)::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :nth-child(3n+2)::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :nth-child(3n+2)::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--skeleton .bx--structured-list-header-cell:nth-child(3n+2),.bx--structured-list.bx--skeleton :host(dds-structured-list-header-cell:nth-child(3n+2)){width:30%}.bx--structured-list.bx--skeleton .bx--structured-list-th:nth-child(3n+3),.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :nth-child(3n+3)::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :nth-child(3n+3)::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--skeleton :host(bx-structured-list-header-row) :nth-child(3n+3)::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--skeleton :nth-child(3n+3)::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--skeleton .bx--structured-list-header-cell:nth-child(3n+3),.bx--structured-list.bx--skeleton :host(dds-structured-list-header-cell:nth-child(3n+3)){width:15%}.bx--structured-list.bx--skeleton span{position:relative;padding:0;border:none;background:var(--cds-skeleton-01, #e5e5e5);box-shadow:none;pointer-events:none;display:block;width:75%;height:1rem}.bx--structured-list.bx--skeleton span:hover,.bx--structured-list.bx--skeleton span:focus,.bx--structured-list.bx--skeleton span:active{border:none;cursor:default;outline:none}.bx--structured-list.bx--skeleton span::before{position:absolute;top:0;left:0;width:100%;height:100%;-webkit-animation:3000ms ease-in-out skeleton infinite;animation:3000ms ease-in-out skeleton infinite;background:var(--cds-skeleton-02, #c6c6c6);content:'';will-change:transform-origin, transform, opacity}@media (prefers-reduced-motion: reduce){.bx--structured-list.bx--skeleton span::before{-webkit-animation:none;animation:none}}.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-th:first-child,.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--selection.bx--skeleton :first-child::slotted(bx-structured-list-header-cell),.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell-skeleton),:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--selection.bx--skeleton :first-child::slotted(bx-structured-list-header-cell-skeleton),.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-header-cell:first-child,.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(dds-structured-list-header-cell:first-child){width:5%}.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-th:first-child span,.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell) span,:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--selection.bx--skeleton :first-child::slotted(bx-structured-list-header-cell) span,.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(bx-structured-list-header-row) :first-child::slotted(bx-structured-list-header-cell-skeleton) span,:host(bx-structured-list-header-row) .bx--structured-list.bx--structured-list--selection.bx--skeleton :first-child::slotted(bx-structured-list-header-cell-skeleton) span,.bx--structured-list.bx--structured-list--selection.bx--skeleton .bx--structured-list-header-cell:first-child span,.bx--structured-list.bx--structured-list--selection.bx--skeleton :host(dds-structured-list-header-cell:first-child) span{display:none}@media screen and (-ms-high-contrast: active), (forced-colors: active){.bx--structured-list-input:checked+.bx--structured-list-td .bx--structured-list-svg,:host(bx-structured-list-row) .bx--structured-list-input:checked+::slotted(bx-structured-list-cell) .bx--structured-list-svg,.bx--structured-list-group .bx--structured-list-input:checked+th .bx--structured-list-svg,:host(dds-structured-list-group) .bx--structured-list-input:checked+th .bx--structured-list-svg,.bx--structured-list-input:checked+.bx--structured-list-cell .bx--structured-list-svg,.bx--structured-list-input:checked+:host(dds-structured-list-cell) .bx--structured-list-svg{fill:ButtonText}}:host(bx-structured-list-row:hover) .bx--structured-list-svg{fill:#a8a8a8}.bx--structured-list-input:checked+.bx--structured-list-cell .bx--structured-list-svg{fill:var(--cds-text-01, #161616)}:host(bx-structured-list-header-cell-skeleton) span{position:relative;padding:0;border:none;background:var(--cds-skeleton-01, #e5e5e5);box-shadow:none;pointer-events:none;width:75%;height:1rem;display:block}:host(bx-structured-list-header-cell-skeleton) span:hover,:host(bx-structured-list-header-cell-skeleton) span:focus,:host(bx-structured-list-header-cell-skeleton) span:active{border:none;cursor:default;outline:none}:host(bx-structured-list-header-cell-skeleton) span::before{position:absolute;top:0;left:0;width:100%;height:100%;-webkit-animation:3000ms ease-in-out skeleton infinite;animation:3000ms ease-in-out skeleton infinite;background:var(--cds-skeleton-02, #c6c6c6);content:'';will-change:transform-origin, transform, opacity}@media (prefers-reduced-motion: reduce){:host(bx-structured-list-header-cell-skeleton) span::before{-webkit-animation:none;animation:none}}.bx--structured-list-header-row,:host(dds-structured-list-header-row){border-bottom:none}.bx--structured-list-header-cell,:host(dds-structured-list-header-cell){padding-inline:var(--cds-spacing-05, 1rem);-webkit-padding-after:var(--cds-spacing-05, 1rem);padding-block-end:var(--cds-spacing-05, 1rem);border-bottom:1px solid var(--cds-ui-03, #e0e0e0)}.bx--structured-list-group,:host(dds-structured-list-group){display:contents}.bx--structured-list-group tr,:host(dds-structured-list-group) tr{background-color:var(--cds-ui-03, #e0e0e0);color:var(--cds-text-01, #161616);border-bottom:1px solid var(--cds-ui-03, #e0e0e0)}@media (max-width: 41.98rem){.bx--structured-list-group tr,:host(dds-structured-list-group) tr{box-shadow:50vw 0 var(--cds-ui-03, #e0e0e0) , 100vw 0 var(--cds-ui-03, #e0e0e0) , 150vw 0 var(--cds-ui-03, #e0e0e0) , 200vw 0 var(--cds-ui-03, #e0e0e0) , 250vw 0 var(--cds-ui-03, #e0e0e0) , 300vw 0 var(--cds-ui-03, #e0e0e0) , 350vw 0 var(--cds-ui-03, #e0e0e0) , 400vw 0 var(--cds-ui-03, #e0e0e0) , 450vw 0 var(--cds-ui-03, #e0e0e0) , 500vw 0 var(--cds-ui-03, #e0e0e0) , 550vw 0 var(--cds-ui-03, #e0e0e0) , 600vw 0 var(--cds-ui-03, #e0e0e0) , 650vw 0 var(--cds-ui-03, #e0e0e0) , 700vw 0 var(--cds-ui-03, #e0e0e0) , 750vw 0 var(--cds-ui-03, #e0e0e0) , 800vw 0 var(--cds-ui-03, #e0e0e0) , 850vw 0 var(--cds-ui-03, #e0e0e0) , 900vw 0 var(--cds-ui-03, #e0e0e0) , 950vw 0 var(--cds-ui-03, #e0e0e0) , 1000vw 0 var(--cds-ui-03, #e0e0e0)}}.bx--structured-list-group th,:host(dds-structured-list-group) th{color:var(--cds-text-01, #161616);text-align:left;font-weight:bold;padding-inline:var(--cds-spacing-05, 1rem);max-width:100%}.bx--structured-list-cell,:host(dds-structured-list-cell){padding-inline:var(--cds-spacing-05, 1rem);border-bottom:1px solid var(--cds-ui-03, #e0e0e0)}.bx--structured-list-all-rows,:host(dds-structured-list-header-row),:host(dds-structured-list-row),:host(dds-structured-list-group) tr{--max-cols: 4;display:flex;flex-wrap:wrap;margin-right:-1rem;margin-left:-1rem;flex-wrap:nowrap}@media (min-width: 42rem){.bx--structured-list-all-rows,:host(dds-structured-list-header-row),:host(dds-structured-list-row),:host(dds-structured-list-group) tr{--max-cols: 8}}@media (min-width: 66rem){.bx--structured-list-all-rows,:host(dds-structured-list-header-row),:host(dds-structured-list-row),:host(dds-structured-list-group) tr{--max-cols: 16}}.bx--structured-list-all-rows ::slotted(*:nth-child(1)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(1)){--cols: var(--col-span-1, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(1)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(1)){--cols: var(\n        --col-span-md-1,\n        var(--col-span-1, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(1)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-row) ::slotted(*:nth-child(1)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(1)){--cols: var(\n        --col-span-lg-1,\n        var(\n          --col-span-md-1,\n          var(--col-span-1, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(2)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(2)){--cols: var(--col-span-2, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(2)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(2)){--cols: var(\n        --col-span-md-2,\n        var(--col-span-2, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(2)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-row) ::slotted(*:nth-child(2)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(2)){--cols: var(\n        --col-span-lg-2,\n        var(\n          --col-span-md-2,\n          var(--col-span-2, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(3)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(3)){--cols: var(--col-span-3, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(3)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(3)){--cols: var(\n        --col-span-md-3,\n        var(--col-span-3, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(3)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-row) ::slotted(*:nth-child(3)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(3)){--cols: var(\n        --col-span-lg-3,\n        var(\n          --col-span-md-3,\n          var(--col-span-3, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(4)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(4)){--cols: var(--col-span-4, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(4)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(4)){--cols: var(\n        --col-span-md-4,\n        var(--col-span-4, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(4)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-row) ::slotted(*:nth-child(4)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(4)){--cols: var(\n        --col-span-lg-4,\n        var(\n          --col-span-md-4,\n          var(--col-span-4, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(5)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(5)){--cols: var(--col-span-5, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(5)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(5)){--cols: var(\n        --col-span-md-5,\n        var(--col-span-5, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(5)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-row) ::slotted(*:nth-child(5)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(5)){--cols: var(\n        --col-span-lg-5,\n        var(\n          --col-span-md-5,\n          var(--col-span-5, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(6)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(6)){--cols: var(--col-span-6, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(6)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(6)){--cols: var(\n        --col-span-md-6,\n        var(--col-span-6, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(6)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-row) ::slotted(*:nth-child(6)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(6)){--cols: var(\n        --col-span-lg-6,\n        var(\n          --col-span-md-6,\n          var(--col-span-6, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(7)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(7)){--cols: var(--col-span-7, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(7)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(7)){--cols: var(\n        --col-span-md-7,\n        var(--col-span-7, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(7)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-row) ::slotted(*:nth-child(7)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(7)){--cols: var(\n        --col-span-lg-7,\n        var(\n          --col-span-md-7,\n          var(--col-span-7, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:nth-child(8)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(8)){--cols: var(--col-span-8, 2);--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}@media (min-width: 42rem){.bx--structured-list-all-rows ::slotted(*:nth-child(8)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(8)){--cols: var(\n        --col-span-md-8,\n        var(--col-span-8, 2)\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}@media (min-width: 66rem){.bx--structured-list-all-rows ::slotted(*:nth-child(8)),:host(dds-structured-list-header-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-row) ::slotted(*:nth-child(8)),:host(dds-structured-list-group) tr ::slotted(*:nth-child(8)){--cols: var(\n        --col-span-lg-8,\n        var(\n          --col-span-md-8,\n          var(--col-span-8, var(--default-cols, 2))\n        )\n      );--width: calc((var(--cols) / var(--max-cols)) * 100%);max-width:var(--width);flex:0 0 var(--width)}}.bx--structured-list-all-rows ::slotted(*:last-child),:host(dds-structured-list-header-row) ::slotted(*:last-child),:host(dds-structured-list-row) ::slotted(*:last-child),:host(dds-structured-list-group) tr ::slotted(*:last-child){flex-grow:1;max-width:none}.bx--structured-list-all-cells,:host(dds-structured-list-header-cell),:host(dds-structured-list-cell),:host(dds-structured-list-group) td{height:auto;scroll-snap-align:start;display:block;max-width:50%;flex:0 0 50%}@media (min-width: 42rem){.bx--structured-list-all-cells,:host(dds-structured-list-header-cell),:host(dds-structured-list-cell),:host(dds-structured-list-group) td{display:block;max-width:25%;flex:0 0 25%}}@media (min-width: 66rem){.bx--structured-list-all-cells,:host(dds-structured-list-header-cell),:host(dds-structured-list-cell),:host(dds-structured-list-group) td{display:block;max-width:12.5%;flex:0 0 12.5%}}.dds--structured-list,:host(dds-structured-list){display:flex;flex-wrap:nowrap;padding-left:1rem;padding-right:1rem;margin-left:-1rem;margin-right:-1rem;overflow-x:auto;-ms-scroll-snap-type:x;scroll-snap-type:x;position:relative}.dds--structured-list .bx--structured-list,:host(dds-structured-list) .bx--structured-list{margin:0;flex:0 0 1}.dds--structured-list .overflow-indicator,:host(dds-structured-list) .overflow-indicator{width:0;flex:0 0 1;position:sticky;z-index:2;opacity:0;transition:opacity 0.25s ease-in-out}.dds--structured-list .overflow-indicator::before,:host(dds-structured-list) .overflow-indicator::before{content:'';width:24px;height:100%;position:absolute;top:0}.dds--structured-list .overflow-indicator.left,:host(dds-structured-list) .overflow-indicator.left{left:0;-webkit-transform:translateX(-1rem);transform:translateX(-1rem)}.dds--structured-list .overflow-indicator.left::before,:host(dds-structured-list) .overflow-indicator.left::before{left:0;background-image:linear-gradient(90deg, var(--cds-ui-01, #f4f4f4), transparent)}.dds--structured-list .overflow-indicator.right,:host(dds-structured-list) .overflow-indicator.right{left:calc(100%);-webkit-transform:translateX(1rem);transform:translateX(1rem)}.dds--structured-list .overflow-indicator.right::before,:host(dds-structured-list) .overflow-indicator.right::before{right:0;background-image:linear-gradient(90deg, transparent, var(--cds-ui-01, #f4f4f4))}.dds--structured-list.overflowing-left .overflow-indicator.left,:host(dds-structured-list.overflowing-left) .overflow-indicator.left{opacity:1}.dds--structured-list.overflowing-right .overflow-indicator.right,:host(dds-structured-list.overflowing-right) .overflow-indicator.right{opacity:1}.bx--structured-list-cell-tooltip-icon,:host(dds-structured-list-cell) bx-tooltip-icon{display:inline-flex;vertical-align:sub}.bx--structured-list-cell-tooltip-icon svg,:host(dds-structured-list-cell) bx-tooltip-icon svg{fill:var(--cds-icon-02, #525252)}.bx--structured-list-cell[icon][icon='checkmark'],:host(dds-structured-list-cell[icon][icon='checkmark']){color:var(--cds-support-02, #198038)}.bx--structured-list-cell-icon-text,:host(dds-structured-list-cell) .bx--structured-list-cell-icon-text{color:var(--cds-text-02, #525252)}\n"])},"./src/components/structured-list/structured-list.ts":function(t,e,r){"use strict";r("../../node_modules/core-js/modules/es.reflect.construct.js"),r("../../node_modules/core-js/modules/es.object.create.js"),r("../../node_modules/core-js/modules/es.object.freeze.js"),r("../../node_modules/core-js/modules/es.object.define-properties.js"),r("../../node_modules/core-js/modules/es.array.map.js"),r("../../node_modules/core-js/modules/es.array.for-each.js"),r("../../node_modules/core-js/modules/web.dom-collections.for-each.js"),r("../../node_modules/core-js/modules/es.object.define-property.js"),r("../../node_modules/core-js/modules/es.array.index-of.js"),r("../../node_modules/core-js/modules/es.array.splice.js"),r("../../node_modules/core-js/modules/es.symbol.to-string-tag.js"),r("../../node_modules/core-js/modules/es.object.to-string.js"),r("../../node_modules/core-js/modules/es.math.to-string-tag.js"),r("../../node_modules/core-js/modules/es.json.to-string-tag.js"),r("../../node_modules/core-js/modules/es.symbol.js"),r("../../node_modules/core-js/modules/es.symbol.description.js"),r("../../node_modules/core-js/modules/es.object.assign.js"),r("../../node_modules/core-js/modules/es.array.find.js"),r("../../node_modules/core-js/modules/es.symbol.to-primitive.js"),r("../../node_modules/core-js/modules/es.date.to-primitive.js"),r("../../node_modules/core-js/modules/es.number.constructor.js"),r("../../node_modules/core-js/modules/es.array.slice.js"),r("../../node_modules/core-js/modules/es.function.name.js"),r("../../node_modules/core-js/modules/es.array.from.js"),r("../../node_modules/core-js/modules/es.string.iterator.js"),r("../../node_modules/core-js/modules/es.symbol.iterator.js"),r("../../node_modules/core-js/modules/es.array.iterator.js"),r("../../node_modules/core-js/modules/web.dom-collections.iterator.js"),r("../../node_modules/core-js/modules/es.array.is-array.js"),r("../../node_modules/core-js/modules/es.reflect.get.js"),r("../../node_modules/core-js/modules/es.function.bind.js"),r("../../node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),r("../../node_modules/core-js/modules/es.object.set-prototype-of.js"),r("../../node_modules/core-js/modules/es.object.get-prototype-of.js"),r("../../node_modules/core-js/modules/es.array.concat.js"),r("../../node_modules/core-js/modules/es.string.starts-with.js"),r("../../node_modules/core-js/modules/es.parse-int.js"),r("../../node_modules/core-js/modules/es.regexp.to-string.js"),r("../../node_modules/core-js/modules/es.date.to-string.js"),r("../../node_modules/core-js/modules/es.array.filter.js"),r("../../node_modules/core-js/modules/es.object.values.js");var s,d,l=r("../../node_modules/carbon-components/es/globals/js/settings.js"),u=r("../../node_modules/lit-element/lit-element.js"),o=r("./src/internal/vendor/@carbon/ibmdotcom-utilities/utilities/settings/settings.js"),i=r("./src/globals/mixins/stable-selector.ts"),c=r("./src/components/structured-list/structured-list.scss"),n=r("./src/internal/vendor/@carbon/web-components/globals/decorators/carbon-element.js");function a(t,e){return e||(e=t.slice(0)),Object.freeze(Object.defineProperties(t,{raw:{value:Object.freeze(e)}}))}function b(t,e){for(var r=0;r<e.length;r++){var s=e[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,(d=s.key,l=void 0,l=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==f(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(d,"string"),"symbol"===f(l)?l:String(l)),s)}var d,l}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function p(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,s=x(t);if(e){var d=x(this).constructor;r=Reflect.construct(s,arguments,d)}else r=s.apply(this,arguments);return function(t,e){if(e&&("object"===f(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return m(t)}(this,r)}}function m(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function x(t){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},x(t)}function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}var g,w;function y(){y=function(){return t};var t={elementsDefinitionOrder:[["method"],["field"]],initializeInstanceElements:function(t,e){["method","field"].forEach((function(r){e.forEach((function(e){e.kind===r&&"own"===e.placement&&this.defineClassElement(t,e)}),this)}),this)},initializeClassElements:function(t,e){var r=t.prototype;["method","field"].forEach((function(s){e.forEach((function(e){var d=e.placement;if(e.kind===s&&("static"===d||"prototype"===d)){var l="static"===d?t:r;this.defineClassElement(l,e)}}),this)}),this)},defineClassElement:function(t,e){var r=e.descriptor;if("field"===e.kind){var s=e.initializer;r={enumerable:r.enumerable,writable:r.writable,configurable:r.configurable,value:void 0===s?void 0:s.call(t)}}Object.defineProperty(t,e.key,r)},decorateClass:function(t,e){var r=[],s=[],d={static:[],prototype:[],own:[]};if(t.forEach((function(t){this.addElementPlacement(t,d)}),this),t.forEach((function(t){if(!k(t))return r.push(t);var e=this.decorateElement(t,d);r.push(e.element),r.push.apply(r,e.extras),s.push.apply(s,e.finishers)}),this),!e)return{elements:r,finishers:s};var l=this.decorateConstructor(r,e);return s.push.apply(s,l.finishers),l.finishers=s,l},addElementPlacement:function(t,e,r){var s=e[t.placement];if(!r&&-1!==s.indexOf(t.key))throw new TypeError("Duplicated element ("+t.key+")");s.push(t.key)},decorateElement:function(t,e){for(var r=[],s=[],d=t.decorators,l=d.length-1;l>=0;l--){var u=e[t.placement];u.splice(u.indexOf(t.key),1);var o=this.fromElementDescriptor(t),i=this.toElementFinisherExtras((0,d[l])(o)||o);t=i.element,this.addElementPlacement(t,e),i.finisher&&s.push(i.finisher);var c=i.extras;if(c){for(var n=0;n<c.length;n++)this.addElementPlacement(c[n],e);r.push.apply(r,c)}}return{element:t,finishers:s,extras:r}},decorateConstructor:function(t,e){for(var r=[],s=e.length-1;s>=0;s--){var d=this.fromClassDescriptor(t),l=this.toClassDescriptor((0,e[s])(d)||d);if(void 0!==l.finisher&&r.push(l.finisher),void 0!==l.elements){t=l.elements;for(var u=0;u<t.length-1;u++)for(var o=u+1;o<t.length;o++)if(t[u].key===t[o].key&&t[u].placement===t[o].placement)throw new TypeError("Duplicated element ("+t[u].key+")")}}return{elements:t,finishers:r}},fromElementDescriptor:function(t){var e={kind:t.kind,key:t.key,placement:t.placement,descriptor:t.descriptor};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),"field"===t.kind&&(e.initializer=t.initializer),e},toElementDescriptors:function(t){var e;if(void 0!==t)return(e=t,function(t){if(Array.isArray(t))return t}(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(t,e){if(t){if("string"==typeof t)return E(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(t,e):void 0}}(e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map((function(t){var e=this.toElementDescriptor(t);return this.disallowProperty(t,"finisher","An element descriptor"),this.disallowProperty(t,"extras","An element descriptor"),e}),this)},toElementDescriptor:function(t){var e=String(t.kind);if("method"!==e&&"field"!==e)throw new TypeError('An element descriptor\'s .kind property must be either "method" or "field", but a decorator created an element descriptor with .kind "'+e+'"');var r=O(t.key),s=String(t.placement);if("static"!==s&&"prototype"!==s&&"own"!==s)throw new TypeError('An element descriptor\'s .placement property must be one of "static", "prototype" or "own", but a decorator created an element descriptor with .placement "'+s+'"');var d=t.descriptor;this.disallowProperty(t,"elements","An element descriptor");var l={kind:e,key:r,placement:s,descriptor:Object.assign({},d)};return"field"!==e?this.disallowProperty(t,"initializer","A method descriptor"):(this.disallowProperty(d,"get","The property descriptor of a field descriptor"),this.disallowProperty(d,"set","The property descriptor of a field descriptor"),this.disallowProperty(d,"value","The property descriptor of a field descriptor"),l.initializer=t.initializer),l},toElementFinisherExtras:function(t){return{element:this.toElementDescriptor(t),finisher:_(t,"finisher"),extras:this.toElementDescriptors(t.extras)}},fromClassDescriptor:function(t){var e={kind:"class",elements:t.map(this.fromElementDescriptor,this)};return Object.defineProperty(e,Symbol.toStringTag,{value:"Descriptor",configurable:!0}),e},toClassDescriptor:function(t){var e=String(t.kind);if("class"!==e)throw new TypeError('A class descriptor\'s .kind property must be "class", but a decorator created a class descriptor with .kind "'+e+'"');this.disallowProperty(t,"key","A class descriptor"),this.disallowProperty(t,"placement","A class descriptor"),this.disallowProperty(t,"descriptor","A class descriptor"),this.disallowProperty(t,"initializer","A class descriptor"),this.disallowProperty(t,"extras","A class descriptor");var r=_(t,"finisher");return{elements:this.toElementDescriptors(t.elements),finisher:r}},runClassFinishers:function(t,e){for(var r=0;r<e.length;r++){var s=(0,e[r])(t);if(void 0!==s){if("function"!=typeof s)throw new TypeError("Finishers must return a constructor.");t=s}}return t},disallowProperty:function(t,e,r){if(void 0!==t[e])throw new TypeError(r+" can't have a ."+e+" property.")}};return t}function v(t){var e,r=O(t.key);"method"===t.kind?e={value:t.value,writable:!0,configurable:!0,enumerable:!1}:"get"===t.kind?e={get:t.value,configurable:!0,enumerable:!1}:"set"===t.kind?e={set:t.value,configurable:!0,enumerable:!1}:"field"===t.kind&&(e={configurable:!0,writable:!0,enumerable:!0});var s={kind:"field"===t.kind?"field":"method",key:r,placement:t.static?"static":"field"===t.kind?"own":"prototype",descriptor:e};return t.decorators&&(s.decorators=t.decorators),"field"===t.kind&&(s.initializer=t.value),s}function j(t,e){void 0!==t.descriptor.get?e.descriptor.get=t.descriptor.get:e.descriptor.set=t.descriptor.set}function k(t){return t.decorators&&t.decorators.length}function S(t){return void 0!==t&&!(void 0===t.value&&void 0===t.writable)}function _(t,e){var r=t[e];if(void 0!==r&&"function"!=typeof r)throw new TypeError("Expected '"+e+"' to be a function");return r}function O(t){var e=function(t,e){if("object"!==f(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var s=r.call(t,e||"default");if("object"!==f(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"===f(e)?e:String(e)}function E(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,s=new Array(e);r<e;r++)s[r]=t[r];return s}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var s=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(s){var d=Object.getOwnPropertyDescriptor(s,e);return d.get?d.get.call(arguments.length<3?t:r):d.value}},R.apply(this,arguments)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var P=o.a.stablePrefix,L=l.a.prefix,C=function(t,e,r,s){var d=y();if(s)for(var l=0;l<s.length;l++)d=s[l](d);var u=e((function(t){d.initializeInstanceElements(t,o.elements)}),r),o=d.decorateClass(function(t){for(var e=[],r=function(t){return"method"===t.kind&&t.key===l.key&&t.placement===l.placement},s=0;s<t.length;s++){var d,l=t[s];if("method"===l.kind&&(d=e.find(r)))if(S(l.descriptor)||S(d.descriptor)){if(k(l)||k(d))throw new ReferenceError("Duplicated methods ("+l.key+") can't be decorated.");d.descriptor=l.descriptor}else{if(k(l)){if(k(d))throw new ReferenceError("Decorators can't be placed on different accessors with for the same property ("+l.key+").");d.decorators=l.decorators}j(l,d)}else e.push(l)}return e}(u.d.map(v)),t);return d.initializeClassElements(u.F,o.elements),d.runClassFinishers(u.F,o.finishers)}([Object(n.a)("".concat(P,"-structured-list"))],(function(t,e){var r=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}(u,e);var r,s,d,l=p(u);function u(){var e;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u);for(var r=arguments.length,s=new Array(r),d=0;d<r;d++)s[d]=arguments[d];return e=l.call.apply(l,[this].concat(s)),t(m(e)),e}return r=u,s&&b(r.prototype,s),d&&b(r,d),Object.defineProperty(r,"prototype",{writable:!1}),r}(e);return{F:r,d:[{kind:"field",key:"_listMutationObserver",value:function(){return new MutationObserver(this._setColumnSpans.bind(this))}},{kind:"field",key:"_newChildObserver",value:function(){return new MutationObserver(this._resetIntersectionObserver.bind(this))}},{kind:"field",key:"_scrollObserver",value:function(){return new IntersectionObserver(this._handleScroll.bind(this),{root:this,rootMargin:"0px",threshold:[0,.01,.02,.98,.99,1]})}},{kind:"method",key:"_resetIntersectionObserver",value:function(){var t=this;this._scrollObserver.disconnect();var e=this.constructor.cellSelector;this.querySelectorAll(e).forEach((function(e){t._scrollObserver.observe(e)}))}},{kind:"method",key:"_handleScroll",value:function(){var t=this.scrollWidth-this.offsetWidth,e=this.scrollLeft,r=t-e;this.classList.toggle("overflowing-left",e>10),this.classList.toggle("overflowing-right",r>10)}},{kind:"method",key:"_setColumnSpans",value:function(t){var e=this;t.forEach((function(t){var r=t.attributeName;null!=r&&r.startsWith("col-span")&&(e.hasAttribute(r)&&parseInt(e.getAttribute(r),10)?e.style.setProperty("--".concat(r),parseInt(e.getAttribute(r),10).toString()):e.style.removeProperty("--".concat(r)))}))}},{kind:"method",key:"connectedCallback",value:function(){var t=this;this._newChildObserver.observe(this,{childList:!0,subtree:!0,attributes:!1}),this._resetIntersectionObserver(),this.hasAttribute("role")||this.setAttribute("role","table"),R(A(r.prototype),"connectedCallback",this).call(this),this._listMutationObserver.observe(this,{attributes:!0,attributeOldValue:!0}),Object.values(this.attributes).filter((function(t){return t.name.startsWith("col-span")})).forEach((function(e){t.style.setProperty("--".concat(e.name),e.value)}))}},{kind:"method",key:"render",value:function(){return Object(u.c)(g||(g=s||(s=a(['\n      <div class="overflow-indicator left"></div>\n      ','\n      <div class="overflow-indicator right"></div>\n    ']))),this.renderInner())}},{kind:"method",key:"renderInner",value:function(){var t=this.constructor.wrapperId;return Object(u.c)(w||(w=d||(d=a(['\n      <section id="','" class="','--structured-list">\n        <slot></slot>\n      </section>\n    ']))),t,L)}},{kind:"get",static:!0,key:"wrapperId",value:function(){return"section"}},{kind:"get",static:!0,key:"cellSelector",value:function(){return"".concat(P,"-structured-list-cell, ").concat(P,"-structured-list-header-cell")}},{kind:"field",static:!0,key:"styles",value:function(){return c.a}}]}}),Object(i.a)(u.a));e.a=C}}]);